{"contracts":{"contract":{"Exchange":{"abi":[{"constant":true,"inputs":[{"name":"numerator","type":"uint256"},{"name":"denominator","type":"uint256"},{"name":"target","type":"uint256"}],"name":"isRoundingError","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"filled","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"cancelled","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"orderAddresses","type":"address[5][]"},{"name":"orderValues","type":"uint256[6][]"},{"name":"fillTakerTokenAmount","type":"uint256"},{"name":"shouldThrowOnInsufficientBalanceOrAllowance","type":"bool"},{"name":"v","type":"uint8[]"},{"name":"r","type":"bytes32[]"},{"name":"s","type":"bytes32[]"}],"name":"fillOrdersUpTo","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"orderAddresses","type":"address[5]"},{"name":"orderValues","type":"uint256[6]"},{"name":"cancelTakerTokenAmount","type":"uint256"}],"name":"cancelOrder","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"ZRX_TOKEN_CONTRACT","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"orderAddresses","type":"address[5][]"},{"name":"orderValues","type":"uint256[6][]"},{"name":"fillTakerTokenAmounts","type":"uint256[]"},{"name":"v","type":"uint8[]"},{"name":"r","type":"bytes32[]"},{"name":"s","type":"bytes32[]"}],"name":"batchFillOrKillOrders","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"orderAddresses","type":"address[5]"},{"name":"orderValues","type":"uint256[6]"},{"name":"fillTakerTokenAmount","type":"uint256"},{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"}],"name":"fillOrKillOrder","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"orderHash","type":"bytes32"}],"name":"getUnavailableTakerTokenAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"signer","type":"address"},{"name":"hash","type":"bytes32"},{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"}],"name":"isValidSignature","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"numerator","type":"uint256"},{"name":"denominator","type":"uint256"},{"name":"target","type":"uint256"}],"name":"getPartialAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"TOKEN_TRANSFER_PROXY_CONTRACT","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"orderAddresses","type":"address[5][]"},{"name":"orderValues","type":"uint256[6][]"},{"name":"fillTakerTokenAmounts","type":"uint256[]"},{"name":"shouldThrowOnInsufficientBalanceOrAllowance","type":"bool"},{"name":"v","type":"uint8[]"},{"name":"r","type":"bytes32[]"},{"name":"s","type":"bytes32[]"}],"name":"batchFillOrders","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"orderAddresses","type":"address[5][]"},{"name":"orderValues","type":"uint256[6][]"},{"name":"cancelTakerTokenAmounts","type":"uint256[]"}],"name":"batchCancelOrders","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"orderAddresses","type":"address[5]"},{"name":"orderValues","type":"uint256[6]"},{"name":"fillTakerTokenAmount","type":"uint256"},{"name":"shouldThrowOnInsufficientBalanceOrAllowance","type":"bool"},{"name":"v","type":"uint8"},{"name":"r","type":"bytes32"},{"name":"s","type":"bytes32"}],"name":"fillOrder","outputs":[{"name":"filledTakerTokenAmount","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"orderAddresses","type":"address[5]"},{"name":"orderValues","type":"uint256[6]"}],"name":"getOrderHash","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"EXTERNAL_QUERY_GAS_LIMIT","outputs":[{"name":"","type":"uint16"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"VERSION","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"inputs":[{"name":"_zrxToken","type":"address"},{"name":"_tokenTransferProxy","type":"address"}],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"taker","type":"address"},{"indexed":true,"name":"feeRecipient","type":"address"},{"indexed":false,"name":"makerToken","type":"address"},{"indexed":false,"name":"takerToken","type":"address"},{"indexed":false,"name":"filledMakerTokenAmount","type":"uint256"},{"indexed":false,"name":"filledTakerTokenAmount","type":"uint256"},{"indexed":false,"name":"paidMakerFee","type":"uint256"},{"indexed":false,"name":"paidTakerFee","type":"uint256"},{"indexed":true,"name":"tokens","type":"bytes32"},{"indexed":false,"name":"orderHash","type":"bytes32"}],"name":"LogFill","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"maker","type":"address"},{"indexed":true,"name":"feeRecipient","type":"address"},{"indexed":false,"name":"makerToken","type":"address"},{"indexed":false,"name":"takerToken","type":"address"},{"indexed":false,"name":"cancelledMakerTokenAmount","type":"uint256"},{"indexed":false,"name":"cancelledTakerTokenAmount","type":"uint256"},{"indexed":true,"name":"tokens","type":"bytes32"},{"indexed":false,"name":"orderHash","type":"bytes32"}],"name":"LogCancel","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"errorId","type":"uint8"},{"indexed":true,"name":"orderHash","type":"bytes32"}],"name":"LogError","type":"event"}],"devdoc":{"author":"Amir Bandeali - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"76171b1f0436460e2604191c1315025815191b\">[email protected]</a>,>, Will Warren - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\">[email protected]</a>,>\r","methods":{"batchCancelOrders(address[5][],uint256[6][],uint256[])":{"details":"Synchronously cancels multiple orders in a single transaction.\r","params":{"cancelTakerTokenAmounts":"Array of desired amounts of takerToken to cancel in orders.\r","orderAddresses":"Array of address arrays containing individual order addresses.\r","orderValues":"Array of uint arrays containing individual order values.\r"}},"batchFillOrKillOrders(address[5][],uint256[6][],uint256[],uint8[],bytes32[],bytes32[])":{"details":"Synchronously executes multiple fillOrKill orders in a single transaction.\r","params":{"fillTakerTokenAmounts":"Array of desired amounts of takerToken to fill in orders.\r","orderAddresses":"Array of address arrays containing individual order addresses.\r","orderValues":"Array of uint arrays containing individual order values.\r","r":"Array of ECDSA signature r parameters.\r","s":"Array of ECDSA signature s parameters.\r","v":"Array ECDSA signature v parameters.\r"}},"batchFillOrders(address[5][],uint256[6][],uint256[],bool,uint8[],bytes32[],bytes32[])":{"details":"Synchronously executes multiple fill orders in a single transaction.\r","params":{"fillTakerTokenAmounts":"Array of desired amounts of takerToken to fill in orders.\r","orderAddresses":"Array of address arrays containing individual order addresses.\r","orderValues":"Array of uint arrays containing individual order values.\r","r":"Array of ECDSA signature r parameters.\r","s":"Array of ECDSA signature s parameters.\r","shouldThrowOnInsufficientBalanceOrAllowance":"Test if transfers will fail before attempting.\r","v":"Array ECDSA signature v parameters.\r"}},"cancelOrder(address[5],uint256[6],uint256)":{"details":"Cancels the input order.\r","params":{"cancelTakerTokenAmount":"Desired amount of takerToken to cancel in order.\r","orderAddresses":"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\r","orderValues":"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\r"},"return":"Amount of takerToken cancelled.\r"},"fillOrKillOrder(address[5],uint256[6],uint256,uint8,bytes32,bytes32)":{"details":"Fills an order with specified parameters and ECDSA signature, throws if specified amount not filled entirely.\r","params":{"fillTakerTokenAmount":"Desired amount of takerToken to fill.\r","orderAddresses":"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\r","orderValues":"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\r","r":"ECDSA signature parameters r.\r","s":"ECDSA signature parameters s.\r","v":"ECDSA signature parameter v.\r"}},"fillOrder(address[5],uint256[6],uint256,bool,uint8,bytes32,bytes32)":{"details":"Fills the input order.\r","params":{"fillTakerTokenAmount":"Desired amount of takerToken to fill.\r","orderAddresses":"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\r","orderValues":"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\r","r":"ECDSA signature parameters r.\r","s":"ECDSA signature parameters s.\r","shouldThrowOnInsufficientBalanceOrAllowance":"Test if transfer will fail before attempting.\r","v":"ECDSA signature parameter v.\r"},"return":"Total amount of takerToken filled in trade.\r"},"fillOrdersUpTo(address[5][],uint256[6][],uint256,bool,uint8[],bytes32[],bytes32[])":{"details":"Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled.\r","params":{"fillTakerTokenAmount":"Desired total amount of takerToken to fill in orders.\r","orderAddresses":"Array of address arrays containing individual order addresses.\r","orderValues":"Array of uint arrays containing individual order values.\r","r":"Array of ECDSA signature r parameters.\r","s":"Array of ECDSA signature s parameters.\r","shouldThrowOnInsufficientBalanceOrAllowance":"Test if transfers will fail before attempting.\r","v":"Array ECDSA signature v parameters.\r"},"return":"Total amount of fillTakerTokenAmount filled in orders.\r"},"getOrderHash(address[5],uint256[6])":{"details":"Calculates Keccak-256 hash of order with specified parameters.\r","params":{"orderAddresses":"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\r","orderValues":"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\r"},"return":"Keccak-256 hash of order.\r"},"getPartialAmount(uint256,uint256,uint256)":{"details":"Calculates partial value given a numerator and denominator.\r","params":{"denominator":"Denominator.\r","numerator":"Numerator.\r","target":"Value to calculate partial of.\r"},"return":"Partial value of target.\r"},"getUnavailableTakerTokenAmount(bytes32)":{"details":"Calculates the sum of values already filled and cancelled for a given order.\r","params":{"orderHash":"The Keccak-256 hash of the given order.\r"},"return":"Sum of values already filled and cancelled.\r"},"isRoundingError(uint256,uint256,uint256)":{"details":"Checks if rounding error > 0.1%.\r","params":{"denominator":"Denominator.\r","numerator":"Numerator.\r","target":"Value to multiply with numerator/denominator.\r"},"return":"Rounding error is present.\r"},"isValidSignature(address,bytes32,uint8,bytes32,bytes32)":{"details":"Verifies that an order signature is valid.\r","params":{"hash":"Signed Keccak-256 hash.\r","r":"ECDSA signature parameters r.\r","s":"ECDSA signature parameters s.\r","signer":"address of signer.\r","v":"ECDSA signature parameter v.\r"},"return":"Validity of order signature.\r"}},"title":"Exchange - Facilitates exchange of ERC20 tokens.\r"},"evm":{"assembly":"    /* \"contract\":7511:30861  contract Exchange is SafeMath {\r... */\n  mstore(0x40, 0x60)\n    /* \"contract\":9536:9713  function Exchange(address _zrxToken, address _tokenTransferProxy) {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  0x40\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\ntag_2:\n    /* \"contract\":9634:9643  _zrxToken */\n  dup2\n    /* \"contract\":9613:9631  ZRX_TOKEN_CONTRACT */\n  0x0\n  dup1\n    /* \"contract\":9613:9643  ZRX_TOKEN_CONTRACT = _zrxToken */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract\":9686:9705  _tokenTransferProxy */\n  dup1\n    /* \"contract\":9654:9683  TOKEN_TRANSFER_PROXY_CONTRACT */\n  0x1\n  0x0\n    /* \"contract\":9654:9705  TOKEN_TRANSFER_PROXY_CONTRACT = _tokenTransferProxy */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract\":9536:9713  function Exchange(address _zrxToken, address _tokenTransferProxy) {\r... */\ntag_3:\n  pop\n  pop\n    /* \"contract\":7511:30861  contract Exchange is SafeMath {\r... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract\":7511:30861  contract Exchange is SafeMath {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x14df96ee\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x288cdc91\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2ac12622\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x363349be\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x394c21e7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3b30ba59\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4f150787\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x741bcc93\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7e9abb50\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8163681e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x98024a8b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xadd1cbc5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb7b2c7d6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xbaa0181d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbc61394a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcfc4d0ec\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf06bbf75\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xffa1ad74\n      eq\n      tag_19\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contract\":25042:25513  function isRoundingError(uint numerator, uint denominator, uint target)\r... */\n    tag_2:\n      jumpi(tag_20, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_20:\n      tag_21\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":8269:8308  mapping (bytes32 => uint) public filled */\n    tag_3:\n      jumpi(tag_23, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_23:\n      tag_24\n      0x4\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":8315:8357  mapping (bytes32 => uint) public cancelled */\n    tag_4:\n      jumpi(tag_26, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_26:\n      tag_27\n      0x4\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":21171:22186  function fillOrdersUpTo(\r... */\n    tag_5:\n      jumpi(tag_29, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_29:\n      tag_30\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_31:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_32\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xa0\n      mul\n      add\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_31)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_33:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_34\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xc0\n      mul\n      add\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_33)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_35)\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":15009:17000  function cancelOrder(\r... */\n    tag_6:\n      jumpi(tag_36, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_36:\n      tag_37\n      0x4\n      dup1\n      dup1\n      0xa0\n      add\n      swap1\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      0xc0\n      add\n      swap1\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":8094:8127  address public ZRX_TOKEN_CONTRACT */\n    tag_7:\n      jumpi(tag_39, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_39:\n      tag_40\n      jump(tag_41)\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":19892:20423  function batchFillOrKillOrders(\r... */\n    tag_8:\n      jumpi(tag_42, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_42:\n      tag_43\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_44:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_45\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xa0\n      mul\n      add\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_44)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_46:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_47\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xc0\n      mul\n      add\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_46)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_48)\n    tag_43:\n      stop\n        /* \"contract\":17634:18071  function fillOrKillOrder(\r... */\n    tag_9:\n      jumpi(tag_49, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_49:\n      tag_50\n      0x4\n      dup1\n      dup1\n      0xa0\n      add\n      swap1\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      0xc0\n      add\n      swap1\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      stop\n        /* \"contract\":26205:26401  function getUnavailableTakerTokenAmount(bytes32 orderHash)\r... */\n    tag_10:\n      jumpi(tag_52, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_52:\n      tag_53\n      0x4\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_54)\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":24430:24796  function isValidSignature(\r... */\n    tag_11:\n      jumpi(tag_55, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_55:\n      tag_56\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":25769:25979  function getPartialAmount(uint numerator, uint denominator, uint target)\r... */\n    tag_12:\n      jumpi(tag_58, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_58:\n      tag_59\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_60)\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":8134:8178  address public TOKEN_TRANSFER_PROXY_CONTRACT */\n    tag_13:\n      jumpi(tag_61, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_61:\n      tag_62\n      jump(tag_63)\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":18712:19352  function batchFillOrders(\r... */\n    tag_14:\n      jumpi(tag_64, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_64:\n      tag_65\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_66:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_67\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xa0\n      mul\n      add\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_66)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_68:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_69\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xc0\n      mul\n      add\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_68)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_70)\n    tag_65:\n      stop\n        /* \"contract\":22550:22944  function batchCancelOrders(\r... */\n    tag_15:\n      jumpi(tag_71, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_71:\n      tag_72\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_73:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_74\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xa0\n      mul\n      add\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_73)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      swap1\n    tag_75:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_76\n      jumpi\n      dup5\n      dup5\n      dup4\n      swap1\n      pop\n      0xc0\n      mul\n      add\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      jump(tag_75)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_77)\n    tag_72:\n      stop\n        /* \"contract\":10433:14584  function fillOrder(\r... */\n    tag_16:\n      jumpi(tag_78, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_78:\n      tag_79\n      0x4\n      dup1\n      dup1\n      0xa0\n      add\n      swap1\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      0xc0\n      add\n      swap1\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_80)\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":23364:24089  function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\r... */\n    tag_17:\n      jumpi(tag_81, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_81:\n      tag_82\n      0x4\n      dup1\n      dup1\n      0xa0\n      add\n      swap1\n      0x5\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x5)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      dup1\n      0xc0\n      add\n      swap1\n      0x6\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x6)\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_83)\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":7982:8036  uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999 */\n    tag_18:\n      jumpi(tag_84, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_84:\n      tag_85\n      jump(tag_86)\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":7935:7975  string constant public VERSION = \"1.0.0\" */\n    tag_19:\n      jumpi(tag_87, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_87:\n      tag_88\n      jump(tag_89)\n    tag_88:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_90:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":8:108   */\n    tag_92:\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_90)\n    tag_91:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_93:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":25042:25513  function isRoundingError(uint numerator, uint denominator, uint target)\r... */\n    tag_22:\n        /* \"contract\":25166:25170  bool */\n      0x0\n        /* \"contract\":25188:25202  uint remainder */\n      dup1\n        /* \"contract\":25321:25351  uint errPercentageTimes1000000 */\n      0x0\n        /* \"contract\":25231:25242  denominator */\n      dup5\n        /* \"contract\":25220:25229  numerator */\n      dup7\n        /* \"contract\":25212:25218  target */\n      dup6\n        /* \"contract\":25205:25243  mulmod(target, numerator, denominator) */\n      mulmod\n        /* \"contract\":25188:25243  uint remainder = mulmod(target, numerator, denominator) */\n      swap2\n      pop\n        /* \"contract\":25271:25272  0 */\n      0x0\n        /* \"contract\":25258:25267  remainder */\n      dup3\n        /* \"contract\":25258:25272  remainder == 0 */\n      eq\n        /* \"contract\":25254:25286  if (remainder == 0) return false */\n      iszero\n      tag_95\n      jumpi\n        /* \"contract\":25281:25286  false */\n      0x0\n        /* \"contract\":25274:25286  return false */\n      swap3\n      pop\n      jump(tag_94)\n        /* \"contract\":25254:25286  if (remainder == 0) return false */\n    tag_95:\n        /* \"contract\":25354:25455  safeDiv(\r... */\n      tag_96\n        /* \"contract\":25376:25403  safeMul(remainder, 1000000) */\n      tag_97\n        /* \"contract\":25384:25393  remainder */\n      dup4\n        /* \"contract\":25395:25402  1000000 */\n      0xf4240\n        /* \"contract\":25376:25383  safeMul */\n      tag_98\n        /* \"contract\":25376:25403  safeMul(remainder, 1000000) */\n      jump\t// in\n    tag_97:\n        /* \"contract\":25418:25444  safeMul(numerator, target) */\n      tag_99\n        /* \"contract\":25426:25435  numerator */\n      dup9\n        /* \"contract\":25437:25443  target */\n      dup8\n        /* \"contract\":25418:25425  safeMul */\n      tag_98\n        /* \"contract\":25418:25444  safeMul(numerator, target) */\n      jump\t// in\n    tag_99:\n        /* \"contract\":25354:25361  safeDiv */\n      tag_100\n        /* \"contract\":25354:25455  safeDiv(\r... */\n      jump\t// in\n    tag_96:\n        /* \"contract\":25321:25455  uint errPercentageTimes1000000 = safeDiv(\r... */\n      swap1\n      pop\n        /* \"contract\":25501:25505  1000 */\n      0x3e8\n        /* \"contract\":25473:25498  errPercentageTimes1000000 */\n      dup2\n        /* \"contract\":25473:25505  errPercentageTimes1000000 > 1000 */\n      gt\n        /* \"contract\":25466:25505  return errPercentageTimes1000000 > 1000 */\n      swap3\n      pop\n        /* \"contract\":25042:25513  function isRoundingError(uint numerator, uint denominator, uint target)\r... */\n    tag_94:\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":8269:8308  mapping (bytes32 => uint) public filled */\n    tag_25:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contract\":8315:8357  mapping (bytes32 => uint) public cancelled */\n    tag_28:\n      mstore(0x20, 0x3)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contract\":21171:22186  function fillOrdersUpTo(\r... */\n    tag_35:\n        /* \"contract\":21459:21463  uint */\n      0x0\n        /* \"contract\":21481:21508  uint filledTakerTokenAmount */\n      dup1\n        /* \"contract\":21528:21534  uint i */\n      0x0\n        /* \"contract\":21511:21512  0 */\n      dup1\n        /* \"contract\":21481:21512  uint filledTakerTokenAmount = 0 */\n      swap2\n      pop\n        /* \"contract\":21537:21538  0 */\n      0x0\n        /* \"contract\":21528:21538  uint i = 0 */\n      swap1\n      pop\n        /* \"contract\":21523:22139  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_102:\n        /* \"contract\":21544:21558  orderAddresses */\n      dup10\n        /* \"contract\":21544:21565  orderAddresses.length */\n      mload\n        /* \"contract\":21540:21541  i */\n      dup2\n        /* \"contract\":21540:21565  i < orderAddresses.length */\n      lt\n        /* \"contract\":21523:22139  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contract\":21619:21633  orderAddresses */\n      dup10\n        /* \"contract\":21634:21635  0 */\n      0x0\n        /* \"contract\":21619:21636  orderAddresses[0] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":21637:21638  3 */\n      0x3\n        /* \"contract\":21619:21639  orderAddresses[0][3] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":21595:21639  orderAddresses[i][3] == orderAddresses[0][3] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":21595:21609  orderAddresses */\n      dup11\n        /* \"contract\":21610:21611  i */\n      dup3\n        /* \"contract\":21595:21612  orderAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":21613:21614  3 */\n      0x3\n        /* \"contract\":21595:21615  orderAddresses[i][3] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":21595:21639  orderAddresses[i][3] == orderAddresses[0][3] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":21587:21640  require(orderAddresses[i][3] == orderAddresses[0][3]) */\n      iszero\n      iszero\n      tag_109\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_109:\n        /* \"contract\":21726:22055  safeAdd(filledTakerTokenAmount, fillOrder(\r... */\n      tag_110\n        /* \"contract\":21734:21756  filledTakerTokenAmount */\n      dup3\n        /* \"contract\":21758:22054  fillOrder(\r... */\n      tag_111\n        /* \"contract\":21786:21800  orderAddresses */\n      dup13\n        /* \"contract\":21801:21802  i */\n      dup5\n        /* \"contract\":21786:21803  orderAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":21822:21833  orderValues */\n      dup13\n        /* \"contract\":21834:21835  i */\n      dup6\n        /* \"contract\":21822:21836  orderValues[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_113\n      jumpi\n      invalid\n    tag_113:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":21855:21908  safeSub(fillTakerTokenAmount, filledTakerTokenAmount) */\n      tag_114\n        /* \"contract\":21863:21883  fillTakerTokenAmount */\n      dup14\n        /* \"contract\":21885:21907  filledTakerTokenAmount */\n      dup9\n        /* \"contract\":21855:21862  safeSub */\n      tag_115\n        /* \"contract\":21855:21908  safeSub(fillTakerTokenAmount, filledTakerTokenAmount) */\n      jump\t// in\n    tag_114:\n        /* \"contract\":21927:21970  shouldThrowOnInsufficientBalanceOrAllowance */\n      dup13\n        /* \"contract\":21989:21990  v */\n      dup13\n        /* \"contract\":21991:21992  i */\n      dup9\n        /* \"contract\":21989:21993  v[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":22012:22013  r */\n      dup13\n        /* \"contract\":22014:22015  i */\n      dup10\n        /* \"contract\":22012:22016  r[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_117\n      jumpi\n      invalid\n    tag_117:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":22035:22036  s */\n      dup13\n        /* \"contract\":22037:22038  i */\n      dup11\n        /* \"contract\":22035:22039  s[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_118\n      jumpi\n      invalid\n    tag_118:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":21758:21767  fillOrder */\n      tag_80\n        /* \"contract\":21758:22054  fillOrder(\r... */\n      jump\t// in\n    tag_111:\n        /* \"contract\":21726:21733  safeAdd */\n      tag_119\n        /* \"contract\":21726:22055  safeAdd(filledTakerTokenAmount, fillOrder(\r... */\n      jump\t// in\n    tag_110:\n        /* \"contract\":21701:22055  filledTakerTokenAmount = safeAdd(filledTakerTokenAmount, fillOrder(\r... */\n      swap2\n      pop\n        /* \"contract\":22100:22120  fillTakerTokenAmount */\n      dup8\n        /* \"contract\":22074:22096  filledTakerTokenAmount */\n      dup3\n        /* \"contract\":22074:22120  filledTakerTokenAmount == fillTakerTokenAmount */\n      eq\n        /* \"contract\":22070:22127  if (filledTakerTokenAmount == fillTakerTokenAmount) break */\n      iszero\n      tag_120\n      jumpi\n        /* \"contract\":22122:22127  break */\n      jump(tag_103)\n        /* \"contract\":22070:22127  if (filledTakerTokenAmount == fillTakerTokenAmount) break */\n    tag_120:\n        /* \"contract\":21523:22139  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_104:\n        /* \"contract\":21567:21570  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"contract\":21523:22139  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      jump(tag_102)\n    tag_103:\n        /* \"contract\":22156:22178  filledTakerTokenAmount */\n      dup2\n        /* \"contract\":22149:22178  return filledTakerTokenAmount */\n      swap3\n      pop\n        /* \"contract\":21171:22186  function fillOrdersUpTo(\r... */\n    tag_101:\n      pop\n      pop\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":15009:17000  function cancelOrder(\r... */\n    tag_38:\n        /* \"contract\":15169:15173  uint */\n      0x0\n        /* \"contract\":15191:15209  Order memory order */\n      tag_121\n      jump\t// in(tag_122)\n    tag_121:\n        /* \"contract\":16073:16103  uint remainingTakerTokenAmount */\n      0x0\n        /* \"contract\":16197:16227  uint cancelledTakerTokenAmount */\n      dup1\n        /* \"contract\":15212:15736  Order({\r... */\n      0x160\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contract\":15240:15254  orderAddresses */\n      dup9\n        /* \"contract\":15255:15256  0 */\n      0x0\n        /* \"contract\":15240:15257  orderAddresses[0] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_124\n      jumpi\n      invalid\n    tag_124:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15279:15293  orderAddresses */\n      dup9\n        /* \"contract\":15294:15295  1 */\n      0x1\n        /* \"contract\":15279:15296  orderAddresses[1] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_125\n      jumpi\n      invalid\n    tag_125:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15323:15337  orderAddresses */\n      dup9\n        /* \"contract\":15338:15339  2 */\n      0x2\n        /* \"contract\":15323:15340  orderAddresses[2] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_126\n      jumpi\n      invalid\n    tag_126:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15367:15381  orderAddresses */\n      dup9\n        /* \"contract\":15382:15383  3 */\n      0x3\n        /* \"contract\":15367:15384  orderAddresses[3] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_127\n      jumpi\n      invalid\n    tag_127:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15413:15427  orderAddresses */\n      dup9\n        /* \"contract\":15428:15429  4 */\n      0x4\n        /* \"contract\":15413:15430  orderAddresses[4] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15463:15474  orderValues */\n      dup8\n        /* \"contract\":15475:15476  0 */\n      0x0\n        /* \"contract\":15463:15477  orderValues[0] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15510:15521  orderValues */\n      dup8\n        /* \"contract\":15522:15523  1 */\n      0x1\n        /* \"contract\":15510:15524  orderValues[1] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15549:15560  orderValues */\n      dup8\n        /* \"contract\":15561:15562  2 */\n      0x2\n        /* \"contract\":15549:15563  orderValues[2] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15588:15599  orderValues */\n      dup8\n        /* \"contract\":15600:15601  3 */\n      0x3\n        /* \"contract\":15588:15602  orderValues[3] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_132\n      jumpi\n      invalid\n    tag_132:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15643:15654  orderValues */\n      dup8\n        /* \"contract\":15655:15656  4 */\n      0x4\n        /* \"contract\":15643:15657  orderValues[4] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_133\n      jumpi\n      invalid\n    tag_133:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":15212:15736  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":15683:15724  getOrderHash(orderAddresses, orderValues) */\n      tag_134\n        /* \"contract\":15696:15710  orderAddresses */\n      dup10\n        /* \"contract\":15712:15723  orderValues */\n      dup10\n        /* \"contract\":15683:15695  getOrderHash */\n      tag_83\n        /* \"contract\":15683:15724  getOrderHash(orderAddresses, orderValues) */\n      jump\t// in\n    tag_134:\n        /* \"contract\":15212:15736  Order({\r... */\n      not(0x0)\n      and\n      dup2\n      mstore\n      pop\n        /* \"contract\":15191:15736  Order memory order = Order({\r... */\n      swap3\n      pop\n        /* \"contract\":15772:15782  msg.sender */\n      caller\n        /* \"contract\":15757:15782  order.maker == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":15757:15762  order */\n      dup4\n        /* \"contract\":15757:15768  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":15757:15782  order.maker == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":15749:15783  require(order.maker == msg.sender) */\n      iszero\n      iszero\n      tag_135\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_135:\n        /* \"contract\":15827:15828  0 */\n      0x0\n        /* \"contract\":15802:15807  order */\n      dup4\n        /* \"contract\":15802:15824  order.makerTokenAmount */\n      0xa0\n      add\n      mload\n        /* \"contract\":15802:15828  order.makerTokenAmount > 0 */\n      gt\n        /* \"contract\":15802:15858  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"contract\":15857:15858  0 */\n      0x0\n        /* \"contract\":15832:15837  order */\n      dup4\n        /* \"contract\":15832:15854  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":15832:15858  order.takerTokenAmount > 0 */\n      gt\n        /* \"contract\":15802:15858  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 */\n    tag_136:\n        /* \"contract\":15802:15888  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0 */\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n        /* \"contract\":15887:15888  0 */\n      0x0\n        /* \"contract\":15862:15884  cancelTakerTokenAmount */\n      dup6\n        /* \"contract\":15862:15888  cancelTakerTokenAmount > 0 */\n      gt\n        /* \"contract\":15802:15888  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0 */\n    tag_137:\n        /* \"contract\":15794:15889  require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0) */\n      iszero\n      iszero\n      tag_138\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_138:\n        /* \"contract\":15925:15930  order */\n      dup3\n        /* \"contract\":15925:15955  order.expirationTimestampInSec */\n      0x120\n      add\n      mload\n        /* \"contract\":15906:15921  block.timestamp */\n      timestamp\n        /* \"contract\":15906:15955  block.timestamp >= order.expirationTimestampInSec */\n      lt\n      iszero\n        /* \"contract\":15902:16061  if (block.timestamp >= order.expirationTimestampInSec) {\r... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contract\":16010:16015  order */\n      dup3\n        /* \"contract\":16010:16025  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":15972:16026  LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash) */\n      not(0x0)\n      and\n        /* \"contract\":15987:16007  Errors.ORDER_EXPIRED */\n      0x0\n        /* \"contract\":15981:16008  uint8(Errors.ORDER_EXPIRED) */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_140\n      jumpi\n      invalid\n    tag_140:\n        /* \"contract\":15972:16026  LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash) */\n      0xff\n      and\n      0x36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e90\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":16048:16049  0 */\n      0x0\n        /* \"contract\":16041:16049  return 0 */\n      swap4\n      pop\n      jump(tag_123)\n        /* \"contract\":15902:16061  if (block.timestamp >= order.expirationTimestampInSec) {\r... */\n    tag_139:\n        /* \"contract\":16106:16186  safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash)) */\n      tag_141\n        /* \"contract\":16114:16119  order */\n      dup4\n        /* \"contract\":16114:16136  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":16138:16185  getUnavailableTakerTokenAmount(order.orderHash) */\n      tag_142\n        /* \"contract\":16169:16174  order */\n      dup6\n        /* \"contract\":16169:16184  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":16138:16168  getUnavailableTakerTokenAmount */\n      tag_54\n        /* \"contract\":16138:16185  getUnavailableTakerTokenAmount(order.orderHash) */\n      jump\t// in\n    tag_142:\n        /* \"contract\":16106:16113  safeSub */\n      tag_115\n        /* \"contract\":16106:16186  safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash)) */\n      jump\t// in\n    tag_141:\n        /* \"contract\":16073:16186  uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash)) */\n      swap2\n      pop\n        /* \"contract\":16230:16287  min256(cancelTakerTokenAmount, remainingTakerTokenAmount) */\n      tag_143\n        /* \"contract\":16237:16259  cancelTakerTokenAmount */\n      dup6\n        /* \"contract\":16261:16286  remainingTakerTokenAmount */\n      dup4\n        /* \"contract\":16230:16236  min256 */\n      tag_144\n        /* \"contract\":16230:16287  min256(cancelTakerTokenAmount, remainingTakerTokenAmount) */\n      jump\t// in\n    tag_143:\n        /* \"contract\":16197:16287  uint cancelledTakerTokenAmount = min256(cancelTakerTokenAmount, remainingTakerTokenAmount) */\n      swap1\n      pop\n        /* \"contract\":16331:16332  0 */\n      0x0\n        /* \"contract\":16302:16327  cancelledTakerTokenAmount */\n      dup2\n        /* \"contract\":16302:16332  cancelledTakerTokenAmount == 0 */\n      eq\n        /* \"contract\":16298:16456  if (cancelledTakerTokenAmount == 0) {\r... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contract\":16405:16410  order */\n      dup3\n        /* \"contract\":16405:16420  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":16349:16421  LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash) */\n      not(0x0)\n      and\n        /* \"contract\":16364:16402  Errors.ORDER_FULLY_FILLED_OR_CANCELLED */\n      0x1\n        /* \"contract\":16358:16403  uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED) */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      invalid\n    tag_146:\n        /* \"contract\":16349:16421  LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash) */\n      0xff\n      and\n      0x36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e90\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":16443:16444  0 */\n      0x0\n        /* \"contract\":16436:16444  return 0 */\n      swap4\n      pop\n      jump(tag_123)\n        /* \"contract\":16298:16456  if (cancelledTakerTokenAmount == 0) {\r... */\n    tag_145:\n        /* \"contract\":16497:16559  safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount) */\n      tag_147\n        /* \"contract\":16505:16514  cancelled */\n      0x3\n        /* \"contract\":16505:16531  cancelled[order.orderHash] */\n      0x0\n        /* \"contract\":16515:16520  order */\n      dup6\n        /* \"contract\":16515:16530  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":16505:16531  cancelled[order.orderHash] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contract\":16533:16558  cancelledTakerTokenAmount */\n      dup3\n        /* \"contract\":16497:16504  safeAdd */\n      tag_119\n        /* \"contract\":16497:16559  safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount) */\n      jump\t// in\n    tag_147:\n        /* \"contract\":16468:16477  cancelled */\n      0x3\n        /* \"contract\":16468:16494  cancelled[order.orderHash] */\n      0x0\n        /* \"contract\":16478:16483  order */\n      dup6\n        /* \"contract\":16478:16493  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":16468:16494  cancelled[order.orderHash] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contract\":16468:16559  cancelled[order.orderHash] = safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract\":16873:16878  order */\n      dup3\n        /* \"contract\":16873:16889  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":16891:16896  order */\n      dup4\n        /* \"contract\":16891:16907  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":16863:16908  keccak256(order.makerToken, order.takerToken) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contract\":16572:16949  LogCancel(\r... */\n      not(0x0)\n      and\n        /* \"contract\":16622:16627  order */\n      dup4\n        /* \"contract\":16622:16640  order.feeRecipient */\n      0x80\n      add\n      mload\n        /* \"contract\":16572:16949  LogCancel(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":16596:16601  order */\n      dup5\n        /* \"contract\":16596:16607  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":16572:16949  LogCancel(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x67d66f160bc93d925d05dae1794c90d2d6d6688b29b84ff069398a9b04587131\n        /* \"contract\":16655:16660  order */\n      dup7\n        /* \"contract\":16655:16671  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":16686:16691  order */\n      dup8\n        /* \"contract\":16686:16702  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":16717:16808  getPartialAmount(cancelledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      tag_148\n        /* \"contract\":16734:16759  cancelledTakerTokenAmount */\n      dup8\n        /* \"contract\":16761:16766  order */\n      dup11\n        /* \"contract\":16761:16783  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":16785:16790  order */\n      dup12\n        /* \"contract\":16785:16807  order.makerTokenAmount */\n      0xa0\n      add\n      mload\n        /* \"contract\":16717:16733  getPartialAmount */\n      tag_60\n        /* \"contract\":16717:16808  getPartialAmount(cancelledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      jump\t// in\n    tag_148:\n        /* \"contract\":16823:16848  cancelledTakerTokenAmount */\n      dup8\n        /* \"contract\":16923:16928  order */\n      dup11\n        /* \"contract\":16923:16938  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":16572:16949  LogCancel(\r... */\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract\":16967:16992  cancelledTakerTokenAmount */\n      dup1\n        /* \"contract\":16960:16992  return cancelledTakerTokenAmount */\n      swap4\n      pop\n        /* \"contract\":15009:17000  function cancelOrder(\r... */\n    tag_123:\n      pop\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":8094:8127  address public ZRX_TOKEN_CONTRACT */\n    tag_41:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract\":19892:20423  function batchFillOrKillOrders(\r... */\n    tag_48:\n        /* \"contract\":20134:20140  uint i */\n      0x0\n        /* \"contract\":20143:20144  0 */\n      dup1\n        /* \"contract\":20134:20144  uint i = 0 */\n      swap1\n      pop\n        /* \"contract\":20129:20416  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_150:\n        /* \"contract\":20150:20164  orderAddresses */\n      dup7\n        /* \"contract\":20150:20171  orderAddresses.length */\n      mload\n        /* \"contract\":20146:20147  i */\n      dup2\n        /* \"contract\":20146:20171  i < orderAddresses.length */\n      lt\n        /* \"contract\":20129:20416  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contract\":20193:20404  fillOrKillOrder(\r... */\n      tag_153\n        /* \"contract\":20227:20241  orderAddresses */\n      dup8\n        /* \"contract\":20242:20243  i */\n      dup3\n        /* \"contract\":20227:20244  orderAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_154\n      jumpi\n      invalid\n    tag_154:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":20263:20274  orderValues */\n      dup8\n        /* \"contract\":20275:20276  i */\n      dup4\n        /* \"contract\":20263:20277  orderValues[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_155\n      jumpi\n      invalid\n    tag_155:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":20296:20317  fillTakerTokenAmounts */\n      dup8\n        /* \"contract\":20318:20319  i */\n      dup5\n        /* \"contract\":20296:20320  fillTakerTokenAmounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_156\n      jumpi\n      invalid\n    tag_156:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":20339:20340  v */\n      dup8\n        /* \"contract\":20341:20342  i */\n      dup6\n        /* \"contract\":20339:20343  v[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":20362:20363  r */\n      dup8\n        /* \"contract\":20364:20365  i */\n      dup7\n        /* \"contract\":20362:20366  r[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":20385:20386  s */\n      dup8\n        /* \"contract\":20387:20388  i */\n      dup8\n        /* \"contract\":20385:20389  s[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":20193:20208  fillOrKillOrder */\n      tag_51\n        /* \"contract\":20193:20404  fillOrKillOrder(\r... */\n      jump\t// in\n    tag_153:\n        /* \"contract\":20129:20416  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_152:\n        /* \"contract\":20173:20176  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"contract\":20129:20416  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      jump(tag_150)\n    tag_151:\n        /* \"contract\":19892:20423  function batchFillOrKillOrders(\r... */\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":17634:18071  function fillOrKillOrder(\r... */\n    tag_51:\n        /* \"contract\":18042:18062  fillTakerTokenAmount */\n      dup4\n        /* \"contract\":17860:18038  fillOrder(\r... */\n      tag_161\n        /* \"contract\":17884:17898  orderAddresses */\n      dup8\n        /* \"contract\":17913:17924  orderValues */\n      dup8\n        /* \"contract\":17939:17959  fillTakerTokenAmount */\n      dup8\n        /* \"contract\":17974:17979  false */\n      0x0\n        /* \"contract\":17994:17995  v */\n      dup9\n        /* \"contract\":18010:18011  r */\n      dup9\n        /* \"contract\":18026:18027  s */\n      dup9\n        /* \"contract\":17860:17869  fillOrder */\n      tag_80\n        /* \"contract\":17860:18038  fillOrder(\r... */\n      jump\t// in\n    tag_161:\n        /* \"contract\":17860:18062  fillOrder(\r... */\n      eq\n        /* \"contract\":17852:18063  require(fillOrder(\r... */\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n        /* \"contract\":17634:18071  function fillOrKillOrder(\r... */\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":26205:26401  function getUnavailableTakerTokenAmount(bytes32 orderHash)\r... */\n    tag_54:\n        /* \"contract\":26316:26320  uint */\n      0x0\n        /* \"contract\":26345:26393  safeAdd(filled[orderHash], cancelled[orderHash]) */\n      tag_164\n        /* \"contract\":26353:26359  filled */\n      0x2\n        /* \"contract\":26353:26370  filled[orderHash] */\n      0x0\n        /* \"contract\":26360:26369  orderHash */\n      dup5\n        /* \"contract\":26353:26370  filled[orderHash] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contract\":26372:26381  cancelled */\n      0x3\n        /* \"contract\":26372:26392  cancelled[orderHash] */\n      0x0\n        /* \"contract\":26382:26391  orderHash */\n      dup6\n        /* \"contract\":26372:26392  cancelled[orderHash] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contract\":26345:26352  safeAdd */\n      tag_119\n        /* \"contract\":26345:26393  safeAdd(filled[orderHash], cancelled[orderHash]) */\n      jump\t// in\n    tag_164:\n        /* \"contract\":26338:26393  return safeAdd(filled[orderHash], cancelled[orderHash]) */\n      swap1\n      pop\n        /* \"contract\":26205:26401  function getUnavailableTakerTokenAmount(bytes32 orderHash)\r... */\n    tag_163:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract\":24430:24796  function isValidSignature(\r... */\n    tag_57:\n        /* \"contract\":24615:24619  bool */\n      0x0\n        /* \"contract\":24654:24788  ecrecover(\r... */\n      0x1\n        /* \"contract\":24724:24728  hash */\n      dup6\n        /* \"contract\":24678:24729  keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      mload(0x40)\n      dup1\n      dup1\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n      dup2\n      mstore\n      pop\n      0x1c\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contract\":24744:24745  v */\n      dup6\n        /* \"contract\":24760:24761  r */\n      dup6\n        /* \"contract\":24776:24777  s */\n      dup6\n        /* \"contract\":24654:24788  ecrecover(\r... */\n      mload(0x40)\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup1\n      dup6\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      0x0\n      dup7\n      sub(gas, 0x646e)\n      call\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contract\":24644:24788  signer == ecrecover(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":24644:24650  signer */\n      dup7\n        /* \"contract\":24644:24788  signer == ecrecover(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":24637:24788  return signer == ecrecover(\r... */\n      swap1\n      pop\n        /* \"contract\":24430:24796  function isValidSignature(\r... */\n    tag_165:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":25769:25979  function getPartialAmount(uint numerator, uint denominator, uint target)\r... */\n    tag_60:\n        /* \"contract\":25894:25898  uint */\n      0x0\n        /* \"contract\":25923:25971  safeDiv(safeMul(numerator, target), denominator) */\n      tag_168\n        /* \"contract\":25931:25957  safeMul(numerator, target) */\n      tag_169\n        /* \"contract\":25939:25948  numerator */\n      dup6\n        /* \"contract\":25950:25956  target */\n      dup5\n        /* \"contract\":25931:25938  safeMul */\n      tag_98\n        /* \"contract\":25931:25957  safeMul(numerator, target) */\n      jump\t// in\n    tag_169:\n        /* \"contract\":25959:25970  denominator */\n      dup5\n        /* \"contract\":25923:25930  safeDiv */\n      tag_100\n        /* \"contract\":25923:25971  safeDiv(safeMul(numerator, target), denominator) */\n      jump\t// in\n    tag_168:\n        /* \"contract\":25916:25971  return safeDiv(safeMul(numerator, target), denominator) */\n      swap1\n      pop\n        /* \"contract\":25769:25979  function getPartialAmount(uint numerator, uint denominator, uint target)\r... */\n    tag_167:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":8134:8178  address public TOKEN_TRANSFER_PROXY_CONTRACT */\n    tag_63:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract\":18712:19352  function batchFillOrders(\r... */\n    tag_70:\n        /* \"contract\":19007:19013  uint i */\n      0x0\n        /* \"contract\":19016:19017  0 */\n      dup1\n        /* \"contract\":19007:19017  uint i = 0 */\n      swap1\n      pop\n        /* \"contract\":19002:19345  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_171:\n        /* \"contract\":19023:19037  orderAddresses */\n      dup8\n        /* \"contract\":19023:19044  orderAddresses.length */\n      mload\n        /* \"contract\":19019:19020  i */\n      dup2\n        /* \"contract\":19019:19044  i < orderAddresses.length */\n      lt\n        /* \"contract\":19002:19345  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      iszero\n      tag_172\n      jumpi\n        /* \"contract\":19066:19333  fillOrder(\r... */\n      tag_174\n        /* \"contract\":19094:19108  orderAddresses */\n      dup9\n        /* \"contract\":19109:19110  i */\n      dup3\n        /* \"contract\":19094:19111  orderAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":19130:19141  orderValues */\n      dup9\n        /* \"contract\":19142:19143  i */\n      dup4\n        /* \"contract\":19130:19144  orderValues[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_176\n      jumpi\n      invalid\n    tag_176:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":19163:19184  fillTakerTokenAmounts */\n      dup9\n        /* \"contract\":19185:19186  i */\n      dup5\n        /* \"contract\":19163:19187  fillTakerTokenAmounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_177\n      jumpi\n      invalid\n    tag_177:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":19206:19249  shouldThrowOnInsufficientBalanceOrAllowance */\n      dup9\n        /* \"contract\":19268:19269  v */\n      dup9\n        /* \"contract\":19270:19271  i */\n      dup7\n        /* \"contract\":19268:19272  v[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":19291:19292  r */\n      dup9\n        /* \"contract\":19293:19294  i */\n      dup8\n        /* \"contract\":19291:19295  r[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":19314:19315  s */\n      dup9\n        /* \"contract\":19316:19317  i */\n      dup9\n        /* \"contract\":19314:19318  s[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_180\n      jumpi\n      invalid\n    tag_180:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":19066:19075  fillOrder */\n      tag_80\n        /* \"contract\":19066:19333  fillOrder(\r... */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"contract\":19002:19345  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_173:\n        /* \"contract\":19046:19049  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"contract\":19002:19345  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      jump(tag_171)\n    tag_172:\n        /* \"contract\":18712:19352  function batchFillOrders(\r... */\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":22550:22944  function batchCancelOrders(\r... */\n    tag_77:\n        /* \"contract\":22726:22732  uint i */\n      0x0\n        /* \"contract\":22735:22736  0 */\n      dup1\n        /* \"contract\":22726:22736  uint i = 0 */\n      swap1\n      pop\n        /* \"contract\":22721:22937  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_182:\n        /* \"contract\":22742:22756  orderAddresses */\n      dup4\n        /* \"contract\":22742:22763  orderAddresses.length */\n      mload\n        /* \"contract\":22738:22739  i */\n      dup2\n        /* \"contract\":22738:22763  i < orderAddresses.length */\n      lt\n        /* \"contract\":22721:22937  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contract\":22785:22925  cancelOrder(\r... */\n      tag_185\n        /* \"contract\":22815:22829  orderAddresses */\n      dup5\n        /* \"contract\":22830:22831  i */\n      dup3\n        /* \"contract\":22815:22832  orderAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_186\n      jumpi\n      invalid\n    tag_186:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":22851:22862  orderValues */\n      dup5\n        /* \"contract\":22863:22864  i */\n      dup4\n        /* \"contract\":22851:22865  orderValues[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":22884:22907  cancelTakerTokenAmounts */\n      dup5\n        /* \"contract\":22908:22909  i */\n      dup5\n        /* \"contract\":22884:22910  cancelTakerTokenAmounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_188\n      jumpi\n      invalid\n    tag_188:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":22785:22796  cancelOrder */\n      tag_38\n        /* \"contract\":22785:22925  cancelOrder(\r... */\n      jump\t// in\n    tag_185:\n      pop\n        /* \"contract\":22721:22937  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n    tag_184:\n        /* \"contract\":22765:22768  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"contract\":22721:22937  for (uint i = 0; i < orderAddresses.length; i++) {\r... */\n      jump(tag_182)\n    tag_183:\n        /* \"contract\":22550:22944  function batchCancelOrders(\r... */\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":10433:14584  function fillOrder(\r... */\n    tag_80:\n        /* \"contract\":10724:10751  uint filledTakerTokenAmount */\n      0x0\n        /* \"contract\":10769:10787  Order memory order */\n      tag_189\n      jump\t// in(tag_122)\n    tag_189:\n        /* \"contract\":11829:11859  uint remainingTakerTokenAmount */\n      0x0\n        /* \"contract\":12667:12694  uint filledMakerTokenAmount */\n      dup1\n        /* \"contract\":12796:12813  uint paidMakerFee */\n      0x0\n        /* \"contract\":12824:12841  uint paidTakerFee */\n      dup1\n        /* \"contract\":10790:11314  Order({\r... */\n      0x160\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contract\":10818:10832  orderAddresses */\n      dup15\n        /* \"contract\":10833:10834  0 */\n      0x0\n        /* \"contract\":10818:10835  orderAddresses[0] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_191\n      jumpi\n      invalid\n    tag_191:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":10857:10871  orderAddresses */\n      dup15\n        /* \"contract\":10872:10873  1 */\n      0x1\n        /* \"contract\":10857:10874  orderAddresses[1] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":10901:10915  orderAddresses */\n      dup15\n        /* \"contract\":10916:10917  2 */\n      0x2\n        /* \"contract\":10901:10918  orderAddresses[2] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_193\n      jumpi\n      invalid\n    tag_193:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":10945:10959  orderAddresses */\n      dup15\n        /* \"contract\":10960:10961  3 */\n      0x3\n        /* \"contract\":10945:10962  orderAddresses[3] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":10991:11005  orderAddresses */\n      dup15\n        /* \"contract\":11006:11007  4 */\n      0x4\n        /* \"contract\":10991:11008  orderAddresses[4] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_195\n      jumpi\n      invalid\n    tag_195:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":11041:11052  orderValues */\n      dup14\n        /* \"contract\":11053:11054  0 */\n      0x0\n        /* \"contract\":11041:11055  orderValues[0] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":11088:11099  orderValues */\n      dup14\n        /* \"contract\":11100:11101  1 */\n      0x1\n        /* \"contract\":11088:11102  orderValues[1] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_197\n      jumpi\n      invalid\n    tag_197:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":11127:11138  orderValues */\n      dup14\n        /* \"contract\":11139:11140  2 */\n      0x2\n        /* \"contract\":11127:11141  orderValues[2] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_198\n      jumpi\n      invalid\n    tag_198:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":11166:11177  orderValues */\n      dup14\n        /* \"contract\":11178:11179  3 */\n      0x3\n        /* \"contract\":11166:11180  orderValues[3] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_199\n      jumpi\n      invalid\n    tag_199:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":11221:11232  orderValues */\n      dup14\n        /* \"contract\":11233:11234  4 */\n      0x4\n        /* \"contract\":11221:11235  orderValues[4] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_200\n      jumpi\n      invalid\n    tag_200:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":10790:11314  Order({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contract\":11261:11302  getOrderHash(orderAddresses, orderValues) */\n      tag_201\n        /* \"contract\":11274:11288  orderAddresses */\n      dup16\n        /* \"contract\":11290:11301  orderValues */\n      dup16\n        /* \"contract\":11261:11273  getOrderHash */\n      tag_83\n        /* \"contract\":11261:11302  getOrderHash(orderAddresses, orderValues) */\n      jump\t// in\n    tag_201:\n        /* \"contract\":10790:11314  Order({\r... */\n      not(0x0)\n      and\n      dup2\n      mstore\n      pop\n        /* \"contract\":10769:11314  Order memory order = Order({\r... */\n      swap5\n      pop\n        /* \"contract\":11358:11359  0 */\n      0x0\n        /* \"contract\":11335:11360  order.taker == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":11335:11340  order */\n      dup6\n        /* \"contract\":11335:11346  order.taker */\n      0x20\n      add\n      mload\n        /* \"contract\":11335:11360  order.taker == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":11335:11389  order.taker == address(0) || order.taker == msg.sender */\n      dup1\n      tag_202\n      jumpi\n      pop\n        /* \"contract\":11379:11389  msg.sender */\n      caller\n        /* \"contract\":11364:11389  order.taker == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":11364:11369  order */\n      dup6\n        /* \"contract\":11364:11375  order.taker */\n      0x20\n      add\n      mload\n        /* \"contract\":11364:11389  order.taker == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":11335:11389  order.taker == address(0) || order.taker == msg.sender */\n    tag_202:\n        /* \"contract\":11327:11390  require(order.taker == address(0) || order.taker == msg.sender) */\n      iszero\n      iszero\n      tag_203\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_203:\n        /* \"contract\":11434:11435  0 */\n      0x0\n        /* \"contract\":11409:11414  order */\n      dup6\n        /* \"contract\":11409:11431  order.makerTokenAmount */\n      0xa0\n      add\n      mload\n        /* \"contract\":11409:11435  order.makerTokenAmount > 0 */\n      gt\n        /* \"contract\":11409:11465  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"contract\":11464:11465  0 */\n      0x0\n        /* \"contract\":11439:11444  order */\n      dup6\n        /* \"contract\":11439:11461  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":11439:11465  order.takerTokenAmount > 0 */\n      gt\n        /* \"contract\":11409:11465  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 */\n    tag_204:\n        /* \"contract\":11409:11493  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0 */\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n        /* \"contract\":11492:11493  0 */\n      0x0\n        /* \"contract\":11469:11489  fillTakerTokenAmount */\n      dup12\n        /* \"contract\":11469:11493  fillTakerTokenAmount > 0 */\n      gt\n        /* \"contract\":11409:11493  order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0 */\n    tag_205:\n        /* \"contract\":11401:11494  require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0) */\n      iszero\n      iszero\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contract\":11513:11644  isValidSignature(\r... */\n      tag_207\n        /* \"contract\":11544:11549  order */\n      dup6\n        /* \"contract\":11544:11555  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":11570:11575  order */\n      dup7\n        /* \"contract\":11570:11585  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":11600:11601  v */\n      dup12\n        /* \"contract\":11616:11617  r */\n      dup12\n        /* \"contract\":11632:11633  s */\n      dup12\n        /* \"contract\":11513:11529  isValidSignature */\n      tag_57\n        /* \"contract\":11513:11644  isValidSignature(\r... */\n      jump\t// in\n    tag_207:\n        /* \"contract\":11505:11645  require(isValidSignature(\r... */\n      iszero\n      iszero\n      tag_208\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_208:\n        /* \"contract\":11681:11686  order */\n      dup5\n        /* \"contract\":11681:11711  order.expirationTimestampInSec */\n      0x120\n      add\n      mload\n        /* \"contract\":11662:11677  block.timestamp */\n      timestamp\n        /* \"contract\":11662:11711  block.timestamp >= order.expirationTimestampInSec */\n      lt\n      iszero\n        /* \"contract\":11658:11817  if (block.timestamp >= order.expirationTimestampInSec) {\r... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contract\":11766:11771  order */\n      dup5\n        /* \"contract\":11766:11781  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":11728:11782  LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash) */\n      not(0x0)\n      and\n        /* \"contract\":11743:11763  Errors.ORDER_EXPIRED */\n      0x0\n        /* \"contract\":11737:11764  uint8(Errors.ORDER_EXPIRED) */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      invalid\n    tag_210:\n        /* \"contract\":11728:11782  LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash) */\n      0xff\n      and\n      0x36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e90\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":11804:11805  0 */\n      0x0\n        /* \"contract\":11797:11805  return 0 */\n      swap6\n      pop\n      jump(tag_190)\n        /* \"contract\":11658:11817  if (block.timestamp >= order.expirationTimestampInSec) {\r... */\n    tag_209:\n        /* \"contract\":11862:11942  safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash)) */\n      tag_211\n        /* \"contract\":11870:11875  order */\n      dup6\n        /* \"contract\":11870:11892  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":11894:11941  getUnavailableTakerTokenAmount(order.orderHash) */\n      tag_212\n        /* \"contract\":11925:11930  order */\n      dup8\n        /* \"contract\":11925:11940  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":11894:11924  getUnavailableTakerTokenAmount */\n      tag_54\n        /* \"contract\":11894:11941  getUnavailableTakerTokenAmount(order.orderHash) */\n      jump\t// in\n    tag_212:\n        /* \"contract\":11862:11869  safeSub */\n      tag_115\n        /* \"contract\":11862:11942  safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash)) */\n      jump\t// in\n    tag_211:\n        /* \"contract\":11829:11942  uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash)) */\n      swap4\n      pop\n        /* \"contract\":11978:12033  min256(fillTakerTokenAmount, remainingTakerTokenAmount) */\n      tag_213\n        /* \"contract\":11985:12005  fillTakerTokenAmount */\n      dup12\n        /* \"contract\":12007:12032  remainingTakerTokenAmount */\n      dup6\n        /* \"contract\":11978:11984  min256 */\n      tag_144\n        /* \"contract\":11978:12033  min256(fillTakerTokenAmount, remainingTakerTokenAmount) */\n      jump\t// in\n    tag_213:\n        /* \"contract\":11953:12033  filledTakerTokenAmount = min256(fillTakerTokenAmount, remainingTakerTokenAmount) */\n      swap6\n      pop\n        /* \"contract\":12074:12075  0 */\n      0x0\n        /* \"contract\":12048:12070  filledTakerTokenAmount */\n      dup7\n        /* \"contract\":12048:12075  filledTakerTokenAmount == 0 */\n      eq\n        /* \"contract\":12044:12199  if (filledTakerTokenAmount == 0) {\r... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contract\":12148:12153  order */\n      dup5\n        /* \"contract\":12148:12163  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":12092:12164  LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash) */\n      not(0x0)\n      and\n        /* \"contract\":12107:12145  Errors.ORDER_FULLY_FILLED_OR_CANCELLED */\n      0x1\n        /* \"contract\":12101:12146  uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED) */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n        /* \"contract\":12092:12164  LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash) */\n      0xff\n      and\n      0x36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e90\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":12186:12187  0 */\n      0x0\n        /* \"contract\":12179:12187  return 0 */\n      swap6\n      pop\n      jump(tag_190)\n        /* \"contract\":12044:12199  if (filledTakerTokenAmount == 0) {\r... */\n    tag_214:\n        /* \"contract\":12215:12302  isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      tag_216\n        /* \"contract\":12231:12253  filledTakerTokenAmount */\n      dup7\n        /* \"contract\":12255:12260  order */\n      dup7\n        /* \"contract\":12255:12277  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":12279:12284  order */\n      dup8\n        /* \"contract\":12279:12301  order.makerTokenAmount */\n      0xa0\n      add\n      mload\n        /* \"contract\":12215:12230  isRoundingError */\n      tag_22\n        /* \"contract\":12215:12302  isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      jump\t// in\n    tag_216:\n        /* \"contract\":12211:12419  if (isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount)) {\r... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contract\":12368:12373  order */\n      dup5\n        /* \"contract\":12368:12383  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":12319:12384  LogError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), order.orderHash) */\n      not(0x0)\n      and\n        /* \"contract\":12334:12365  Errors.ROUNDING_ERROR_TOO_LARGE */\n      0x2\n        /* \"contract\":12328:12366  uint8(Errors.ROUNDING_ERROR_TOO_LARGE) */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_218\n      jumpi\n      invalid\n    tag_218:\n        /* \"contract\":12319:12384  LogError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), order.orderHash) */\n      0xff\n      and\n      0x36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e90\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":12406:12407  0 */\n      0x0\n        /* \"contract\":12399:12407  return 0 */\n      swap6\n      pop\n      jump(tag_190)\n        /* \"contract\":12211:12419  if (isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount)) {\r... */\n    tag_217:\n        /* \"contract\":12436:12479  shouldThrowOnInsufficientBalanceOrAllowance */\n      dup10\n        /* \"contract\":12435:12479  !shouldThrowOnInsufficientBalanceOrAllowance */\n      iszero\n        /* \"contract\":12435:12529  !shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount) */\n      dup1\n      iszero\n      tag_219\n      jumpi\n      pop\n        /* \"contract\":12484:12529  isTransferable(order, filledTakerTokenAmount) */\n      tag_220\n        /* \"contract\":12499:12504  order */\n      dup6\n        /* \"contract\":12506:12528  filledTakerTokenAmount */\n      dup8\n        /* \"contract\":12484:12498  isTransferable */\n      tag_221\n        /* \"contract\":12484:12529  isTransferable(order, filledTakerTokenAmount) */\n      jump\t// in\n    tag_220:\n        /* \"contract\":12483:12529  !isTransferable(order, filledTakerTokenAmount) */\n      iszero\n        /* \"contract\":12435:12529  !shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount) */\n    tag_219:\n        /* \"contract\":12431:12655  if (!shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount)) {\r... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contract\":12604:12609  order */\n      dup5\n        /* \"contract\":12604:12619  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":12546:12620  LogError(uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE), order.orderHash) */\n      not(0x0)\n      and\n        /* \"contract\":12561:12601  Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE */\n      0x3\n        /* \"contract\":12555:12602  uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE) */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n        /* \"contract\":12546:12620  LogError(uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE), order.orderHash) */\n      0xff\n      and\n      0x36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e90\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":12642:12643  0 */\n      0x0\n        /* \"contract\":12635:12643  return 0 */\n      swap6\n      pop\n      jump(tag_190)\n        /* \"contract\":12431:12655  if (!shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount)) {\r... */\n    tag_222:\n        /* \"contract\":12697:12785  getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      tag_224\n        /* \"contract\":12714:12736  filledTakerTokenAmount */\n      dup7\n        /* \"contract\":12738:12743  order */\n      dup7\n        /* \"contract\":12738:12760  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":12762:12767  order */\n      dup8\n        /* \"contract\":12762:12784  order.makerTokenAmount */\n      0xa0\n      add\n      mload\n        /* \"contract\":12697:12713  getPartialAmount */\n      tag_60\n        /* \"contract\":12697:12785  getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      jump\t// in\n    tag_224:\n        /* \"contract\":12667:12785  uint filledMakerTokenAmount = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      swap3\n      pop\n        /* \"contract\":12878:12934  safeAdd(filled[order.orderHash], filledTakerTokenAmount) */\n      tag_225\n        /* \"contract\":12886:12892  filled */\n      0x2\n        /* \"contract\":12886:12909  filled[order.orderHash] */\n      0x0\n        /* \"contract\":12893:12898  order */\n      dup8\n        /* \"contract\":12893:12908  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":12886:12909  filled[order.orderHash] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contract\":12911:12933  filledTakerTokenAmount */\n      dup8\n        /* \"contract\":12878:12885  safeAdd */\n      tag_119\n        /* \"contract\":12878:12934  safeAdd(filled[order.orderHash], filledTakerTokenAmount) */\n      jump\t// in\n    tag_225:\n        /* \"contract\":12852:12858  filled */\n      0x2\n        /* \"contract\":12852:12875  filled[order.orderHash] */\n      0x0\n        /* \"contract\":12859:12864  order */\n      dup8\n        /* \"contract\":12859:12874  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":12852:12875  filled[order.orderHash] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contract\":12852:12934  filled[order.orderHash] = safeAdd(filled[order.orderHash], filledTakerTokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract\":12953:13112  transferViaTokenTransferProxy(\r... */\n      tag_226\n        /* \"contract\":12997:13002  order */\n      dup6\n        /* \"contract\":12997:13013  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":13028:13033  order */\n      dup7\n        /* \"contract\":13028:13039  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":13054:13064  msg.sender */\n      caller\n        /* \"contract\":13079:13101  filledMakerTokenAmount */\n      dup7\n        /* \"contract\":12953:12982  transferViaTokenTransferProxy */\n      tag_227\n        /* \"contract\":12953:13112  transferViaTokenTransferProxy(\r... */\n      jump\t// in\n    tag_226:\n        /* \"contract\":12945:13113  require(transferViaTokenTransferProxy(\r... */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contract\":13132:13291  transferViaTokenTransferProxy(\r... */\n      tag_229\n        /* \"contract\":13176:13181  order */\n      dup6\n        /* \"contract\":13176:13192  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":13207:13217  msg.sender */\n      caller\n        /* \"contract\":13232:13237  order */\n      dup8\n        /* \"contract\":13232:13243  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":13258:13280  filledTakerTokenAmount */\n      dup10\n        /* \"contract\":13132:13161  transferViaTokenTransferProxy */\n      tag_227\n        /* \"contract\":13132:13291  transferViaTokenTransferProxy(\r... */\n      jump\t// in\n    tag_229:\n        /* \"contract\":13124:13292  require(transferViaTokenTransferProxy(\r... */\n      iszero\n      iszero\n      tag_230\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_230:\n        /* \"contract\":13337:13338  0 */\n      0x0\n        /* \"contract\":13307:13339  order.feeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":13307:13312  order */\n      dup6\n        /* \"contract\":13307:13325  order.feeRecipient */\n      0x80\n      add\n      mload\n        /* \"contract\":13307:13339  order.feeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract\":13303:14142  if (order.feeRecipient != address(0)) {\r... */\n      iszero\n      tag_231\n      jumpi\n        /* \"contract\":13377:13378  0 */\n      0x0\n        /* \"contract\":13360:13365  order */\n      dup6\n        /* \"contract\":13360:13374  order.makerFee */\n      0xe0\n      add\n      mload\n        /* \"contract\":13360:13378  order.makerFee > 0 */\n      gt\n        /* \"contract\":13356:13737  if (order.makerFee > 0) {\r... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contract\":13414:13494  getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee) */\n      tag_233\n        /* \"contract\":13431:13453  filledTakerTokenAmount */\n      dup7\n        /* \"contract\":13455:13460  order */\n      dup7\n        /* \"contract\":13455:13477  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":13479:13484  order */\n      dup8\n        /* \"contract\":13479:13493  order.makerFee */\n      0xe0\n      add\n      mload\n        /* \"contract\":13414:13430  getPartialAmount */\n      tag_60\n        /* \"contract\":13414:13494  getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee) */\n      jump\t// in\n    tag_233:\n        /* \"contract\":13399:13494  paidMakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee) */\n      swap2\n      pop\n        /* \"contract\":13521:13720  transferViaTokenTransferProxy(\r... */\n      tag_234\n        /* \"contract\":13573:13591  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":13614:13619  order */\n      dup7\n        /* \"contract\":13614:13625  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":13648:13653  order */\n      dup8\n        /* \"contract\":13648:13666  order.feeRecipient */\n      0x80\n      add\n      mload\n        /* \"contract\":13689:13701  paidMakerFee */\n      dup6\n        /* \"contract\":13521:13550  transferViaTokenTransferProxy */\n      tag_227\n        /* \"contract\":13521:13720  transferViaTokenTransferProxy(\r... */\n      jump\t// in\n    tag_234:\n        /* \"contract\":13513:13721  require(transferViaTokenTransferProxy(\r... */\n      iszero\n      iszero\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n        /* \"contract\":13356:13737  if (order.makerFee > 0) {\r... */\n    tag_232:\n        /* \"contract\":13772:13773  0 */\n      0x0\n        /* \"contract\":13755:13760  order */\n      dup6\n        /* \"contract\":13755:13769  order.takerFee */\n      0x100\n      add\n      mload\n        /* \"contract\":13755:13773  order.takerFee > 0 */\n      gt\n        /* \"contract\":13751:14131  if (order.takerFee > 0) {\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contract\":13809:13889  getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee) */\n      tag_237\n        /* \"contract\":13826:13848  filledTakerTokenAmount */\n      dup7\n        /* \"contract\":13850:13855  order */\n      dup7\n        /* \"contract\":13850:13872  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":13874:13879  order */\n      dup8\n        /* \"contract\":13874:13888  order.takerFee */\n      0x100\n      add\n      mload\n        /* \"contract\":13809:13825  getPartialAmount */\n      tag_60\n        /* \"contract\":13809:13889  getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee) */\n      jump\t// in\n    tag_237:\n        /* \"contract\":13794:13889  paidTakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee) */\n      swap1\n      pop\n        /* \"contract\":13916:14114  transferViaTokenTransferProxy(\r... */\n      tag_238\n        /* \"contract\":13968:13986  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":14009:14019  msg.sender */\n      caller\n        /* \"contract\":14042:14047  order */\n      dup8\n        /* \"contract\":14042:14060  order.feeRecipient */\n      0x80\n      add\n      mload\n        /* \"contract\":14083:14095  paidTakerFee */\n      dup5\n        /* \"contract\":13916:13945  transferViaTokenTransferProxy */\n      tag_227\n        /* \"contract\":13916:14114  transferViaTokenTransferProxy(\r... */\n      jump\t// in\n    tag_238:\n        /* \"contract\":13908:14115  require(transferViaTokenTransferProxy(\r... */\n      iszero\n      iszero\n      tag_239\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_239:\n        /* \"contract\":13751:14131  if (order.takerFee > 0) {\r... */\n    tag_236:\n        /* \"contract\":13303:14142  if (order.feeRecipient != address(0)) {\r... */\n    tag_231:\n        /* \"contract\":14460:14465  order */\n      dup5\n        /* \"contract\":14460:14476  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":14478:14483  order */\n      dup6\n        /* \"contract\":14478:14494  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":14450:14495  keccak256(order.makerToken, order.takerToken) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contract\":14154:14536  LogFill(\r... */\n      not(0x0)\n      and\n        /* \"contract\":14227:14232  order */\n      dup6\n        /* \"contract\":14227:14245  order.feeRecipient */\n      0x80\n      add\n      mload\n        /* \"contract\":14154:14536  LogFill(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":14176:14181  order */\n      dup7\n        /* \"contract\":14176:14187  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":14154:14536  LogFill(\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0b9391970d9a25552f37d436d2aae2925e2bfe1b2a923754bada030c498cb3\n        /* \"contract\":14202:14212  msg.sender */\n      caller\n        /* \"contract\":14260:14265  order */\n      dup10\n        /* \"contract\":14260:14276  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":14291:14296  order */\n      dup11\n        /* \"contract\":14291:14307  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":14322:14344  filledMakerTokenAmount */\n      dup10\n        /* \"contract\":14359:14381  filledTakerTokenAmount */\n      dup14\n        /* \"contract\":14396:14408  paidMakerFee */\n      dup11\n        /* \"contract\":14423:14435  paidTakerFee */\n      dup11\n        /* \"contract\":14510:14515  order */\n      dup16\n        /* \"contract\":14510:14525  order.orderHash */\n      0x140\n      add\n      mload\n        /* \"contract\":14154:14536  LogFill(\r... */\n      mload(0x40)\n      dup1\n      dup10\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract\":14554:14576  filledTakerTokenAmount */\n      dup6\n        /* \"contract\":14547:14576  return filledTakerTokenAmount */\n      swap6\n      pop\n        /* \"contract\":10433:14584  function fillOrder(\r... */\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":23364:24089  function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\r... */\n    tag_83:\n        /* \"contract\":23486:23493  bytes32 */\n      0x0\n        /* \"contract\":23550:23554  this */\n      address\n        /* \"contract\":23570:23584  orderAddresses */\n      dup4\n        /* \"contract\":23585:23586  0 */\n      0x0\n        /* \"contract\":23570:23587  orderAddresses[0] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23611:23625  orderAddresses */\n      dup5\n        /* \"contract\":23626:23627  1 */\n      0x1\n        /* \"contract\":23611:23628  orderAddresses[1] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_242\n      jumpi\n      invalid\n    tag_242:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23652:23666  orderAddresses */\n      dup6\n        /* \"contract\":23667:23668  2 */\n      0x2\n        /* \"contract\":23652:23669  orderAddresses[2] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_243\n      jumpi\n      invalid\n    tag_243:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23698:23712  orderAddresses */\n      dup7\n        /* \"contract\":23713:23714  3 */\n      0x3\n        /* \"contract\":23698:23715  orderAddresses[3] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_244\n      jumpi\n      invalid\n    tag_244:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23744:23758  orderAddresses */\n      dup8\n        /* \"contract\":23759:23760  4 */\n      0x4\n        /* \"contract\":23744:23761  orderAddresses[4] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_245\n      jumpi\n      invalid\n    tag_245:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23792:23803  orderValues */\n      dup8\n        /* \"contract\":23804:23805  0 */\n      0x0\n        /* \"contract\":23792:23806  orderValues[0] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23844:23855  orderValues */\n      dup9\n        /* \"contract\":23856:23857  1 */\n      0x1\n        /* \"contract\":23844:23858  orderValues[1] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23896:23907  orderValues */\n      dup10\n        /* \"contract\":23908:23909  2 */\n      0x2\n        /* \"contract\":23896:23910  orderValues[2] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23940:23951  orderValues */\n      dup11\n        /* \"contract\":23952:23953  3 */\n      0x3\n        /* \"contract\":23940:23954  orderValues[3] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_249\n      jumpi\n      invalid\n    tag_249:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23984:23995  orderValues */\n      dup12\n        /* \"contract\":23996:23997  4 */\n      0x4\n        /* \"contract\":23984:23998  orderValues[4] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_250\n      jumpi\n      invalid\n    tag_250:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":24044:24055  orderValues */\n      dup13\n        /* \"contract\":24056:24057  5 */\n      0x5\n        /* \"contract\":24044:24058  orderValues[5] */\n      0x6\n      dup2\n      lt\n      iszero\n      iszero\n      tag_251\n      jumpi\n      invalid\n    tag_251:\n      0x20\n      mul\n      add\n      mload\n        /* \"contract\":23518:24081  keccak256(\r... */\n      mload(0x40)\n      dup1\n      dup14\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup13\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup12\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup11\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup10\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contract\":23511:24081  return keccak256(\r... */\n      swap1\n      pop\n        /* \"contract\":23364:24089  function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\r... */\n    tag_240:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":7982:8036  uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999 */\n    tag_86:\n        /* \"contract\":8032:8036  4999 */\n      0x1387\n        /* \"contract\":7982:8036  uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999 */\n      dup2\n      jump\t// out\n        /* \"contract\":7935:7975  string constant public VERSION = \"1.0.0\" */\n    tag_89:\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x5\n      dup2\n      mstore\n      0x20\n      add\n      0x312e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contract\":6065:6225  function safeMul(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_98:\n        /* \"contract\":6125:6132  uint256 */\n      0x0\n        /* \"contract\":6145:6151  uint c */\n      dup1\n        /* \"contract\":6158:6159  b */\n      dup3\n        /* \"contract\":6154:6155  a */\n      dup5\n        /* \"contract\":6154:6159  a * b */\n      mul\n        /* \"contract\":6145:6159  uint c = a * b */\n      swap1\n      pop\n        /* \"contract\":6182:6183  0 */\n      0x0\n        /* \"contract\":6177:6178  a */\n      dup5\n        /* \"contract\":6177:6183  a == 0 */\n      eq\n        /* \"contract\":6177:6197  a == 0 || c / a == b */\n      dup1\n      tag_253\n      jumpi\n      pop\n        /* \"contract\":6196:6197  b */\n      dup3\n        /* \"contract\":6191:6192  a */\n      dup5\n        /* \"contract\":6187:6188  c */\n      dup3\n        /* \"contract\":6187:6192  c / a */\n      dup2\n      iszero\n      iszero\n      tag_254\n      jumpi\n      invalid\n    tag_254:\n      div\n        /* \"contract\":6187:6197  c / a == b */\n      eq\n        /* \"contract\":6177:6197  a == 0 || c / a == b */\n    tag_253:\n        /* \"contract\":6170:6198  assert(a == 0 || c / a == b) */\n      iszero\n      iszero\n      tag_255\n      jumpi\n      invalid\n    tag_255:\n        /* \"contract\":6216:6217  c */\n      dup1\n        /* \"contract\":6209:6217  return c */\n      swap2\n      pop\n        /* \"contract\":6065:6225  function safeMul(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_252:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":6233:6354  function safeDiv(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_100:\n        /* \"contract\":6293:6300  uint256 */\n      0x0\n        /* \"contract\":6313:6319  uint c */\n      dup1\n        /* \"contract\":6326:6327  b */\n      dup3\n        /* \"contract\":6322:6323  a */\n      dup5\n        /* \"contract\":6322:6327  a / b */\n      dup2\n      iszero\n      iszero\n      tag_257\n      jumpi\n      invalid\n    tag_257:\n      div\n        /* \"contract\":6313:6327  uint c = a / b */\n      swap1\n      pop\n        /* \"contract\":6345:6346  c */\n      dup1\n        /* \"contract\":6338:6346  return c */\n      swap2\n      pop\n        /* \"contract\":6233:6354  function safeDiv(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_256:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":6362:6487  function safeSub(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_115:\n        /* \"contract\":6422:6429  uint256 */\n      0x0\n        /* \"contract\":6454:6455  a */\n      dup3\n        /* \"contract\":6449:6450  b */\n      dup3\n        /* \"contract\":6449:6455  b <= a */\n      gt\n      iszero\n        /* \"contract\":6442:6456  assert(b <= a) */\n      iszero\n      iszero\n      tag_259\n      jumpi\n      invalid\n    tag_259:\n        /* \"contract\":6478:6479  b */\n      dup2\n        /* \"contract\":6474:6475  a */\n      dup4\n        /* \"contract\":6474:6479  a - b */\n      sub\n        /* \"contract\":6467:6479  return a - b */\n      swap1\n      pop\n        /* \"contract\":6362:6487  function safeSub(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_258:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":6495:6641  function safeAdd(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_119:\n        /* \"contract\":6555:6562  uint256 */\n      0x0\n        /* \"contract\":6575:6581  uint c */\n      dup1\n        /* \"contract\":6588:6589  b */\n      dup3\n        /* \"contract\":6584:6585  a */\n      dup5\n        /* \"contract\":6584:6589  a + b */\n      add\n        /* \"contract\":6575:6589  uint c = a + b */\n      swap1\n      pop\n        /* \"contract\":6612:6613  a */\n      dup4\n        /* \"contract\":6607:6608  c */\n      dup2\n        /* \"contract\":6607:6613  c >= a */\n      lt\n      iszero\n        /* \"contract\":6600:6614  assert(c >= a) */\n      iszero\n      iszero\n      tag_261\n      jumpi\n      invalid\n    tag_261:\n        /* \"contract\":6632:6633  c */\n      dup1\n        /* \"contract\":6625:6633  return c */\n      swap2\n      pop\n        /* \"contract\":6495:6641  function safeAdd(uint a, uint b) internal constant returns (uint256) {\r... */\n    tag_260:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":7006:7119  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r... */\n    tag_144:\n        /* \"contract\":7071:7078  uint256 */\n      0x0\n        /* \"contract\":7102:7103  b */\n      dup2\n        /* \"contract\":7098:7099  a */\n      dup4\n        /* \"contract\":7098:7103  a < b */\n      lt\n        /* \"contract\":7098:7111  a < b ? a : b */\n      tag_263\n      jumpi\n        /* \"contract\":7110:7111  b */\n      dup2\n        /* \"contract\":7098:7111  a < b ? a : b */\n      jump(tag_264)\n    tag_263:\n        /* \"contract\":7106:7107  a */\n      dup3\n        /* \"contract\":7098:7111  a < b ? a : b */\n    tag_264:\n        /* \"contract\":7091:7111  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contract\":7006:7119  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r... */\n    tag_262:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":27319:29717  function isTransferable(Order order, uint fillTakerTokenAmount)\r... */\n    tag_221:\n        /* \"contract\":27571:27575  bool */\n      0x0\n        /* \"contract\":27593:27606  address taker */\n      dup1\n        /* \"contract\":27630:27655  uint fillMakerTokenAmount */\n      0x0\n        /* \"contract\":27810:27830  bool isMakerTokenZRX */\n      dup1\n        /* \"contract\":27886:27906  bool isTakerTokenZRX */\n      0x0\n        /* \"contract\":27962:27979  uint paidMakerFee */\n      dup1\n        /* \"contract\":28075:28092  uint paidTakerFee */\n      0x0\n        /* \"contract\":28188:28209  uint requiredMakerZRX */\n      dup1\n        /* \"contract\":28303:28324  uint requiredTakerZRX */\n      0x0\n        /* \"contract\":27609:27619  msg.sender */\n      caller\n        /* \"contract\":27593:27619  address taker = msg.sender */\n      swap8\n      pop\n        /* \"contract\":27658:27744  getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      tag_266\n        /* \"contract\":27675:27695  fillTakerTokenAmount */\n      dup11\n        /* \"contract\":27697:27702  order */\n      dup13\n        /* \"contract\":27697:27719  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":27721:27726  order */\n      dup14\n        /* \"contract\":27721:27743  order.makerTokenAmount */\n      0xa0\n      add\n      mload\n        /* \"contract\":27658:27674  getPartialAmount */\n      tag_60\n        /* \"contract\":27658:27744  getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      jump\t// in\n    tag_266:\n        /* \"contract\":27630:27744  uint fillMakerTokenAmount = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount) */\n      swap7\n      pop\n        /* \"contract\":27791:27792  0 */\n      0x0\n        /* \"contract\":27761:27793  order.feeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":27761:27766  order */\n      dup12\n        /* \"contract\":27761:27779  order.feeRecipient */\n      0x80\n      add\n      mload\n        /* \"contract\":27761:27793  order.feeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract\":27757:29685  if (order.feeRecipient != address(0)) {\r... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contract\":27853:27871  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":27833:27871  order.makerToken == ZRX_TOKEN_CONTRACT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":27833:27838  order */\n      dup12\n        /* \"contract\":27833:27849  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":27833:27871  order.makerToken == ZRX_TOKEN_CONTRACT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":27810:27871  bool isMakerTokenZRX = order.makerToken == ZRX_TOKEN_CONTRACT */\n      swap6\n      pop\n        /* \"contract\":27929:27947  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":27909:27947  order.takerToken == ZRX_TOKEN_CONTRACT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":27909:27914  order */\n      dup12\n        /* \"contract\":27909:27925  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":27909:27947  order.takerToken == ZRX_TOKEN_CONTRACT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":27886:27947  bool isTakerTokenZRX = order.takerToken == ZRX_TOKEN_CONTRACT */\n      swap5\n      pop\n        /* \"contract\":27982:28060  getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee) */\n      tag_268\n        /* \"contract\":27999:28019  fillTakerTokenAmount */\n      dup11\n        /* \"contract\":28021:28026  order */\n      dup13\n        /* \"contract\":28021:28043  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":28045:28050  order */\n      dup14\n        /* \"contract\":28045:28059  order.makerFee */\n      0xe0\n      add\n      mload\n        /* \"contract\":27982:27998  getPartialAmount */\n      tag_60\n        /* \"contract\":27982:28060  getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee) */\n      jump\t// in\n    tag_268:\n        /* \"contract\":27962:28060  uint paidMakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee) */\n      swap4\n      pop\n        /* \"contract\":28095:28173  getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee) */\n      tag_269\n        /* \"contract\":28112:28132  fillTakerTokenAmount */\n      dup11\n        /* \"contract\":28134:28139  order */\n      dup13\n        /* \"contract\":28134:28156  order.takerTokenAmount */\n      0xc0\n      add\n      mload\n        /* \"contract\":28158:28163  order */\n      dup14\n        /* \"contract\":28158:28172  order.takerFee */\n      0x100\n      add\n      mload\n        /* \"contract\":28095:28111  getPartialAmount */\n      tag_60\n        /* \"contract\":28095:28173  getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee) */\n      jump\t// in\n    tag_269:\n        /* \"contract\":28075:28173  uint paidTakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee) */\n      swap3\n      pop\n        /* \"contract\":28212:28227  isMakerTokenZRX */\n      dup6\n        /* \"contract\":28212:28288  isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee */\n      tag_270\n      jumpi\n        /* \"contract\":28276:28288  paidMakerFee */\n      dup4\n        /* \"contract\":28212:28288  isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee */\n      jump(tag_271)\n    tag_270:\n        /* \"contract\":28230:28273  safeAdd(fillMakerTokenAmount, paidMakerFee) */\n      tag_272\n        /* \"contract\":28238:28258  fillMakerTokenAmount */\n      dup8\n        /* \"contract\":28260:28272  paidMakerFee */\n      dup6\n        /* \"contract\":28230:28237  safeAdd */\n      tag_119\n        /* \"contract\":28230:28273  safeAdd(fillMakerTokenAmount, paidMakerFee) */\n      jump\t// in\n    tag_272:\n        /* \"contract\":28212:28288  isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee */\n    tag_271:\n        /* \"contract\":28188:28288  uint requiredMakerZRX = isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee */\n      swap2\n      pop\n        /* \"contract\":28327:28342  isTakerTokenZRX */\n      dup5\n        /* \"contract\":28327:28403  isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee */\n      tag_273\n      jumpi\n        /* \"contract\":28391:28403  paidTakerFee */\n      dup3\n        /* \"contract\":28327:28403  isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee */\n      jump(tag_274)\n    tag_273:\n        /* \"contract\":28345:28388  safeAdd(fillTakerTokenAmount, paidTakerFee) */\n      tag_275\n        /* \"contract\":28353:28373  fillTakerTokenAmount */\n      dup11\n        /* \"contract\":28375:28387  paidTakerFee */\n      dup5\n        /* \"contract\":28345:28352  safeAdd */\n      tag_119\n        /* \"contract\":28345:28388  safeAdd(fillTakerTokenAmount, paidTakerFee) */\n      jump\t// in\n    tag_275:\n        /* \"contract\":28327:28403  isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee */\n    tag_274:\n        /* \"contract\":28303:28403  uint requiredTakerZRX = isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee */\n      swap1\n      pop\n        /* \"contract\":28473:28489  requiredMakerZRX */\n      dup2\n        /* \"contract\":28427:28470  getBalance(ZRX_TOKEN_CONTRACT, order.maker) */\n      tag_276\n        /* \"contract\":28438:28456  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":28458:28463  order */\n      dup14\n        /* \"contract\":28458:28469  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":28427:28437  getBalance */\n      tag_277\n        /* \"contract\":28427:28470  getBalance(ZRX_TOKEN_CONTRACT, order.maker) */\n      jump\t// in\n    tag_276:\n        /* \"contract\":28427:28489  getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX */\n      lt\n        /* \"contract\":28427:28574  getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n      dup1\n      tag_278\n      jumpi\n      pop\n        /* \"contract\":28558:28574  requiredMakerZRX */\n      dup2\n        /* \"contract\":28510:28555  getAllowance(ZRX_TOKEN_CONTRACT, order.maker) */\n      tag_279\n        /* \"contract\":28523:28541  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":28543:28548  order */\n      dup14\n        /* \"contract\":28543:28554  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":28510:28522  getAllowance */\n      tag_280\n        /* \"contract\":28510:28555  getAllowance(ZRX_TOKEN_CONTRACT, order.maker) */\n      jump\t// in\n    tag_279:\n        /* \"contract\":28510:28574  getAllowance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX */\n      lt\n        /* \"contract\":28427:28574  getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n    tag_278:\n        /* \"contract\":28427:28651  getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n      dup1\n      tag_281\n      jumpi\n      pop\n        /* \"contract\":28635:28651  requiredTakerZRX */\n      dup1\n        /* \"contract\":28595:28632  getBalance(ZRX_TOKEN_CONTRACT, taker) */\n      tag_282\n        /* \"contract\":28606:28624  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":28626:28631  taker */\n      dup11\n        /* \"contract\":28595:28605  getBalance */\n      tag_277\n        /* \"contract\":28595:28632  getBalance(ZRX_TOKEN_CONTRACT, taker) */\n      jump\t// in\n    tag_282:\n        /* \"contract\":28595:28651  getBalance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX */\n      lt\n        /* \"contract\":28427:28651  getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n    tag_281:\n        /* \"contract\":28427:28730  getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n      dup1\n      tag_283\n      jumpi\n      pop\n        /* \"contract\":28714:28730  requiredTakerZRX */\n      dup1\n        /* \"contract\":28672:28711  getAllowance(ZRX_TOKEN_CONTRACT, taker) */\n      tag_284\n        /* \"contract\":28685:28703  ZRX_TOKEN_CONTRACT */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":28705:28710  taker */\n      dup11\n        /* \"contract\":28672:28684  getAllowance */\n      tag_280\n        /* \"contract\":28672:28711  getAllowance(ZRX_TOKEN_CONTRACT, taker) */\n      jump\t// in\n    tag_284:\n        /* \"contract\":28672:28730  getAllowance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX */\n      lt\n        /* \"contract\":28427:28730  getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n    tag_283:\n        /* \"contract\":28420:28758  if (   getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n      iszero\n      tag_285\n      jumpi\n        /* \"contract\":28753:28758  false */\n      0x0\n        /* \"contract\":28746:28758  return false */\n      swap9\n      pop\n      jump(tag_265)\n        /* \"contract\":28420:28758  if (   getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\r... */\n    tag_285:\n        /* \"contract\":28780:28795  isMakerTokenZRX */\n      dup6\n        /* \"contract\":28779:28795  !isMakerTokenZRX */\n      iszero\n        /* \"contract\":28779:29016  !isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\r... */\n      dup1\n      iszero\n      tag_286\n      jumpi\n      pop\n        /* \"contract\":28847:28867  fillMakerTokenAmount */\n      dup7\n        /* \"contract\":28803:28844  getBalance(order.makerToken, order.maker) */\n      tag_287\n        /* \"contract\":28814:28819  order */\n      dup13\n        /* \"contract\":28814:28830  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":28832:28837  order */\n      dup14\n        /* \"contract\":28832:28843  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":28803:28813  getBalance */\n      tag_277\n        /* \"contract\":28803:28844  getBalance(order.makerToken, order.maker) */\n      jump\t// in\n    tag_287:\n        /* \"contract\":28803:28867  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount */\n      lt\n        /* \"contract\":28803:29015  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\r... */\n      dup1\n      tag_288\n      jumpi\n      pop\n        /* \"contract\":28995:29015  fillMakerTokenAmount */\n      dup7\n        /* \"contract\":28949:28992  getAllowance(order.makerToken, order.maker) */\n      tag_289\n        /* \"contract\":28962:28967  order */\n      dup13\n        /* \"contract\":28962:28978  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":28980:28985  order */\n      dup14\n        /* \"contract\":28980:28991  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":28949:28961  getAllowance */\n      tag_280\n        /* \"contract\":28949:28992  getAllowance(order.makerToken, order.maker) */\n      jump\t// in\n    tag_289:\n        /* \"contract\":28949:29015  getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount */\n      lt\n        /* \"contract\":28803:29015  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\r... */\n    tag_288:\n        /* \"contract\":28779:29016  !isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\r... */\n    tag_286:\n        /* \"contract\":28775:29044  if (!isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\r... */\n      iszero\n      tag_290\n      jumpi\n        /* \"contract\":29039:29044  false */\n      0x0\n        /* \"contract\":29032:29044  return false */\n      swap9\n      pop\n      jump(tag_265)\n        /* \"contract\":28775:29044  if (!isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\r... */\n    tag_290:\n        /* \"contract\":29064:29079  isTakerTokenZRX */\n      dup5\n        /* \"contract\":29063:29079  !isTakerTokenZRX */\n      iszero\n        /* \"contract\":29063:29288  !isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\r... */\n      dup1\n      iszero\n      tag_291\n      jumpi\n      pop\n        /* \"contract\":29125:29145  fillTakerTokenAmount */\n      dup10\n        /* \"contract\":29087:29122  getBalance(order.takerToken, taker) */\n      tag_292\n        /* \"contract\":29098:29103  order */\n      dup13\n        /* \"contract\":29098:29114  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":29116:29121  taker */\n      dup11\n        /* \"contract\":29087:29097  getBalance */\n      tag_277\n        /* \"contract\":29087:29122  getBalance(order.takerToken, taker) */\n      jump\t// in\n    tag_292:\n        /* \"contract\":29087:29145  getBalance(order.takerToken, taker) < fillTakerTokenAmount */\n      lt\n        /* \"contract\":29087:29287  getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\r... */\n      dup1\n      tag_293\n      jumpi\n      pop\n        /* \"contract\":29267:29287  fillTakerTokenAmount */\n      dup10\n        /* \"contract\":29227:29264  getAllowance(order.takerToken, taker) */\n      tag_294\n        /* \"contract\":29240:29245  order */\n      dup13\n        /* \"contract\":29240:29256  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":29258:29263  taker */\n      dup11\n        /* \"contract\":29227:29239  getAllowance */\n      tag_280\n        /* \"contract\":29227:29264  getAllowance(order.takerToken, taker) */\n      jump\t// in\n    tag_294:\n        /* \"contract\":29227:29287  getAllowance(order.takerToken, taker) < fillTakerTokenAmount */\n      lt\n        /* \"contract\":29087:29287  getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\r... */\n    tag_293:\n        /* \"contract\":29063:29288  !isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\r... */\n    tag_291:\n        /* \"contract\":29059:29316  if (!isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\r... */\n      iszero\n      tag_295\n      jumpi\n        /* \"contract\":29311:29316  false */\n      0x0\n        /* \"contract\":29304:29316  return false */\n      swap9\n      pop\n      jump(tag_265)\n        /* \"contract\":29059:29316  if (!isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\r... */\n    tag_295:\n        /* \"contract\":27757:29685  if (order.feeRecipient != address(0)) {\r... */\n      jump(tag_296)\n    tag_267:\n        /* \"contract\":29385:29405  fillMakerTokenAmount */\n      dup7\n        /* \"contract\":29341:29382  getBalance(order.makerToken, order.maker) */\n      tag_297\n        /* \"contract\":29352:29357  order */\n      dup13\n        /* \"contract\":29352:29368  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":29370:29375  order */\n      dup14\n        /* \"contract\":29370:29381  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":29341:29351  getBalance */\n      tag_277\n        /* \"contract\":29341:29382  getBalance(order.makerToken, order.maker) */\n      jump\t// in\n    tag_297:\n        /* \"contract\":29341:29405  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount */\n      lt\n        /* \"contract\":29341:29495  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n      dup1\n      tag_298\n      jumpi\n      pop\n        /* \"contract\":29475:29495  fillMakerTokenAmount */\n      dup7\n        /* \"contract\":29429:29472  getAllowance(order.makerToken, order.maker) */\n      tag_299\n        /* \"contract\":29442:29447  order */\n      dup13\n        /* \"contract\":29442:29458  order.makerToken */\n      0x40\n      add\n      mload\n        /* \"contract\":29460:29465  order */\n      dup14\n        /* \"contract\":29460:29471  order.maker */\n      0x0\n      add\n      mload\n        /* \"contract\":29429:29441  getAllowance */\n      tag_280\n        /* \"contract\":29429:29472  getAllowance(order.makerToken, order.maker) */\n      jump\t// in\n    tag_299:\n        /* \"contract\":29429:29495  getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount */\n      lt\n        /* \"contract\":29341:29495  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n    tag_298:\n        /* \"contract\":29341:29577  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n      dup1\n      tag_300\n      jumpi\n      pop\n        /* \"contract\":29557:29577  fillTakerTokenAmount */\n      dup10\n        /* \"contract\":29519:29554  getBalance(order.takerToken, taker) */\n      tag_301\n        /* \"contract\":29530:29535  order */\n      dup13\n        /* \"contract\":29530:29546  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":29548:29553  taker */\n      dup11\n        /* \"contract\":29519:29529  getBalance */\n      tag_277\n        /* \"contract\":29519:29554  getBalance(order.takerToken, taker) */\n      jump\t// in\n    tag_301:\n        /* \"contract\":29519:29577  getBalance(order.takerToken, taker) < fillTakerTokenAmount */\n      lt\n        /* \"contract\":29341:29577  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n    tag_300:\n        /* \"contract\":29341:29661  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n      dup1\n      tag_302\n      jumpi\n      pop\n        /* \"contract\":29641:29661  fillTakerTokenAmount */\n      dup10\n        /* \"contract\":29601:29638  getAllowance(order.takerToken, taker) */\n      tag_303\n        /* \"contract\":29614:29619  order */\n      dup13\n        /* \"contract\":29614:29630  order.takerToken */\n      0x60\n      add\n      mload\n        /* \"contract\":29632:29637  taker */\n      dup11\n        /* \"contract\":29601:29613  getAllowance */\n      tag_280\n        /* \"contract\":29601:29638  getAllowance(order.takerToken, taker) */\n      jump\t// in\n    tag_303:\n        /* \"contract\":29601:29661  getAllowance(order.takerToken, taker) < fillTakerTokenAmount */\n      lt\n        /* \"contract\":29341:29661  getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n    tag_302:\n        /* \"contract\":29334:29685  if (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n      iszero\n      tag_304\n      jumpi\n        /* \"contract\":29680:29685  false */\n      0x0\n        /* \"contract\":29673:29685  return false */\n      swap9\n      pop\n      jump(tag_265)\n        /* \"contract\":29334:29685  if (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\r... */\n    tag_304:\n        /* \"contract\":27757:29685  if (order.feeRecipient != address(0)) {\r... */\n    tag_296:\n        /* \"contract\":29705:29709  true */\n      0x1\n        /* \"contract\":29698:29709  return true */\n      swap9\n      pop\n        /* \"contract\":27319:29717  function isTransferable(Order order, uint fillTakerTokenAmount)\r... */\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":26778:27066  function transferViaTokenTransferProxy(\r... */\n    tag_227:\n        /* \"contract\":26943:26947  bool */\n      0x0\n        /* \"contract\":26991:27020  TOKEN_TRANSFER_PROXY_CONTRACT */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":26972:27034  TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x15dacbea\n        /* \"contract\":27035:27040  token */\n      dup7\n        /* \"contract\":27042:27046  from */\n      dup7\n        /* \"contract\":27048:27050  to */\n      dup7\n        /* \"contract\":27052:27057  value */\n      dup7\n        /* \"contract\":26972:27058  TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom(token, from, to, value) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_306\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_306:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_307\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_307:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contract\":26965:27058  return TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom(token, from, to, value) */\n      swap1\n      pop\n        /* \"contract\":26778:27066  function transferViaTokenTransferProxy(\r... */\n    tag_305:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":29893:30238  function getBalance(address token, address owner)\r... */\n    tag_277:\n        /* \"contract\":30107:30111  uint */\n      0x0\n        /* \"contract\":30142:30147  token */\n      dup3\n        /* \"contract\":30136:30158  Token(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contract\":8032:8036  4999 */\n      0x1387\n        /* \"contract\":30136:30188  Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT) */\n      0xffff\n      and\n        /* \"contract\":30189:30194  owner */\n      dup5\n        /* \"contract\":30136:30195  Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup9\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_309\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_309:\n      dup8\n      call\n      iszero\n      iszero\n      tag_310\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_310:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contract\":30129:30195  return Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner) */\n      swap1\n      pop\n        /* \"contract\":29893:30238  function getBalance(address token, address owner)\r... */\n    tag_308:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":30480:30858  function getAllowance(address token, address owner)\r... */\n    tag_280:\n        /* \"contract\":30696:30700  uint */\n      0x0\n        /* \"contract\":30731:30736  token */\n      dup3\n        /* \"contract\":30725:30747  Token(token).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contract\":8032:8036  4999 */\n      0x1387\n        /* \"contract\":30725:30777  Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT) */\n      0xffff\n      and\n        /* \"contract\":30778:30783  owner */\n      dup5\n        /* \"contract\":30785:30814  TOKEN_TRANSFER_PROXY_CONTRACT */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":30725:30815  Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner, TOKEN_TRANSFER_PROXY_CONTRACT) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup9\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_312\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_312:\n      dup8\n      call\n      iszero\n      iszero\n      tag_313\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contract\":30718:30815  return Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner, TOKEN_TRANSFER_PROXY_CONTRACT) */\n      swap1\n      pop\n        /* \"contract\":30480:30858  function getAllowance(address token, address owner)\r... */\n    tag_311:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":7511:30861  contract Exchange is SafeMath {\r... */\n    tag_122:\n      0x160\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      dup1\n      not\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058205e29fca27c237714946be3a272456b24a9fb2b50c978b1c659981e51e4423a170029\n}\n","bytecode":{"linkReferences":{},"object":"6060604052341561000f57600080fd5b604051604080612c4d833981016040528080519060200190919080519060200190919050505b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505b612b84806100c96000396000f300606060405236156100fa576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806314df96ee146100ff578063288cdc911461014c5780632ac1262214610187578063363349be146101c2578063394c21e7146103bc5780633b30ba591461044b5780634f150787146104a0578063741bcc93146106b25780637e9abb50146107535780638163681e1461078e57806398024a8b14610812578063add1cbc51461085b578063b7b2c7d6146108b0578063baa0181d14610acd578063bc61394a14610c1f578063cfc4d0ec14610cdf578063f06bbf7514610d6d578063ffa1ad7414610d9e575b600080fd5b341561010a57600080fd5b6101326004808035906020019091908035906020019091908035906020019091905050610e2d565b604051808215151515815260200191505060405180910390f35b341561015757600080fd5b610171600480803560001916906020019091905050610e7c565b6040518082815260200191505060405180910390f35b341561019257600080fd5b6101ac600480803560001916906020019091905050610e94565b6040518082815260200191505060405180910390f35b34156101cd57600080fd5b6103a660048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b8282101561024857848483905060a002016005806020026040519081016040528092919082600560200280828437820191505050505081526020019060010190610203565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b828210156102c457848483905060c00201600680602002604051908101604052809291908260066020028082843782019150505050508152602001906001019061027f565b5050505050919080359060200190919080351515906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091905050610eac565b6040518082815260200191505060405180910390f35b34156103c757600080fd5b6104356004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c001906006806020026040519081016040528092919082600660200280828437820191505050505091908035906020019091905050611013565b6040518082815260200191505060405180910390f35b341561045657600080fd5b61045e6114fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104ab57600080fd5b6106b060048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b8282101561052657848483905060a0020160058060200260405190810160405280929190826005602002808284378201915050505050815260200190600101906104e1565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b828210156105a257848483905060c00201600680602002604051908101604052809291908260066020028082843782019150505050508152602001906001019061055d565b50505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091905050611520565b005b34156106bd57600080fd5b6107516004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c00190600680602002604051908101604052809291908260066020028082843782019150505050509190803590602001909190803560ff1690602001909190803560001916906020019091908035600019169060200190919050506115df565b005b341561075e57600080fd5b610778600480803560001916906020019091905050611605565b6040518082815260200191505060405180910390f35b341561079957600080fd5b6107f8600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080356000191690602001909190803560ff16906020019091908035600019169060200190919080356000191690602001909190505061164f565b604051808215151515815260200191505060405180910390f35b341561081d57600080fd5b6108456004808035906020019091908035906020019091908035906020019091905050611757565b6040518082815260200191505060405180910390f35b341561086657600080fd5b61086e611776565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156108bb57600080fd5b610acb60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b8282101561093657848483905060a0020160058060200260405190810160405280929190826005602002808284378201915050505050815260200190600101906108f1565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b828210156109b257848483905060c00201600680602002604051908101604052809291908260066020028082843782019150505050508152602001906001019061096d565bc565b005b3415610ad857600080fd5b610c1d60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b82821015610b5357848483905060a002016005806020026040519081016040528092919082600560200280828437820191505050505081526020019060010190610b0e565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b82821015610bcf57848483905060c002016006806020026040519081016040528092919082600660200280828437820191505050505081526020019060010190610b8a565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190505061185e565b005b3415610c2a57600080fd5b610cc96004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c001906006806020026040519081016040528092919082600660200280828437820191505050505091908035906020019091908035151590602001909190803560ff1690602001909190803560001916906020019091908035600019169060200190919050506118d3565b6040518082815260200191505060405180910390f35b3415610cea57600080fd5b610d4f6004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c001906006806020026040519081016040528092919082600660200280828437820191505050505091905050612073565b60405180826000191660001916815260200191505060405180910390f35b3415610d7857600080fd5b610d8061231f565b604051808261ffff1661ffff16815260200191505060405180910390f35b3415610da957600080fd5b610db1612325565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610df25780820151818401525b602081019050610dd6565b50505050905090810190601f168015610e1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008060008486850991506000821415610e4a5760009250610e73565b610e69610e5a83620f424061235e565b610e64888761235e565b612392565b90506103e8811192505b50509392505050565b60026020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6000806000809150600090505b895181101561100257896000815181101515610ed157fe5b906020019060200201516003600581101515610ee957fe5b602002015173ffffffffffffffffffffffffffffffffffffffff168a82815181101515610f1257fe5b906020019060200201516003600581101515610f2a57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16141515610f5157600080fd5b610fe582610fe08c84815181101515610f6657fe5b906020019060200201518c85815181101515610f7e57fe5b90602001906020020151610f928d886123ae565b8c8c88815181101515610fa157fe5b906020019060200201518c89815181101515610fb957fe5b906020019060200201518c8a815181101515610fd157fe5b906020019060200201516118d3565b6123c8565b915087821415610ff457611002565b5b8080600101915050610eb9565b8192505b5050979650505050505050565b600061101d612a8c565b6000806101606040519081016040528088600060058110151561103c57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200188600160058110151561106b57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200188600260058110151561109a57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018860036005811015156110c957fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018860046005811015156110f857fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200187600060068110151561112757fe5b6020020151815260200187600160068110151561114057fe5b6020020151815260200187600260068110151561115957fe5b6020020151815260200187600360068110151561117257fe5b6020020151815260200187600460068110151561118b57fe5b6020020151815260200161119f8989612073565b6000191681525092503373ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff161415156111e657600080fd5b60008360a001511180156111fe575060008360c00151115b801561120a5750600085115b151561121557600080fd5b8261012001514210151561127257826101400151600019166000600381111561123a57fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a3600093506114f1565b61128d8360c00151611288856101400151611605565b6123ae565b915061129985836123e7565b905060008114156112f35782610140015160001916600160038111156112bb57fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a3600093506114f1565b61131d600360008561014001516000191660001916815260200190815260200160002054826123c8565b60036000856101400151600019166000191681526020019081526020016000208190555082604001518360600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140192505050604051809103902060001916836080015173ffffffffffffffffffffffffffffffffffffffff16846000015173ffffffffffffffffffffffffffffffffffffffff167f67d66f160bc93d925d05dae1794c90d2d6d6688b29b84ff069398a9b0458713186604001518760600151611455878a60c001518b60a00151611757565b878a6101400151604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182600019166000191681526020019550505050505060405180910390a48093505b5050509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008090505b86518110156115d5576115c7878281518110151561154057fe5b90602001906020020151878381518110151561155857fe5b90602001906020020151878481518110151561157057fe5b90602001906020020151878581518110151561158857fe5b9060200190602002015187868151811015156115a057fe5b9060200190602002015187878151811015156115b857fe5b906020019060200201516115df565b5b8080600101915050611526565b5b50505050505050565b836115f087878760008888886118d3565b1415156115fc57600080fd5b5b505050505050565b600061164760026000846000191660001916815260200190815260200160002054600360008560001916600019168152602001908152602001600020546123c8565b90505b919050565b600060018560405180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040518091039020858585604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f1151561171457600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161490505b95945050505050565b600061176c611766858461235e565b84612392565b90505b9392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008090505b87518110156118535761184488828151811015156117bc57fe5b9060200190602002015188838151811015156117d457fe5b9060200190602002015188848151811015156117ec57fe5b9060200190602002015188888681518110151561180557fe5b90602001906020020151888781518110151561181d57fe5b90602001906020020151888881518110151561183557fe5b906020019060200201516118d3565b505b80806001019150506117a2565b5b5050505050505050565b60008090505b83518110156118cc576118bd848281518110151561187e57fe5b90602001906020020151848381518110151561189657fe5b9060200190602002015184848151811015156118ae57fe5b90602001906020020151611013565b505b8080600101915050611864565b5b50505050565b60006118dd612a8c565b600080600080610160604051908101604052808e60006005811015156118ff57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e600160058110151561192e57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e600260058110151561195d57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e600360058110151561198c57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e60046005811015156119bb57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018d60006006811015156119ea57fe5b602002015181526020018d6001600681101515611a0357fe5b602002015181526020018d6002600681101515611a1c57fe5b602002015181526020018d6003600681101515611a3557fe5b602002015181526020018d6004600681101515611a4e57fe5b60200201518152602001611a628f8f612073565b600019168152509450600073ffffffffffffffffffffffffffffffffffffffff16856020015173ffffffffffffffffffffffffffffffffffffffff161480611ad957503373ffffffffffffffffffffffffffffffffffffffff16856020015173ffffffffffffffffffffffffffffffffffffffff16145b1515611ae457600080fd5b60008560a00151118015611afc575060008560c00151115b8015611b08575060008b115b1515611b1357600080fd5b611b2985600001518661014001518b8b8b61164f565b1515611b3457600080fd5b84610120015142101515611b91578461014001516000191660006003811115611b5957fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b611bac8560c00151611ba7876101400151611605565b6123ae565b9350611bb88b856123e7565b95506000861415611c12578461014001516000191660016003811115611bda57fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b611c25868660c001518760a00151610e2d565b15611c79578461014001516000191660026003811115611c4157fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b89158015611c8e5750611c8c8587612401565b155b15611ce15784610140015160001916600380811115611ca957fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b611cf4868660c001518760a00151611757565b9250611d20600260008761014001516000191660001916815260200190815260200160002054876123c8565b600260008761014001516000191660001916815260200190815260200160002081905550611d58856040015186600001513386612751565b1515611d6357600080fd5b611d77856060015133876000015189612751565b1515611d8257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16856080015173ffffffffffffffffffffffffffffffffffffffff16141515611e815760008560e001511115611e1f57611ddc868660c001518760e00151611757565b9150611e136000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660000151876080015185612751565b1515611e1e57600080fd5b5b60008561010001511115611e8057611e41868660c00151876101000151611757565b9050611e746000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633876080015184612751565b1515611e7f57600080fd5b5b5b84604001518560600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140192505050604051809103902060001916856080015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff167f0d0b9391970d9a25552f37d436d2aae2925e2bfe1b2a923754bada030c498cb33389604001518a60600151898d8a8a8f6101400151604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182600019166000191681526020019850505050505050505060405180910390a48595505b5050505050979650505050505050565b60003083600060058110151561208557fe5b602002015184600160058110151561209957fe5b60200201518560026005811015156120ad57fe5b60200201518660036005811015156120c157fe5b60200201518760046005811015156120d557fe5b60200201518760006006811015156120e957fe5b60200201518860016006811015156120fd57fe5b602002015189600260068110151561211157fe5b60200201518a600360068110151561212557fe5b60200201518b600460068110151561213957fe5b60200201518c600560068110151561214d57fe5b6020020151604051808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018781526020018681526020018581526020018481526020018381526020018281526020019c50505050505050505050505050604051809103902090505b92915050565b61138781565b6040805190810160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6000808284029050600084148061237f575082848281151561237c57fe5b04145b151561238757fe5b8091505b5092915050565b60008082848115156123a057fe5b0490508091505b5092915050565b60008282111515156123bc57fe5b81830390505b92915050565b60008082840190508381101515156123dc57fe5b8091505b5092915050565b60008183106123f657816123f8565b825b90505b92915050565b60008060008060008060008060003397506124258a8c60c001518d60a00151611757565b9650600073ffffffffffffffffffffffffffffffffffffffff168b6080015173ffffffffffffffffffffffffffffffffffffffff161415156126d2576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168b6040015173ffffffffffffffffffffffffffffffffffffffff161495506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168b6060015173ffffffffffffffffffffffffffffffffffffffff161494506125208a8c60c001518d60e00151611757565b93506125368a8c60c001518d6101000151611757565b925085612543578361254e565b61254d87856123c8565b5b91508461255b5782612566565b6125658a846123c8565b5b9050816125986000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d600001516128ae565b10806125d15750816125cf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d60000151612972565b105b806126055750806126036000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6128ae565b105b806126395750806126376000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a612972565b105b156126475760009850612743565b851580156126805750866126638c604001518d600001516128ae565b108061267f57508661267d8c604001518d60000151612972565b105b5b1561268e5760009850612743565b841580156126bf5750896126a68c606001518a6128ae565b10806126be5750896126bc8c606001518a612972565b105b5b156126cd5760009850612743565b61273e565b866126e58c604001518d600001516128ae565b10806127015750866126ff8c604001518d60000151612972565b105b806127185750896127168c606001518a6128ae565b105b8061272f57508961272d8c606001518a612972565b105b1561273d5760009850612743565b5b600198505b505050505050505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315dacbea868686866000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050602060405180830381600087803b151561288857600080fd5b6102c65a03f1151561289957600080fd5b5050506040518051905090505b949350505050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a0823161138761ffff16846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600088803b151561295157600080fd5b87f1151561295e57600080fd5b505050506040518051905090505b92915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e61138761ffff1684600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600088803b1515612a6b57600080fd5b87f11515612a7857600080fd5b505050506040518051905090505b92915050565b61016060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000801916815250905600a165627a7a723058205e29fca27c237714946be3a272456b24a9fb2b50c978b1c659981e51e4423a170029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 PUSH2 0x2C4D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMPDEST PUSH2 0x2B84 DUP1 PUSH2 0xC9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x14DF96EE EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x288CDC91 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2AC12622 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x363349BE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x394C21E7 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x3B30BA59 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x4F150787 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x741BCC93 EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x7E9ABB50 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0x8163681E EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0x98024A8B EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xADD1CBC5 EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0xB7B2C7D6 EQ PUSH2 0x8B0 JUMPI DUP1 PUSH4 0xBAA0181D EQ PUSH2 0xACD JUMPI DUP1 PUSH4 0xBC61394A EQ PUSH2 0xC1F JUMPI DUP1 PUSH4 0xCFC4D0EC EQ PUSH2 0xCDF JUMPI DUP1 PUSH4 0xF06BBF75 EQ PUSH2 0xD6D JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0xD9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x248 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x203 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2C4 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27F JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45E PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x526 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4E1 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5A2 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x55D JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x1520 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x15DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x778 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x164F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x845 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86E PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x936 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8F1 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x9B2 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x96D JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x179C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB53 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xBCF JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB8A JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x185E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC9 PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xCEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4F PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD80 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDD6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE1F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP7 DUP6 MULMOD SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE69 PUSH2 0xE5A DUP4 PUSH3 0xF4240 PUSH2 0x235E JUMP JUMPDEST PUSH2 0xE64 DUP9 DUP8 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 GT SWAP3 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1002 JUMPI DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xED1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xEE9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF12 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xF2A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xF51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE5 DUP3 PUSH2 0xFE0 DUP13 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF66 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP13 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF7E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xF92 DUP14 DUP9 PUSH2 0x23AE JUMP JUMPDEST DUP13 DUP13 DUP9 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFA1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP13 DUP10 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFB9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP13 DUP11 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFD1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x18D3 JUMP JUMPDEST PUSH2 0x23C8 JUMP JUMPDEST SWAP2 POP DUP8 DUP3 EQ ISZERO PUSH2 0xFF4 JUMPI PUSH2 0x1002 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEB9 JUMP JUMPDEST DUP2 SWAP3 POP JUMPDEST POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101D PUSH2 0x2A8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x0 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x103C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x106B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x109A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x10C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x4 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x10F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1127 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1140 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1159 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1172 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x118B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119F DUP10 DUP10 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 NOT AND DUP2 MSTORE POP SWAP3 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x11FE JUMPI POP PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x120A JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0x120 ADD MLOAD TIMESTAMP LT ISZERO ISZERO PUSH2 0x1272 JUMPI DUP3 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x123A JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP4 POP PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x128D DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0x1288 DUP6 PUSH2 0x140 ADD MLOAD PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1299 DUP6 DUP4 PUSH2 0x23E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12F3 JUMPI DUP3 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12BB JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP4 POP PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x131D PUSH1 0x3 PUSH1 0x0 DUP6 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND DUP4 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x67D66F160BC93D925D05DAE1794C90D2D6D6688B29B84FF069398A9B04587131 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x1455 DUP8 DUP11 PUSH1 0xC0 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST DUP8 DUP11 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15C7 DUP8 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1540 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1558 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1570 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1588 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15A0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x15DF JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1526 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x15F0 DUP8 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 PUSH2 0x18D3 JUMP JUMPDEST EQ ISZERO ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1647 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 PUSH2 0x646E GAS SUB CALL ISZERO ISZERO PUSH2 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH2 0x1766 DUP6 DUP5 PUSH2 0x235E JUMP JUMPDEST DUP5 PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1844 DUP9 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17BC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17EC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP9 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1805 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x181D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP9 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1835 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x18D3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18BD DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x187E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1896 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x18AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1013 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1864 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DD PUSH2 0x2A8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x0 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x18FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x1 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x192E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x198C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x4 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x19BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x19EA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A1C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A35 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A4E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A62 DUP16 DUP16 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 NOT AND DUP2 MSTORE POP SWAP5 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AD9 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO ISZERO PUSH2 0x1AE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH1 0xA0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x1AFC JUMPI POP PUSH1 0x0 DUP6 PUSH1 0xC0 ADD MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x1B08 JUMPI POP PUSH1 0x0 DUP12 GT JUMPDEST ISZERO ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B29 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0x140 ADD MLOAD DUP12 DUP12 DUP12 PUSH2 0x164F JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH2 0x120 ADD MLOAD TIMESTAMP LT ISZERO ISZERO PUSH2 0x1B91 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B59 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1BAC DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x1BA7 DUP8 PUSH2 0x140 ADD MLOAD PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST SWAP4 POP PUSH2 0x1BB8 DUP12 DUP6 PUSH2 0x23E7 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 EQ ISZERO PUSH2 0x1C12 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BDA JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1C25 DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0xE2D JUMP JUMPDEST ISZERO PUSH2 0x1C79 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C41 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST DUP10 ISZERO DUP1 ISZERO PUSH2 0x1C8E JUMPI POP PUSH2 0x1C8C DUP6 DUP8 PUSH2 0x2401 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1CE1 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1CF4 DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP3 POP PUSH2 0x1D20 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP8 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1D58 DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD CALLER DUP7 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1D63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D77 DUP6 PUSH1 0x60 ADD MLOAD CALLER DUP8 PUSH1 0x0 ADD MLOAD DUP10 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1D82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E81 JUMPI PUSH1 0x0 DUP6 PUSH1 0xE0 ADD MLOAD GT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1DDC DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xE0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E13 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP6 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x100 ADD MLOAD GT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E41 DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH2 0x100 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E74 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND DUP6 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD0B9391970D9A25552F37D436D2AAE2925E2BFE1B2A923754BADA030C498CB3 CALLER DUP10 PUSH1 0x40 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD DUP10 DUP14 DUP11 DUP11 DUP16 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP6 SWAP6 POP JUMPDEST POP POP POP POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP4 PUSH1 0x0 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x2085 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x2099 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x20AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x20C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x4 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x20D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x20E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x20FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x2111 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x2125 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP12 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x2139 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP13 PUSH1 0x5 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x214D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1387 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0x237F JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x237C JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x2387 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x23A0 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x23BC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x23DC JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x23F6 JUMPI DUP2 PUSH2 0x23F8 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 CALLER SWAP8 POP PUSH2 0x2425 DUP11 DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP PUSH2 0x2520 DUP11 DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH1 0xE0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP4 POP PUSH2 0x2536 DUP11 DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH2 0x100 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP3 POP DUP6 PUSH2 0x2543 JUMPI DUP4 PUSH2 0x254E JUMP JUMPDEST PUSH2 0x254D DUP8 DUP6 PUSH2 0x23C8 JUMP JUMPDEST JUMPDEST SWAP2 POP DUP5 PUSH2 0x255B JUMPI DUP3 PUSH2 0x2566 JUMP JUMPDEST PUSH2 0x2565 DUP11 DUP5 PUSH2 0x23C8 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 PUSH2 0x2598 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x25D1 JUMPI POP DUP2 PUSH2 0x25CF PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x2605 JUMPI POP DUP1 PUSH2 0x2603 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x28AE JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x2639 JUMPI POP DUP1 PUSH2 0x2637 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x2647 JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST DUP6 ISZERO DUP1 ISZERO PUSH2 0x2680 JUMPI POP DUP7 PUSH2 0x2663 DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x267F JUMPI POP DUP7 PUSH2 0x267D DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST JUMPDEST ISZERO PUSH2 0x268E JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x26BF JUMPI POP DUP10 PUSH2 0x26A6 DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x26BE JUMPI POP DUP10 PUSH2 0x26BC DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST JUMPDEST ISZERO PUSH2 0x26CD JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x273E JUMP JUMPDEST DUP7 PUSH2 0x26E5 DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x2701 JUMPI POP DUP7 PUSH2 0x26FF DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x2718 JUMPI POP DUP10 PUSH2 0x2716 DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x28AE JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x272F JUMPI POP DUP10 PUSH2 0x272D DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x273D JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP9 POP JUMPDEST POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x15DACBEA DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x2899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1387 PUSH2 0xFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALL ISZERO ISZERO PUSH2 0x295E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0x1387 PUSH2 0xFFFF AND DUP5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2A6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALL ISZERO ISZERO PUSH2 0x2A78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5e 0x29 0xfc LOG2 PUSH29 0x237714946BE3A272456B24A9FB2B50C978B1C659981E51E4423A170029 ","sourceMap":"7511:23350:0:-;;;9536:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9634:9;9613:18;;:30;;;;;;;;;;;;;;;;;;9686:19;9654:29;;:51;;;;;;;;;;;;;;;;;;9536:177;;;7511:23350;;;;;;;"},"deployedBytecode":{"linkReferences":{},"object":"606060405236156100fa576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806314df96ee146100ff578063288cdc911461014c5780632ac1262214610187578063363349be146101c2578063394c21e7146103bc5780633b30ba591461044b5780634f150787146104a0578063741bcc93146106b25780637e9abb50146107535780638163681e1461078e57806398024a8b14610812578063add1cbc51461085b578063b7b2c7d6146108b0578063baa0181d14610acd578063bc61394a14610c1f578063cfc4d0ec14610cdf578063f06bbf7514610d6d578063ffa1ad7414610d9e575b600080fd5b341561010a57600080fd5b6101326004808035906020019091908035906020019091908035906020019091905050610e2d565b604051808215151515815260200191505060405180910390f35b341561015757600080fd5b610171600480803560001916906020019091905050610e7c565b6040518082815260200191505060405180910390f35b341561019257600080fd5b6101ac600480803560001916906020019091905050610e94565b6040518082815260200191505060405180910390f35b34156101cd57600080fd5b6103a660048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b8282101561024857848483905060a002016005806020026040519081016040528092919082600560200280828437820191505050505081526020019060010190610203565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b828210156102c457848483905060c00201600680602002604051908101604052809291908260066020028082843782019150505050508152602001906001019061027f565b5050505050919080359060200190919080351515906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091905050610eac565b6040518082815260200191505060405180910390f35b34156103c757600080fd5b6104356004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c001906006806020026040519081016040528092919082600660200280828437820191505050505091908035906020019091905050611013565b6040518082815260200191505060405180910390f35b341561045657600080fd5b61045e6114fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104ab57600080fd5b6106b060048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b8282101561052657848483905060a0020160058060200260405190810160405280929190826005602002808284378201915050505050815260200190600101906104e1565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b828210156105a257848483905060c00201600680602002604051908101604052809291908260066020028082843782019150505050508152602001906001019061055d565bb005b34156106bd57600080fd5b6107516004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c00190600680602002604051908101604052809291908260066020028082843782019150505050509190803590602001909190803560ff1690602001909190803560001916906020019091908035600019169060200190919050506115df565b005b341561075e57600080fd5b610778600480803560001916906020019091905050611605565b6040518082815260200191505060405180910390f35b341561079957600080fd5b6107f8600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080356000191690602001909190803560ff16906020019091908035600019169060200190919080356000191690602001909190505061164f565b604051808215151515815260200191505060405180910390f35b341561081d57600080fd5b6108456004808035906020019091908035906020019091908035906020019091905050611757565b6040518082815260200191505060405180910390f35b341561086657600080fd5b61086e611776565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156108bb57600080fd5b610acb60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b8282101561093657848483905060a0020160058060200260405190810160405280929190826005602002808284378201915050505050815260200190600101906108f1565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b828210156109b257848483905060c00201600680602002604051908101604052809291908260066020028082843782019150505050508152602001906001019061096d565bc565b005b3415610ad857600080fd5b610c1d60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b82821015610b5357848483905060a002016005806020026040519081016040528092919082600560200280828437820191505050505081526020019060010190610b0e565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020016000905b82821015610bcf57848483905060c002016006806020026040519081016040528092919082600660200280828437820191505050505081526020019060010190610b8a565b5050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190505061185e565b005b3415610c2a57600080fd5b610cc96004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c001906006806020026040519081016040528092919082600660200280828437820191505050505091908035906020019091908035151590602001909190803560ff1690602001909190803560001916906020019091908035600019169060200190919050506118d3565b6040518082815260200191505060405180910390f35b3415610cea57600080fd5b610d4f6004808060a001906005806020026040519081016040528092919082600560200280828437820191505050505091908060c001906006806020026040519081016040528092919082600660200280828437820191505050505091905050612073565b60405180826000191660001916815260200191505060405180910390f35b3415610d7857600080fd5b610d8061231f565b604051808261ffff1661ffff16815260200191505060405180910390f35b3415610da957600080fd5b610db1612325565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610df25780820151818401525b602081019050610dd6565b50505050905090810190601f168015610e1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008060008486850991506000821415610e4a5760009250610e73565b610e69610e5a83620f424061235e565b610e64888761235e565b612392565b90506103e8811192505b50509392505050565b60026020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6000806000809150600090505b895181101561100257896000815181101515610ed157fe5b906020019060200201516003600581101515610ee957fe5b602002015173ffffffffffffffffffffffffffffffffffffffff168a82815181101515610f1257fe5b906020019060200201516003600581101515610f2a57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16141515610f5157600080fd5b610fe582610fe08c84815181101515610f6657fe5b906020019060200201518c85815181101515610f7e57fe5b90602001906020020151610f928d886123ae565b8c8c88815181101515610fa157fe5b906020019060200201518c89815181101515610fb957fe5b906020019060200201518c8a815181101515610fd157fe5b906020019060200201516118d3565b6123c8565b915087821415610ff457611002565b5b8080600101915050610eb9565b8192505b5050979650505050505050565b600061101d612a8c565b6000806101606040519081016040528088600060058110151561103c57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200188600160058110151561106b57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200188600260058110151561109a57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018860036005811015156110c957fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018860046005811015156110f857fe5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200187600060068110151561112757fe5b6020020151815260200187600160068110151561114057fe5b6020020151815260200187600260068110151561115957fe5b6020020151815260200187600360068110151561117257fe5b6020020151815260200187600460068110151561118b57fe5b6020020151815260200161119f8989612073565b6000191681525092503373ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff161415156111e657600080fd5b60008360a001511180156111fe575060008360c00151115b801561120a5750600085115b151561121557600080fd5b8261012001514210151561127257826101400151600019166000600381111561123a57fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a3600093506114f1565b61128d8360c00151611288856101400151611605565b6123ae565b915061129985836123e7565b905060008114156112f35782610140015160001916600160038111156112bb57fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a3600093506114f1565b61131d600360008561014001516000191660001916815260200190815260200160002054826123c8565b60036000856101400151600019166000191681526020019081526020016000208190555082604001518360600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140192505050604051809103902060001916836080015173ffffffffffffffffffffffffffffffffffffffff16846000015173ffffffffffffffffffffffffffffffffffffffff167f67d66f160bc93d925d05dae1794c90d2d6d6688b29b84ff069398a9b0458713186604001518760600151611455878a60c001518b60a00151611757565b878a6101400151604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182600019166000191681526020019550505050505060405180910390a48093505b5050509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008090505b86518110156115d5576115c7878281518110151561154057fe5b90602001906020020151878381518110151561155857fe5b90602001906020020151878481518110151561157057fe5b90602001906020020151878581518110151561158857fe5b9060200190602002015187868151811015156115a057fe5b9060200190602002015187878151811015156115b857fe5b906020019060200201516115df565b5b8080600101915050611526565b5b50505050505050565b836115f087878760008888886118d3565b1415156115fc57600080fd5b5b505050505050565b600061164760026000846000191660001916815260200190815260200160002054600360008560001916600019168152602001908152602001600020546123c8565b90505b919050565b600060018560405180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040518091039020858585604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f1151561171457600080fd5b50506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161490505b95945050505050565b600061176c611766858461235e565b84612392565b90505b9392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008090505b87518110156118535761184488828151811015156117bc57fe5b9060200190602002015188838151811015156117d457fe5b9060200190602002015188848151811015156117ec57fe5b9060200190602002015188888681518110151561180557fe5b90602001906020020151888781518110151561181d57fe5b90602001906020020151888881518110151561183557fe5b906020019060200201516118d3565b505b80806001019150506117a2565b5b5050505050505050565b60008090505b83518110156118cc576118bd848281518110151561187e57fe5b90602001906020020151848381518110151561189657fe5b9060200190602002015184848151811015156118ae57fe5b90602001906020020151611013565b505b8080600101915050611864565b5b50505050565b60006118dd612a8c565b600080600080610160604051908101604052808e60006005811015156118ff57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e600160058110151561192e57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e600260058110151561195d57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e600360058110151561198c57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018e60046005811015156119bb57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018d60006006811015156119ea57fe5b602002015181526020018d6001600681101515611a0357fe5b602002015181526020018d6002600681101515611a1c57fe5b602002015181526020018d6003600681101515611a3557fe5b602002015181526020018d6004600681101515611a4e57fe5b60200201518152602001611a628f8f612073565b600019168152509450600073ffffffffffffffffffffffffffffffffffffffff16856020015173ffffffffffffffffffffffffffffffffffffffff161480611ad957503373ffffffffffffffffffffffffffffffffffffffff16856020015173ffffffffffffffffffffffffffffffffffffffff16145b1515611ae457600080fd5b60008560a00151118015611afc575060008560c00151115b8015611b08575060008b115b1515611b1357600080fd5b611b2985600001518661014001518b8b8b61164f565b1515611b3457600080fd5b84610120015142101515611b91578461014001516000191660006003811115611b5957fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b611bac8560c00151611ba7876101400151611605565b6123ae565b9350611bb88b856123e7565b95506000861415611c12578461014001516000191660016003811115611bda57fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b611c25868660c001518760a00151610e2d565b15611c79578461014001516000191660026003811115611c4157fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b89158015611c8e5750611c8c8587612401565b155b15611ce15784610140015160001916600380811115611ca957fe5b60ff167f36d86c59e00bd73dc19ba3adfe068e4b64ac7e92be35546adeddf1b956a87e9060405160405180910390a360009550612063565b611cf4868660c001518760a00151611757565b9250611d20600260008761014001516000191660001916815260200190815260200160002054876123c8565b600260008761014001516000191660001916815260200190815260200160002081905550611d58856040015186600001513386612751565b1515611d6357600080fd5b611d77856060015133876000015189612751565b1515611d8257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16856080015173ffffffffffffffffffffffffffffffffffffffff16141515611e815760008560e001511115611e1f57611ddc868660c001518760e00151611757565b9150611e136000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660000151876080015185612751565b1515611e1e57600080fd5b5b60008561010001511115611e8057611e41868660c00151876101000151611757565b9050611e746000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633876080015184612751565b1515611e7f57600080fd5b5b5b84604001518560600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140192505050604051809103902060001916856080015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff167f0d0b9391970d9a25552f37d436d2aae2925e2bfe1b2a923754bada030c498cb33389604001518a60600151898d8a8a8f6101400151604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182600019166000191681526020019850505050505050505060405180910390a48595505b5050505050979650505050505050565b60003083600060058110151561208557fe5b602002015184600160058110151561209957fe5b60200201518560026005811015156120ad57fe5b60200201518660036005811015156120c157fe5b60200201518760046005811015156120d557fe5b60200201518760006006811015156120e957fe5b60200201518860016006811015156120fd57fe5b602002015189600260068110151561211157fe5b60200201518a600360068110151561212557fe5b60200201518b600460068110151561213957fe5b60200201518c600560068110151561214d57fe5b6020020151604051808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018781526020018681526020018581526020018481526020018381526020018281526020019c50505050505050505050505050604051809103902090505b92915050565b61138781565b6040805190810160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6000808284029050600084148061237f575082848281151561237c57fe5b04145b151561238757fe5b8091505b5092915050565b60008082848115156123a057fe5b0490508091505b5092915050565b60008282111515156123bc57fe5b81830390505b92915050565b60008082840190508381101515156123dc57fe5b8091505b5092915050565b60008183106123f657816123f8565b825b90505b92915050565b60008060008060008060008060003397506124258a8c60c001518d60a00151611757565b9650600073ffffffffffffffffffffffffffffffffffffffff168b6080015173ffffffffffffffffffffffffffffffffffffffff161415156126d2576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168b6040015173ffffffffffffffffffffffffffffffffffffffff161495506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168b6060015173ffffffffffffffffffffffffffffffffffffffff161494506125208a8c60c001518d60e00151611757565b93506125368a8c60c001518d6101000151611757565b925085612543578361254e565b61254d87856123c8565b5b91508461255b5782612566565b6125658a846123c8565b5b9050816125986000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d600001516128ae565b10806125d15750816125cf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d60000151612972565b105b806126055750806126036000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6128ae565b105b806126395750806126376000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a612972565b105b156126475760009850612743565b851580156126805750866126638c604001518d600001516128ae565b108061267f57508661267d8c604001518d60000151612972565b105b5b1561268e5760009850612743565b841580156126bf5750896126a68c606001518a6128ae565b10806126be5750896126bc8c606001518a612972565b105b5b156126cd5760009850612743565b61273e565b866126e58c604001518d600001516128ae565b10806127015750866126ff8c604001518d60000151612972565b105b806127185750896127168c606001518a6128ae565b105b8061272f57508961272d8c606001518a612972565b105b1561273d5760009850612743565b5b600198505b505050505050505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315dacbea868686866000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050602060405180830381600087803b151561288857600080fd5b6102c65a03f1151561289957600080fd5b5050506040518051905090505b949350505050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a0823161138761ffff16846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600088803b151561295157600080fd5b87f1151561295e57600080fd5b505050506040518051905090505b92915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e61138761ffff1684600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600088803b1515612a6b57600080fd5b87f11515612a7857600080fd5b505050506040518051905090505b92915050565b61016060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000801916815250905600a165627a7a723058205e29fca27c237714946be3a272456b24a9fb2b50c978b1c659981e51e4423a170029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x14DF96EE EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x288CDC91 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2AC12622 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x363349BE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x394C21E7 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x3B30BA59 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x4F150787 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x741BCC93 EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x7E9ABB50 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0x8163681E EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0x98024A8B EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xADD1CBC5 EQ PUSH2 0x85B JUMPI DUP1 PUSH4 0xB7B2C7D6 EQ PUSH2 0x8B0 JUMPI DUP1 PUSH4 0xBAA0181D EQ PUSH2 0xACD JUMPI DUP1 PUSH4 0xBC61394A EQ PUSH2 0xC1F JUMPI DUP1 PUSH4 0xCFC4D0EC EQ PUSH2 0xCDF JUMPI DUP1 PUSH4 0xF06BBF75 EQ PUSH2 0xD6D JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0xD9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x248 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x203 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2C4 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27F JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45E PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x526 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4E1 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5A2 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x55D JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x1520 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x15DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x778 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x164F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x845 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86E PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xACB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x936 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8F1 JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x9B2 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x96D JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x179C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB53 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xBCF JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xC0 MUL ADD PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB8A JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x185E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC9 PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xCEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4F PUSH1 0x4 DUP1 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x5 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH1 0x6 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x6 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD80 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB1 PUSH2 0x2325 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDD6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE1F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP7 DUP6 MULMOD SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0xE73 JUMP JUMPDEST PUSH2 0xE69 PUSH2 0xE5A DUP4 PUSH3 0xF4240 PUSH2 0x235E JUMP JUMPDEST PUSH2 0xE64 DUP9 DUP8 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 GT SWAP3 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1002 JUMPI DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xED1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xEE9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF12 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xF2A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xF51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE5 DUP3 PUSH2 0xFE0 DUP13 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF66 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP13 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF7E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0xF92 DUP14 DUP9 PUSH2 0x23AE JUMP JUMPDEST DUP13 DUP13 DUP9 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFA1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP13 DUP10 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFB9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP13 DUP11 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFD1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x18D3 JUMP JUMPDEST PUSH2 0x23C8 JUMP JUMPDEST SWAP2 POP DUP8 DUP3 EQ ISZERO PUSH2 0xFF4 JUMPI PUSH2 0x1002 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEB9 JUMP JUMPDEST DUP2 SWAP3 POP JUMPDEST POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101D PUSH2 0x2A8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x0 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x103C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x106B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x109A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x10C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x4 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x10F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1127 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1140 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1159 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1172 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x118B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119F DUP10 DUP10 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 NOT AND DUP2 MSTORE POP SWAP3 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x11FE JUMPI POP PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x120A JUMPI POP PUSH1 0x0 DUP6 GT JUMPDEST ISZERO ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH2 0x120 ADD MLOAD TIMESTAMP LT ISZERO ISZERO PUSH2 0x1272 JUMPI DUP3 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x123A JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP4 POP PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x128D DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0x1288 DUP6 PUSH2 0x140 ADD MLOAD PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1299 DUP6 DUP4 PUSH2 0x23E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12F3 JUMPI DUP3 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12BB JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP4 POP PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x131D PUSH1 0x3 PUSH1 0x0 DUP6 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND DUP4 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x67D66F160BC93D925D05DAE1794C90D2D6D6688B29B84FF069398A9B04587131 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x1455 DUP8 DUP11 PUSH1 0xC0 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST DUP8 DUP11 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15C7 DUP8 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1540 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1558 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1570 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1588 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15A0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x15B8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x15DF JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1526 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x15F0 DUP8 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 PUSH2 0x18D3 JUMP JUMPDEST EQ ISZERO ISZERO PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1647 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x0 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 PUSH2 0x646E GAS SUB CALL ISZERO ISZERO PUSH2 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH2 0x1766 DUP6 DUP5 PUSH2 0x235E JUMP JUMPDEST DUP5 PUSH2 0x2392 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1844 DUP9 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17BC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x17EC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP9 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1805 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x181D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP9 DUP9 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1835 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x18D3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18BD DUP5 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x187E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1896 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x18AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1013 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1864 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DD PUSH2 0x2A8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x0 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x18FF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x1 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x192E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x195D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x198C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x4 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x19BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x19EA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A03 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A1C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A35 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x1A4E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A62 DUP16 DUP16 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x0 NOT AND DUP2 MSTORE POP SWAP5 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AD9 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO ISZERO PUSH2 0x1AE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH1 0xA0 ADD MLOAD GT DUP1 ISZERO PUSH2 0x1AFC JUMPI POP PUSH1 0x0 DUP6 PUSH1 0xC0 ADD MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x1B08 JUMPI POP PUSH1 0x0 DUP12 GT JUMPDEST ISZERO ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B29 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0x140 ADD MLOAD DUP12 DUP12 DUP12 PUSH2 0x164F JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH2 0x120 ADD MLOAD TIMESTAMP LT ISZERO ISZERO PUSH2 0x1B91 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B59 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1BAC DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x1BA7 DUP8 PUSH2 0x140 ADD MLOAD PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST SWAP4 POP PUSH2 0x1BB8 DUP12 DUP6 PUSH2 0x23E7 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP7 EQ ISZERO PUSH2 0x1C12 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BDA JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1C25 DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0xE2D JUMP JUMPDEST ISZERO PUSH2 0x1C79 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C41 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST DUP10 ISZERO DUP1 ISZERO PUSH2 0x1C8E JUMPI POP PUSH2 0x1C8C DUP6 DUP8 PUSH2 0x2401 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1CE1 JUMPI DUP5 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SWAP6 POP PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x1CF4 DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP3 POP PUSH2 0x1D20 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP8 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH2 0x140 ADD MLOAD PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1D58 DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD CALLER DUP7 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1D63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D77 DUP6 PUSH1 0x60 ADD MLOAD CALLER DUP8 PUSH1 0x0 ADD MLOAD DUP10 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1D82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E81 JUMPI PUSH1 0x0 DUP6 PUSH1 0xE0 ADD MLOAD GT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1DDC DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0xE0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E13 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP6 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x100 ADD MLOAD GT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E41 DUP7 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH2 0x100 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E74 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x2751 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND DUP6 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD0B9391970D9A25552F37D436D2AAE2925E2BFE1B2A923754BADA030C498CB3 CALLER DUP10 PUSH1 0x40 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD DUP10 DUP14 DUP11 DUP11 DUP16 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP6 SWAP6 POP JUMPDEST POP POP POP POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP4 PUSH1 0x0 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x2085 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 PUSH1 0x1 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x2099 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 PUSH1 0x2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x20AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x3 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x20C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x4 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x20D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x0 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x20E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x20FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x2111 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x2125 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP12 PUSH1 0x4 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x2139 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP13 PUSH1 0x5 PUSH1 0x6 DUP2 LT ISZERO ISZERO PUSH2 0x214D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1387 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 MUL SWAP1 POP PUSH1 0x0 DUP5 EQ DUP1 PUSH2 0x237F JUMPI POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x237C JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x2387 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x23A0 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x23BC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x23DC JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x23F6 JUMPI DUP2 PUSH2 0x23F8 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 CALLER SWAP8 POP PUSH2 0x2425 DUP11 DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP PUSH2 0x2520 DUP11 DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH1 0xE0 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP4 POP PUSH2 0x2536 DUP11 DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH2 0x100 ADD MLOAD PUSH2 0x1757 JUMP JUMPDEST SWAP3 POP DUP6 PUSH2 0x2543 JUMPI DUP4 PUSH2 0x254E JUMP JUMPDEST PUSH2 0x254D DUP8 DUP6 PUSH2 0x23C8 JUMP JUMPDEST JUMPDEST SWAP2 POP DUP5 PUSH2 0x255B JUMPI DUP3 PUSH2 0x2566 JUMP JUMPDEST PUSH2 0x2565 DUP11 DUP5 PUSH2 0x23C8 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 PUSH2 0x2598 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x25D1 JUMPI POP DUP2 PUSH2 0x25CF PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x2605 JUMPI POP DUP1 PUSH2 0x2603 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x28AE JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x2639 JUMPI POP DUP1 PUSH2 0x2637 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x2647 JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST DUP6 ISZERO DUP1 ISZERO PUSH2 0x2680 JUMPI POP DUP7 PUSH2 0x2663 DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x267F JUMPI POP DUP7 PUSH2 0x267D DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST JUMPDEST ISZERO PUSH2 0x268E JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST DUP5 ISZERO DUP1 ISZERO PUSH2 0x26BF JUMPI POP DUP10 PUSH2 0x26A6 DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x26BE JUMPI POP DUP10 PUSH2 0x26BC DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST JUMPDEST ISZERO PUSH2 0x26CD JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x273E JUMP JUMPDEST DUP7 PUSH2 0x26E5 DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x28AE JUMP JUMPDEST LT DUP1 PUSH2 0x2701 JUMPI POP DUP7 PUSH2 0x26FF DUP13 PUSH1 0x40 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x2718 JUMPI POP DUP10 PUSH2 0x2716 DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x28AE JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x272F JUMPI POP DUP10 PUSH2 0x272D DUP13 PUSH1 0x60 ADD MLOAD DUP11 PUSH2 0x2972 JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x273D JUMPI PUSH1 0x0 SWAP9 POP PUSH2 0x2743 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP9 POP JUMPDEST POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x15DACBEA DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x2899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1387 PUSH2 0xFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALL ISZERO ISZERO PUSH2 0x295E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0x1387 PUSH2 0xFFFF AND DUP5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2A6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALL ISZERO ISZERO PUSH2 0x2A78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x160 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5e 0x29 0xfc LOG2 PUSH29 0x237714946BE3A272456B24A9FB2B50C978B1C659981E51E4423A170029 ","sourceMap":"7511:23350:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25042:471;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8269:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8315:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21171:1015;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15009:1991;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8094:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19892:531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17634:437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26205:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24430:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25769:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8134:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18712:640;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22550:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10433:4151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23364:725;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7982:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7935:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;8:100;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25042:471:0;25166:4;25188:14;25321:30;25231:11;25220:9;25212:6;25205:38;25188:55;;25271:1;25258:9;:14;25254:32;;;25281:5;25274:12;;;;25254:32;25354:101;25376:27;25384:9;25395:7;25376;:27::i;:::-;25418:26;25426:9;25437:6;25418:7;:26::i;:::-;25354:7;:101::i;:::-;25321:134;;25501:4;25473:25;:32;25466:39;;25042:471;;;;;;;;:::o;8269:39::-;;;;;;;;;;;;;;;;;:::o;8315:42::-;;;;;;;;;;;;;;;;;:::o;21171:1015::-;21459:4;21481:27;21528:6;21511:1;21481:31;;21537:1;21528:10;;21523:616;21544:14;:21;21540:1;:25;21523:616;;;21619:14;21634:1;21619:17;;;;;;;;;;;;;;;;;;21637:1;21619:20;;;;;;;;;;;;;21595:44;;:14;21610:1;21595:17;;;;;;;;;;;;;;;;;;21613:1;21595:20;;;;;;;;;;;;;:44;;;21587:53;;;;;;;;21726:329;21734:22;21758:296;21786:14;21801:1;21786:17;;;;;;;;;;;;;;;;;;21822:11;21834:1;21822:14;;;;;;;;;;;;;;;;;;21855:53;21863:20;21885:22;21855:7;:53::i;:::-;21927:43;21989:1;21991;21989:4;;;;;;;;;;;;;;;;;;22012:1;22014;22012:4;;;;;;;;;;;;;;;;;;22035:1;22037;22035:4;;;;;;;;;;;;;;;;;;21758:9;:296::i;:::-;21726:7;:329::i;:::-;21701:354;;22100:20;22074:22;:46;22070:57;;;22122:5;;22070:57;21523:616;21567:3;;;;;;;21523:616;;;22156:22;22149:29;;21171:1015;;;;;;;;;;;;:::o;15009:1991::-;15169:4;15191:18;;:::i;:::-;16073:30;16197;15212:524;;;;;;;;;15240:14;15255:1;15240:17;;;;;;;;;;;;;15212:524;;;;;;15279:14;15294:1;15279:17;;;;;;;;;;;;;15212:524;;;;;;15323:14;15338:1;15323:17;;;;;;;;;;;;;15212:524;;;;;;15367:14;15382:1;15367:17;;;;;;;;;;;;;15212:524;;;;;;15413:14;15428:1;15413:17;;;;;;;;;;;;;15212:524;;;;;;15463:11;15475:1;15463:14;;;;;;;;;;;;;15212:524;;;;15510:11;15522:1;15510:14;;;;;;;;;;;;;15212:524;;;;15549:11;15561:1;15549:14;;;;;;;;;;;;;15212:524;;;;15588:11;15600:1;15588:14;;;;;;;;;;;;;15212:524;;;;15643:11;15655:1;15643:14;;;;;;;;;;;;;15212:524;;;;15683:41;15696:14;15712:11;15683:12;:41::i;:::-;15212:524;;;;;;15191:545;;15772:10;15757:25;;:5;:11;;;:25;;;15749:34;;;;;;;;15827:1;15802:5;:22;;;:26;:56;;;;;15857:1;15832:5;:22;;;:26;15802:56;:86;;;;;15887:1;15862:22;:26;15802:86;15794:95;;;;;;;;15925:5;:30;;;15906:15;:49;;15902:159;;;16010:5;:15;;;15972:54;;;15987:20;15981:27;;;;;;;;15972:54;;;;;;;;;;;;16048:1;16041:8;;;;15902:159;16106:80;16114:5;:22;;;16138:47;16169:5;:15;;;16138:30;:47::i;:::-;16106:7;:80::i;:::-;16073:113;;16230:57;16237:22;16261:25;16230:6;:57::i;:::-;16197:90;;16331:1;16302:25;:30;16298:158;;;16405:5;:15;;;16349:72;;;16364:38;16358:45;;;;;;;;16349:72;;;;;;;;;;;;16443:1;16436:8;;;;16298:158;16497:62;16505:9;:26;16515:5;:15;;;16505:26;;;;;;;;;;;;;;;;;;16533:25;16497:7;:62::i;:::-;16468:9;:26;16478:5;:15;;;16468:26;;;;;;;;;;;;;;;;;:91;;;;16873:5;:16;;;16891:5;:16;;;16863:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16572:377;;;16622:5;:18;;;16572:377;;16596:5;:11;;;16572:377;;;16655:5;:16;;;16686:5;:16;;;16717:91;16734:25;16761:5;:22;;;16785:5;:22;;;16717:16;:91::i;:::-;16823:25;16923:5;:15;;;16572:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16967:25;16960:32;;15009:1991;;;;;;;;;:::o;8094:33::-;;;;;;;;;;;;;:::o;19892:531::-;20134:6;20143:1;20134:10;;20129:287;20150:14;:21;20146:1;:25;20129:287;;;20193:211;20227:14;20242:1;20227:17;;;;;;;;;;;;;;;;;;20263:11;20275:1;20263:14;;;;;;;;;;;;;;;;;;20296:21;20318:1;20296:24;;;;;;;;;;;;;;;;;;20339:1;20341;20339:4;;;;;;;;;;;;;;;;;;20362:1;20364;20362:4;;;;;;;;;;;;;;;;;;20385:1;20387;20385:4;;;;;;;;;;;;;;;;;;20193:15;:211::i;:::-;20129:287;20173:3;;;;;;;20129:287;;;19892:531;;;;;;;;:::o;17634:437::-;18042:20;17860:178;17884:14;17913:11;17939:20;17974:5;17994:1;18010;18026;17860:9;:178::i;:::-;:202;17852:211;;;;;;;;17634:437;;;;;;;:::o;26205:196::-;26316:4;26345:48;26353:6;:17;26360:9;26353:17;;;;;;;;;;;;;;;;;;26372:9;:20;26382:9;26372:20;;;;;;;;;;;;;;;;;;26345:7;:48::i;:::-;26338:55;;26205:196;;;;:::o;24430:366::-;24615:4;24654:134;24724:4;24678:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24744:1;24760;24776;24654:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24644:144;;:6;:144;;;24637:151;;24430:366;;;;;;;;:::o;25769:210::-;25894:4;25923:48;25931:26;25939:9;25950:6;25931:7;:26::i;:::-;25959:11;25923:7;:48::i;:::-;25916:55;;25769:210;;;;;;:::o;8134:44::-;;;;;;;;;;;;;:::o;18712:640::-;19007:6;19016:1;19007:10;;19002:343;19023:14;:21;19019:1;:25;19002:343;;;19066:267;19094:14;19109:1;19094:17;;;;;;;;;;;;;;;;;;19130:11;19142:1;19130:14;;;;;;;;;;;;;;;;;;19163:21;19185:1;19163:24;;;;;;;;;;;;;;;;;;19206:43;19268:1;19270;19268:4;;;;;;;;;;;;;;;;;;19291:1;19293;19291:4;;;;;;;;;;;;;;;;;;19314:1;19316;19314:4;;;;;;;;;;;;;;;;;;19066:9;:267::i;:::-;;19002:343;19046:3;;;;;;;19002:343;;;18712:640;;;;;;;;;:::o;22550:394::-;22726:6;22735:1;22726:10;;22721:216;22742:14;:21;22738:1;:25;22721:216;;;22785:140;22815:14;22830:1;22815:17;;;;;;;;;;;;;;;;;;22851:11;22863:1;22851:14;;;;;;;;;;;;;;;;;;22884:23;22908:1;22884:26;;;;;;;;;;;;;;;;;;22785:11;:140::i;:::-;;22721:216;22765:3;;;;;;;22721:216;;;22550:394;;;;;:::o;10433:4151::-;10724:27;10769:18;;:::i;:::-;11829:30;12667:27;12796:17;12824;10790:524;;;;;;;;;10818:14;10833:1;10818:17;;;;;;;;;;;;;10790:524;;;;;;10857:14;10872:1;10857:17;;;;;;;;;;;;;10790:524;;;;;;10901:14;10916:1;10901:17;;;;;;;;;;;;;10790:524;;;;;;10945:14;10960:1;10945:17;;;;;;;;;;;;;10790:524;;;;;;10991:14;11006:1;10991:17;;;;;;;;;;;;;10790:524;;;;;;11041:11;11053:1;11041:14;;;;;;;;;;;;;10790:524;;;;11088:11;11100:1;11088:14;;;;;;;;;;;;;10790:524;;;;11127:11;11139:1;11127:14;;;;;;;;;;;;;10790:524;;;;11166:11;11178:1;11166:14;;;;;;;;;;;;;10790:524;;;;11221:11;11233:1;11221:14;;;;;;;;;;;;;10790:524;;;;11261:41;11274:14;11290:11;11261:12;:41::i;:::-;10790:524;;;;;;10769:545;;11358:1;11335:25;;:5;:11;;;:25;;;:54;;;;11379:10;11364:25;;:5;:11;;;:25;;;11335:54;11327:63;;;;;;;;11434:1;11409:5;:22;;;:26;:56;;;;;11464:1;11439:5;:22;;;:26;11409:56;:84;;;;;11492:1;11469:20;:24;11409:84;11401:93;;;;;;;;11513:131;11544:5;:11;;;11570:5;:15;;;11600:1;11616;11632;11513:16;:131::i;:::-;11505:140;;;;;;;;11681:5;:30;;;11662:15;:49;;11658:159;;;11766:5;:15;;;11728:54;;;11743:20;11737:27;;;;;;;;11728:54;;;;;;;;;;;;11804:1;11797:8;;;;11658:159;11862:80;11870:5;:22;;;11894:47;11925:5;:15;;;11894:30;:47::i;:::-;11862:7;:80::i;:::-;11829:113;;11978:55;11985:20;12007:25;11978:6;:55::i;:::-;11953:80;;12074:1;12048:22;:27;12044:155;;;12148:5;:15;;;12092:72;;;12107:38;12101:45;;;;;;;;12092:72;;;;;;;;;;;;12186:1;12179:8;;;;12044:155;12215:87;12231:22;12255:5;:22;;;12279:5;:22;;;12215:15;:87::i;:::-;12211:208;;;12368:5;:15;;;12319:65;;;12334:31;12328:38;;;;;;;;12319:65;;;;;;;;;;;;12406:1;12399:8;;;;12211:208;12436:43;12435:44;:94;;;;;12484:45;12499:5;12506:22;12484:14;:45::i;:::-;12483:46;12435:94;12431:224;;;12604:5;:15;;;12546:74;;;12561:40;12555:47;;;;;;;;12546:74;;;;;;;;;;;;12642:1;12635:8;;;;12431:224;12697:88;12714:22;12738:5;:22;;;12762:5;:22;;;12697:16;:88::i;:::-;12667:118;;12878:56;12886:6;:23;12893:5;:15;;;12886:23;;;;;;;;;;;;;;;;;;12911:22;12878:7;:56::i;:::-;12852:6;:23;12859:5;:15;;;12852:23;;;;;;;;;;;;;;;;;:82;;;;12953:159;12997:5;:16;;;13028:5;:11;;;13054:10;13079:22;12953:29;:159::i;:::-;12945:168;;;;;;;;13132:159;13176:5;:16;;;13207:10;13232:5;:11;;;13258:22;13132:29;:159::i;:::-;13124:168;;;;;;;;13337:1;13307:32;;:5;:18;;;:32;;;;13303:839;;;13377:1;13360:5;:14;;;:18;13356:381;;;13414:80;13431:22;13455:5;:22;;;13479:5;:14;;;13414:16;:80::i;:::-;13399:95;;13521:199;13573:18;;;;;;;;;;;13614:5;:11;;;13648:5;:18;;;13689:12;13521:29;:199::i;:::-;13513:208;;;;;;;;13356:381;13772:1;13755:5;:14;;;:18;13751:380;;;13809:80;13826:22;13850:5;:22;;;13874:5;:14;;;13809:16;:80::i;:::-;13794:95;;13916:198;13968:18;;;;;;;;;;;14009:10;14042:5;:18;;;14083:12;13916:29;:198::i;:::-;13908:207;;;;;;;;13751:380;13303:839;14460:5;:16;;;14478:5;:16;;;14450:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14154:382;;;14227:5;:18;;;14154:382;;14176:5;:11;;;14154:382;;;14202:10;14260:5;:16;;;14291:5;:16;;;14322:22;14359;14396:12;14423;14510:5;:15;;;14154:382;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14554:22;14547:29;;10433:4151;;;;;;;;;;;;;;;:::o;23364:725::-;23486:7;23550:4;23570:14;23585:1;23570:17;;;;;;;;;;;;;23611:14;23626:1;23611:17;;;;;;;;;;;;;23652:14;23667:1;23652:17;;;;;;;;;;;;;23698:14;23713:1;23698:17;;;;;;;;;;;;;23744:14;23759:1;23744:17;;;;;;;;;;;;;23792:11;23804:1;23792:14;;;;;;;;;;;;;23844:11;23856:1;23844:14;;;;;;;;;;;;;23896:11;23908:1;23896:14;;;;;;;;;;;;;23940:11;23952:1;23940:14;;;;;;;;;;;;;23984:11;23996:1;23984:14;;;;;;;;;;;;;24044:11;24056:1;24044:14;;;;;;;;;;;;;23518:563;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23511:570;;23364:725;;;;;:::o;7982:54::-;8032:4;7982:54;:::o;7935:40::-;;;;;;;;;;;;;;;;;;;;:::o;6065:160::-;6125:7;6145:6;6158:1;6154;:5;6145:14;;6182:1;6177;:6;:20;;;;6196:1;6191;6187;:5;;;;;;;;:10;6177:20;6170:28;;;;;;6216:1;6209:8;;6065:160;;;;;;:::o;6233:121::-;6293:7;6313:6;6326:1;6322;:5;;;;;;;;6313:14;;6345:1;6338:8;;6233:121;;;;;;:::o;6362:125::-;6422:7;6454:1;6449;:6;;6442:14;;;;;;6478:1;6474;:5;6467:12;;6362:125;;;;;:::o;6495:146::-;6555:7;6575:6;6588:1;6584;:5;6575:14;;6612:1;6607;:6;;6600:14;;;;;;6632:1;6625:8;;6495:146;;;;;;:::o;7006:113::-;7071:7;7102:1;7098;:5;:13;;7110:1;7098:13;;;7106:1;7098:13;7091:20;;7006:113;;;;;:::o;27319:2398::-;27571:4;27593:13;27630:25;27810:20;27886;27962:17;28075;28188:21;28303;27609:10;27593:26;;27658:86;27675:20;27697:5;:22;;;27721:5;:22;;;27658:16;:86::i;:::-;27630:114;;27791:1;27761:32;;:5;:18;;;:32;;;;27757:1928;;;27853:18;;;;;;;;;;;27833:38;;:5;:16;;;:38;;;27810:61;;27929:18;;;;;;;;;;;27909:38;;:5;:16;;;:38;;;27886:61;;27982:78;27999:20;28021:5;:22;;;28045:5;:14;;;27982:16;:78::i;:::-;27962:98;;28095:78;28112:20;28134:5;:22;;;28158:5;:14;;;28095:16;:78::i;:::-;28075:98;;28212:15;:76;;28276:12;28212:76;;;28230:43;28238:20;28260:12;28230:7;:43::i;:::-;28212:76;28188:100;;28327:15;:76;;28391:12;28327:76;;;28345:43;28353:20;28375:12;28345:7;:43::i;:::-;28327:76;28303:100;;28473:16;28427:43;28438:18;;;;;;;;;;;28458:5;:11;;;28427:10;:43::i;:::-;:62;:147;;;;28558:16;28510:45;28523:18;;;;;;;;;;;28543:5;:11;;;28510:12;:45::i;:::-;:64;28427:147;:224;;;;28635:16;28595:37;28606:18;;;;;;;;;;;28626:5;28595:10;:37::i;:::-;:56;28427:224;:303;;;;28714:16;28672:39;28685:18;;;;;;;;;;;28705:5;28672:12;:39::i;:::-;:58;28427:303;28420:338;;;28753:5;28746:12;;;;28420:338;28780:15;28779:16;:237;;;;;28847:20;28803:41;28814:5;:16;;;28832:5;:11;;;28803:10;:41::i;:::-;:64;:212;;;;28995:20;28949:43;28962:5;:16;;;28980:5;:11;;;28949:12;:43::i;:::-;:66;28803:212;28779:237;28775:269;;;29039:5;29032:12;;;;28775:269;29064:15;29063:16;:225;;;;;29125:20;29087:35;29098:5;:16;;;29116:5;29087:10;:35::i;:::-;:58;:200;;;;29267:20;29227:37;29240:5;:16;;;29258:5;29227:12;:37::i;:::-;:60;29087:200;29063:225;29059:257;;;29311:5;29304:12;;;;29059:257;27757:1928;;;29385:20;29341:41;29352:5;:16;;;29370:5;:11;;;29341:10;:41::i;:::-;:64;:154;;;;29475:20;29429:43;29442:5;:16;;;29460:5;:11;;;29429:12;:43::i;:::-;:66;29341:154;:236;;;;29557:20;29519:35;29530:5;:16;;;29548:5;29519:10;:35::i;:::-;:58;29341:236;:320;;;;29641:20;29601:37;29614:5;:16;;;29632:5;29601:12;:37::i;:::-;:60;29341:320;29334:351;;;29680:5;29673:12;;;;29334:351;27757:1928;29705:4;29698:11;;27319:2398;;;;;;;;;;;;;:::o;26778:288::-;26943:4;26991:29;;;;;;;;;;;26972:62;;;27035:5;27042:4;27048:2;27052:5;26972:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26965:93;;26778:288;;;;;;;:::o;29893:345::-;30107:4;30142:5;30136:22;;;8032:4;30136:52;;30189:5;30136:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30129:66;;29893:345;;;;;:::o;30480:378::-;30696:4;30731:5;30725:22;;;8032:4;30725:52;;30778:5;30785:29;;;;;;;;;;;30725:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30718:97;;30480:378;;;;;:::o;7511:23350::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2228000","executionCost":"43012","totalCost":"2271012"},"external":{"EXTERNAL_QUERY_GAS_LIMIT()":"547","TOKEN_TRANSFER_PROXY_CONTRACT()":"673","VERSION()":"infinite","ZRX_TOKEN_CONTRACT()":"541","batchCancelOrders(address[5][],uint256[6][],uint256[])":"infinite","batchFillOrKillOrders(address[5][],uint256[6][],uint256[],uint8[],bytes32[],bytes32[])":"infinite","batchFillOrders(address[5][],uint256[6][],uint256[],bool,uint8[],bytes32[],bytes32[])":"infinite","cancelOrder(address[5],uint256[6],uint256)":"infinite","cancelled(bytes32)":"546","fillOrKillOrder(address[5],uint256[6],uint256,uint8,bytes32,bytes32)":"infinite","fillOrder(address[5],uint256[6],uint256,bool,uint8,bytes32,bytes32)":"infinite","fillOrdersUpTo(address[5][],uint256[6][],uint256,bool,uint8[],bytes32[],bytes32[])":"infinite","filled(bytes32)":"524","getOrderHash(address[5],uint256[6])":"infinite","getPartialAmount(uint256,uint256,uint256)":"754","getUnavailableTakerTokenAmount(bytes32)":"1108","isRoundingError(uint256,uint256,uint256)":"infinite","isValidSignature(address,bytes32,uint8,bytes32,bytes32)":"infinite"},"internal":{"getAllowance(address,address)":"infinite","getBalance(address,address)":"infinite","isTransferable(struct Exchange.Order memory,uint256)":"infinite","transferViaTokenTransferProxy(address,address,address,uint256)":"infinite"}},"legacyAssembly":{".code":[{"begin":7511,"end":30861,"name":"PUSH","value":"60"},{"begin":7511,"end":30861,"name":"PUSH","value":"40"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":9536,"end":9713,"name":"CALLVALUE"},{"begin":9536,"end":9713,"name":"ISZERO"},{"begin":9536,"end":9713,"name":"PUSH [tag]","value":"1"},{"begin":9536,"end":9713,"name":"JUMPI"},{"begin":9536,"end":9713,"name":"PUSH","value":"0"},{"begin":9536,"end":9713,"name":"DUP1"},{"begin":9536,"end":9713,"name":"REVERT"},{"begin":9536,"end":9713,"name":"tag","value":"1"},{"begin":9536,"end":9713,"name":"JUMPDEST"},{"begin":9536,"end":9713,"name":"PUSH","value":"40"},{"begin":9536,"end":9713,"name":"MLOAD"},{"begin":9536,"end":9713,"name":"PUSH","value":"40"},{"begin":9536,"end":9713,"name":"DUP1"},{"begin":9536,"end":9713,"name":"PUSHSIZE"},{"begin":9536,"end":9713,"name":"DUP4"},{"begin":9536,"end":9713,"name":"CODECOPY"},{"begin":9536,"end":9713,"name":"DUP2"},{"begin":9536,"end":9713,"name":"ADD"},{"begin":9536,"end":9713,"name":"PUSH","value":"40"},{"begin":9536,"end":9713,"name":"MSTORE"},{"begin":9536,"end":9713,"name":"DUP1"},{"begin":9536,"end":9713,"name":"DUP1"},{"begin":9536,"end":9713,"name":"MLOAD"},{"begin":9536,"end":9713,"name":"SWAP1"},{"begin":9536,"end":9713,"name":"PUSH","value":"20"},{"begin":9536,"end":9713,"name":"ADD"},{"begin":9536,"end":9713,"name":"SWAP1"},{"begin":9536,"end":9713,"name":"SWAP2"},{"begin":9536,"end":9713,"name":"SWAP1"},{"begin":9536,"end":9713,"name":"DUP1"},{"begin":9536,"end":9713,"name":"MLOAD"},{"begin":9536,"end":9713,"name":"SWAP1"},{"begin":9536,"end":9713,"name":"PUSH","value":"20"},{"begin":9536,"end":9713,"name":"ADD"},{"begin":9536,"end":9713,"name":"SWAP1"},{"begin":9536,"end":9713,"name":"SWAP2"},{"begin":9536,"end":9713,"name":"SWAP1"},{"begin":9536,"end":9713,"name":"POP"},{"begin":9536,"end":9713,"name":"POP"},{"begin":9536,"end":9713,"name":"tag","value":"2"},{"begin":9536,"end":9713,"name":"JUMPDEST"},{"begin":9634,"end":9643,"name":"DUP2"},{"begin":9613,"end":9631,"name":"PUSH","value":"0"},{"begin":9613,"end":9631,"name":"DUP1"},{"begin":9613,"end":9643,"name":"PUSH","value":"100"},{"begin":9613,"end":9643,"name":"EXP"},{"begin":9613,"end":9643,"name":"DUP2"},{"begin":9613,"end":9643,"name":"SLOAD"},{"begin":9613,"end":9643,"name":"DUP2"},{"begin":9613,"end":9643,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":9613,"end":9643,"name":"MUL"},{"begin":9613,"end":9643,"name":"NOT"},{"begin":9613,"end":9643,"name":"AND"},{"begin":9613,"end":9643,"name":"SWAP1"},{"begin":9613,"end":9643,"name":"DUP4"},{"begin":9613,"end":9643,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":9613,"end":9643,"name":"AND"},{"begin":9613,"end":9643,"name":"MUL"},{"begin":9613,"end":9643,"name":"OR"},{"begin":9613,"end":9643,"name":"SWAP1"},{"begin":9613,"end":9643,"name":"SSTORE"},{"begin":9613,"end":9643,"name":"POP"},{"begin":9686,"end":9705,"name":"DUP1"},{"begin":9654,"end":9683,"name":"PUSH","value":"1"},{"begin":9654,"end":9683,"name":"PUSH","value":"0"},{"begin":9654,"end":9705,"name":"PUSH","value":"100"},{"begin":9654,"end":9705,"name":"EXP"},{"begin":9654,"end":9705,"name":"DUP2"},{"begin":9654,"end":9705,"name":"SLOAD"},{"begin":9654,"end":9705,"name":"DUP2"},{"begin":9654,"end":9705,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":9654,"end":9705,"name":"MUL"},{"begin":9654,"end":9705,"name":"NOT"},{"begin":9654,"end":9705,"name":"AND"},{"begin":9654,"end":9705,"name":"SWAP1"},{"begin":9654,"end":9705,"name":"DUP4"},{"begin":9654,"end":9705,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":9654,"end":9705,"name":"AND"},{"begin":9654,"end":9705,"name":"MUL"},{"begin":9654,"end":9705,"name":"OR"},{"begin":9654,"end":9705,"name":"SWAP1"},{"begin":9654,"end":9705,"name":"SSTORE"},{"begin":9654,"end":9705,"name":"POP"},{"begin":9536,"end":9713,"name":"tag","value":"3"},{"begin":9536,"end":9713,"name":"JUMPDEST"},{"begin":9536,"end":9713,"name":"POP"},{"begin":9536,"end":9713,"name":"POP"},{"begin":7511,"end":30861,"name":"tag","value":"4"},{"begin":7511,"end":30861,"name":"JUMPDEST"},{"begin":7511,"end":30861,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"CODECOPY"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a723058205e29fca27c237714946be3a272456b24a9fb2b50c978b1c659981e51e4423a170029",".code":[{"begin":7511,"end":30861,"name":"PUSH","value":"60"},{"begin":7511,"end":30861,"name":"PUSH","value":"40"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"CALLDATASIZE"},{"begin":7511,"end":30861,"name":"ISZERO"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"1"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"CALLDATALOAD"},{"begin":7511,"end":30861,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":7511,"end":30861,"name":"SWAP1"},{"begin":7511,"end":30861,"name":"DIV"},{"begin":7511,"end":30861,"name":"PUSH","value":"FFFFFFFF"},{"begin":7511,"end":30861,"name":"AND"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"14DF96EE"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"2"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"288CDC91"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"3"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"2AC12622"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"4"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"363349BE"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"5"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"394C21E7"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"6"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"3B30BA59"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"7"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"4F150787"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"8"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"741BCC93"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"9"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"7E9ABB50"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"10"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"8163681E"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"11"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"98024A8B"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"12"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"ADD1CBC5"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"13"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"B7B2C7D6"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"14"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"BAA0181D"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"15"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"BC61394A"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"16"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"CFC4D0EC"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"17"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"F06BBF75"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"18"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"FFA1AD74"},{"begin":7511,"end":30861,"name":"EQ"},{"begin":7511,"end":30861,"name":"PUSH [tag]","value":"19"},{"begin":7511,"end":30861,"name":"JUMPI"},{"begin":7511,"end":30861,"name":"tag","value":"1"},{"begin":7511,"end":30861,"name":"JUMPDEST"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"REVERT"},{"begin":25042,"end":25513,"name":"tag","value":"2"},{"begin":25042,"end":25513,"name":"JUMPDEST"},{"begin":25042,"end":25513,"name":"CALLVALUE"},{"begin":25042,"end":25513,"name":"ISZERO"},{"begin":25042,"end":25513,"name":"PUSH [tag]","value":"20"},{"begin":25042,"end":25513,"name":"JUMPI"},{"begin":25042,"end":25513,"name":"PUSH","value":"0"},{"begin":25042,"end":25513,"name":"DUP1"},{"begin":25042,"end":25513,"name":"REVERT"},{"begin":25042,"end":25513,"name":"tag","value":"20"},{"begin":25042,"end":25513,"name":"JUMPDEST"},{"begin":25042,"end":25513,"name":"PUSH [tag]","value":"21"},{"begin":25042,"end":25513,"name":"PUSH","value":"4"},{"begin":25042,"end":25513,"name":"DUP1"},{"begin":25042,"end":25513,"name":"DUP1"},{"begin":25042,"end":25513,"name":"CALLDATALOAD"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"PUSH","value":"20"},{"begin":25042,"end":25513,"name":"ADD"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"SWAP2"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"DUP1"},{"begin":25042,"end":25513,"name":"CALLDATALOAD"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"PUSH","value":"20"},{"begin":25042,"end":25513,"name":"ADD"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"SWAP2"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"DUP1"},{"begin":25042,"end":25513,"name":"CALLDATALOAD"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"PUSH","value":"20"},{"begin":25042,"end":25513,"name":"ADD"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"SWAP2"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"PUSH [tag]","value":"22"},{"begin":25042,"end":25513,"name":"JUMP"},{"begin":25042,"end":25513,"name":"tag","value":"21"},{"begin":25042,"end":25513,"name":"JUMPDEST"},{"begin":25042,"end":25513,"name":"PUSH","value":"40"},{"begin":25042,"end":25513,"name":"MLOAD"},{"begin":25042,"end":25513,"name":"DUP1"},{"begin":25042,"end":25513,"name":"DUP3"},{"begin":25042,"end":25513,"name":"ISZERO"},{"begin":25042,"end":25513,"name":"ISZERO"},{"begin":25042,"end":25513,"name":"ISZERO"},{"begin":25042,"end":25513,"name":"ISZERO"},{"begin":25042,"end":25513,"name":"DUP2"},{"begin":25042,"end":25513,"name":"MSTORE"},{"begin":25042,"end":25513,"name":"PUSH","value":"20"},{"begin":25042,"end":25513,"name":"ADD"},{"begin":25042,"end":25513,"name":"SWAP2"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"PUSH","value":"40"},{"begin":25042,"end":25513,"name":"MLOAD"},{"begin":25042,"end":25513,"name":"DUP1"},{"begin":25042,"end":25513,"name":"SWAP2"},{"begin":25042,"end":25513,"name":"SUB"},{"begin":25042,"end":25513,"name":"SWAP1"},{"begin":25042,"end":25513,"name":"RETURN"},{"begin":8269,"end":8308,"name":"tag","value":"3"},{"begin":8269,"end":8308,"name":"JUMPDEST"},{"begin":8269,"end":8308,"name":"CALLVALUE"},{"begin":8269,"end":8308,"name":"ISZERO"},{"begin":8269,"end":8308,"name":"PUSH [tag]","value":"23"},{"begin":8269,"end":8308,"name":"JUMPI"},{"begin":8269,"end":8308,"name":"PUSH","value":"0"},{"begin":8269,"end":8308,"name":"DUP1"},{"begin":8269,"end":8308,"name":"REVERT"},{"begin":8269,"end":8308,"name":"tag","value":"23"},{"begin":8269,"end":8308,"name":"JUMPDEST"},{"begin":8269,"end":8308,"name":"PUSH [tag]","value":"24"},{"begin":8269,"end":8308,"name":"PUSH","value":"4"},{"begin":8269,"end":8308,"name":"DUP1"},{"begin":8269,"end":8308,"name":"DUP1"},{"begin":8269,"end":8308,"name":"CALLDATALOAD"},{"begin":8269,"end":8308,"name":"PUSH","value":"0"},{"begin":8269,"end":8308,"name":"NOT"},{"begin":8269,"end":8308,"name":"AND"},{"begin":8269,"end":8308,"name":"SWAP1"},{"begin":8269,"end":8308,"name":"PUSH","value":"20"},{"begin":8269,"end":8308,"name":"ADD"},{"begin":8269,"end":8308,"name":"SWAP1"},{"begin":8269,"end":8308,"name":"SWAP2"},{"begin":8269,"end":8308,"name":"SWAP1"},{"begin":8269,"end":8308,"name":"POP"},{"begin":8269,"end":8308,"name":"POP"},{"begin":8269,"end":8308,"name":"PUSH [tag]","value":"25"},{"begin":8269,"end":8308,"name":"JUMP"},{"begin":8269,"end":8308,"name":"tag","value":"24"},{"begin":8269,"end":8308,"name":"JUMPDEST"},{"begin":8269,"end":8308,"name":"PUSH","value":"40"},{"begin":8269,"end":8308,"name":"MLOAD"},{"begin":8269,"end":8308,"name":"DUP1"},{"begin":8269,"end":8308,"name":"DUP3"},{"begin":8269,"end":8308,"name":"DUP2"},{"begin":8269,"end":8308,"name":"MSTORE"},{"begin":8269,"end":8308,"name":"PUSH","value":"20"},{"begin":8269,"end":8308,"name":"ADD"},{"begin":8269,"end":8308,"name":"SWAP2"},{"begin":8269,"end":8308,"name":"POP"},{"begin":8269,"end":8308,"name":"POP"},{"begin":8269,"end":8308,"name":"PUSH","value":"40"},{"begin":8269,"end":8308,"name":"MLOAD"},{"begin":8269,"end":8308,"name":"DUP1"},{"begin":8269,"end":8308,"name":"SWAP2"},{"begin":8269,"end":8308,"name":"SUB"},{"begin":8269,"end":8308,"name":"SWAP1"},{"begin":8269,"end":8308,"name":"RETURN"},{"begin":8315,"end":8357,"name":"tag","value":"4"},{"begin":8315,"end":8357,"name":"JUMPDEST"},{"begin":8315,"end":8357,"name":"CALLVALUE"},{"begin":8315,"end":8357,"name":"ISZERO"},{"begin":8315,"end":8357,"name":"PUSH [tag]","value":"26"},{"begin":8315,"end":8357,"name":"JUMPI"},{"begin":8315,"end":8357,"name":"PUSH","value":"0"},{"begin":8315,"end":8357,"name":"DUP1"},{"begin":8315,"end":8357,"name":"REVERT"},{"begin":8315,"end":8357,"name":"tag","value":"26"},{"begin":8315,"end":8357,"name":"JUMPDEST"},{"begin":8315,"end":8357,"name":"PUSH [tag]","value":"27"},{"begin":8315,"end":8357,"name":"PUSH","value":"4"},{"begin":8315,"end":8357,"name":"DUP1"},{"begin":8315,"end":8357,"name":"DUP1"},{"begin":8315,"end":8357,"name":"CALLDATALOAD"},{"begin":8315,"end":8357,"name":"PUSH","value":"0"},{"begin":8315,"end":8357,"name":"NOT"},{"begin":8315,"end":8357,"name":"AND"},{"begin":8315,"end":8357,"name":"SWAP1"},{"begin":8315,"end":8357,"name":"PUSH","value":"20"},{"begin":8315,"end":8357,"name":"ADD"},{"begin":8315,"end":8357,"name":"SWAP1"},{"begin":8315,"end":8357,"name":"SWAP2"},{"begin":8315,"end":8357,"name":"SWAP1"},{"begin":8315,"end":8357,"name":"POP"},{"begin":8315,"end":8357,"name":"POP"},{"begin":8315,"end":8357,"name":"PUSH [tag]","value":"28"},{"begin":8315,"end":8357,"name":"JUMP"},{"begin":8315,"end":8357,"name":"tag","value":"27"},{"begin":8315,"end":8357,"name":"JUMPDEST"},{"begin":8315,"end":8357,"name":"PUSH","value":"40"},{"begin":8315,"end":8357,"name":"MLOAD"},{"begin":8315,"end":8357,"name":"DUP1"},{"begin":8315,"end":8357,"name":"DUP3"},{"begin":8315,"end":8357,"name":"DUP2"},{"begin":8315,"end":8357,"name":"MSTORE"},{"begin":8315,"end":8357,"name":"PUSH","value":"20"},{"begin":8315,"end":8357,"name":"ADD"},{"begin":8315,"end":8357,"name":"SWAP2"},{"begin":8315,"end":8357,"name":"POP"},{"begin":8315,"end":8357,"name":"POP"},{"begin":8315,"end":8357,"name":"PUSH","value":"40"},{"begin":8315,"end":8357,"name":"MLOAD"},{"begin":8315,"end":8357,"name":"DUP1"},{"begin":8315,"end":8357,"name":"SWAP2"},{"begin":8315,"end":8357,"name":"SUB"},{"begin":8315,"end":8357,"name":"SWAP1"},{"begin":8315,"end":8357,"name":"RETURN"},{"begin":21171,"end":22186,"name":"tag","value":"5"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"CALLVALUE"},{"begin":21171,"end":22186,"name":"ISZERO"},{"begin":21171,"end":22186,"name":"PUSH [tag]","value":"29"},{"begin":21171,"end":22186,"name":"JUMPI"},{"begin":21171,"end":22186,"name":"PUSH","value":"0"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"REVERT"},{"begin":21171,"end":22186,"name":"tag","value":"29"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"PUSH [tag]","value":"30"},{"begin":21171,"end":22186,"name":"PUSH","value":"4"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP4"},{"begin":21171,"end":22186,"name":"SWAP3"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"0"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"tag","value":"31"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"LT"},{"begin":21171,"end":22186,"name":"ISZERO"},{"begin":21171,"end":22186,"name":"PUSH [tag]","value":"32"},{"begin":21171,"end":22186,"name":"JUMPI"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"PUSH","value":"A0"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"5"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP3"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"PUSH","value":"5"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"CALLDATACOPY"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"1"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH [tag]","value":"31"},{"begin":21171,"end":22186,"name":"JUMP"},{"begin":21171,"end":22186,"name":"tag","value":"32"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP4"},{"begin":21171,"end":22186,"name":"SWAP3"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"0"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"tag","value":"33"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"LT"},{"begin":21171,"end":22186,"name":"ISZERO"},{"begin":21171,"end":22186,"name":"PUSH [tag]","value":"34"},{"begin":21171,"end":22186,"name":"JUMPI"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"PUSH","value":"C0"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"6"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP3"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"PUSH","value":"6"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"CALLDATACOPY"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"1"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH [tag]","value":"33"},{"begin":21171,"end":22186,"name":"JUMP"},{"begin":21171,"end":22186,"name":"tag","value":"34"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"ISZERO"},{"begin":21171,"end":22186,"name":"ISZERO"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP4"},{"begin":21171,"end":22186,"name":"SWAP3"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"CALLDATACOPY"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP4"},{"begin":21171,"end":22186,"name":"SWAP3"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"CALLDATACOPY"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"CALLDATALOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP4"},{"begin":21171,"end":22186,"name":"SWAP3"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"DUP4"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"MUL"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP5"},{"begin":21171,"end":22186,"name":"CALLDATACOPY"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"PUSH [tag]","value":"35"},{"begin":21171,"end":22186,"name":"JUMP"},{"begin":21171,"end":22186,"name":"tag","value":"30"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"DUP3"},{"begin":21171,"end":22186,"name":"DUP2"},{"begin":21171,"end":22186,"name":"MSTORE"},{"begin":21171,"end":22186,"name":"PUSH","value":"20"},{"begin":21171,"end":22186,"name":"ADD"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"PUSH","value":"40"},{"begin":21171,"end":22186,"name":"MLOAD"},{"begin":21171,"end":22186,"name":"DUP1"},{"begin":21171,"end":22186,"name":"SWAP2"},{"begin":21171,"end":22186,"name":"SUB"},{"begin":21171,"end":22186,"name":"SWAP1"},{"begin":21171,"end":22186,"name":"RETURN"},{"begin":15009,"end":17000,"name":"tag","value":"6"},{"begin":15009,"end":17000,"name":"JUMPDEST"},{"begin":15009,"end":17000,"name":"CALLVALUE"},{"begin":15009,"end":17000,"name":"ISZERO"},{"begin":15009,"end":17000,"name":"PUSH [tag]","value":"36"},{"begin":15009,"end":17000,"name":"JUMPI"},{"begin":15009,"end":17000,"name":"PUSH","value":"0"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"REVERT"},{"begin":15009,"end":17000,"name":"tag","value":"36"},{"begin":15009,"end":17000,"name":"JUMPDEST"},{"begin":15009,"end":17000,"name":"PUSH [tag]","value":"37"},{"begin":15009,"end":17000,"name":"PUSH","value":"4"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"PUSH","value":"A0"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"PUSH","value":"5"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"PUSH","value":"20"},{"begin":15009,"end":17000,"name":"MUL"},{"begin":15009,"end":17000,"name":"PUSH","value":"40"},{"begin":15009,"end":17000,"name":"MLOAD"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"DUP2"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"PUSH","value":"40"},{"begin":15009,"end":17000,"name":"MSTORE"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"SWAP3"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"DUP3"},{"begin":15009,"end":17000,"name":"PUSH","value":"5"},{"begin":15009,"end":17000,"name":"PUSH","value":"20"},{"begin":15009,"end":17000,"name":"MUL"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"DUP3"},{"begin":15009,"end":17000,"name":"DUP5"},{"begin":15009,"end":17000,"name":"CALLDATACOPY"},{"begin":15009,"end":17000,"name":"DUP3"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"PUSH","value":"C0"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"PUSH","value":"6"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"PUSH","value":"20"},{"begin":15009,"end":17000,"name":"MUL"},{"begin":15009,"end":17000,"name":"PUSH","value":"40"},{"begin":15009,"end":17000,"name":"MLOAD"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"DUP2"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"PUSH","value":"40"},{"begin":15009,"end":17000,"name":"MSTORE"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"SWAP3"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"DUP3"},{"begin":15009,"end":17000,"name":"PUSH","value":"6"},{"begin":15009,"end":17000,"name":"PUSH","value":"20"},{"begin":15009,"end":17000,"name":"MUL"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"DUP3"},{"begin":15009,"end":17000,"name":"DUP5"},{"begin":15009,"end":17000,"name":"CALLDATACOPY"},{"begin":15009,"end":17000,"name":"DUP3"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"CALLDATALOAD"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"PUSH","value":"20"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"PUSH [tag]","value":"38"},{"begin":15009,"end":17000,"name":"JUMP"},{"begin":15009,"end":17000,"name":"tag","value":"37"},{"begin":15009,"end":17000,"name":"JUMPDEST"},{"begin":15009,"end":17000,"name":"PUSH","value":"40"},{"begin":15009,"end":17000,"name":"MLOAD"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"DUP3"},{"begin":15009,"end":17000,"name":"DUP2"},{"begin":15009,"end":17000,"name":"MSTORE"},{"begin":15009,"end":17000,"name":"PUSH","value":"20"},{"begin":15009,"end":17000,"name":"ADD"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"PUSH","value":"40"},{"begin":15009,"end":17000,"name":"MLOAD"},{"begin":15009,"end":17000,"name":"DUP1"},{"begin":15009,"end":17000,"name":"SWAP2"},{"begin":15009,"end":17000,"name":"SUB"},{"begin":15009,"end":17000,"name":"SWAP1"},{"begin":15009,"end":17000,"name":"RETURN"},{"begin":8094,"end":8127,"name":"tag","value":"7"},{"begin":8094,"end":8127,"name":"JUMPDEST"},{"begin":8094,"end":8127,"name":"CALLVALUE"},{"begin":8094,"end":8127,"name":"ISZERO"},{"begin":8094,"end":8127,"name":"PUSH [tag]","value":"39"},{"begin":8094,"end":8127,"name":"JUMPI"},{"begin":8094,"end":8127,"name":"PUSH","value":"0"},{"begin":8094,"end":8127,"name":"DUP1"},{"begin":8094,"end":8127,"name":"REVERT"},{"begin":8094,"end":8127,"name":"tag","value":"39"},{"begin":8094,"end":8127,"name":"JUMPDEST"},{"begin":8094,"end":8127,"name":"PUSH [tag]","value":"40"},{"begin":8094,"end":8127,"name":"PUSH [tag]","value":"41"},{"begin":8094,"end":8127,"name":"JUMP"},{"begin":8094,"end":8127,"name":"tag","value":"40"},{"begin":8094,"end":8127,"name":"JUMPDEST"},{"begin":8094,"end":8127,"name":"PUSH","value":"40"},{"begin":8094,"end":8127,"name":"MLOAD"},{"begin":8094,"end":8127,"name":"DUP1"},{"begin":8094,"end":8127,"name":"DUP3"},{"begin":8094,"end":8127,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":8094,"end":8127,"name":"AND"},{"begin":8094,"end":8127,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":8094,"end":8127,"name":"AND"},{"begin":8094,"end":8127,"name":"DUP2"},{"begin":8094,"end":8127,"name":"MSTORE"},{"begin":8094,"end":8127,"name":"PUSH","value":"20"},{"begin":8094,"end":8127,"name":"ADD"},{"begin":8094,"end":8127,"name":"SWAP2"},{"begin":8094,"end":8127,"name":"POP"},{"begin":8094,"end":8127,"name":"POP"},{"begin":8094,"end":8127,"name":"PUSH","value":"40"},{"begin":8094,"end":8127,"name":"MLOAD"},{"begin":8094,"end":8127,"name":"DUP1"},{"begin":8094,"end":8127,"name":"SWAP2"},{"begin":8094,"end":8127,"name":"SUB"},{"begin":8094,"end":8127,"name":"SWAP1"},{"begin":8094,"end":8127,"name":"RETURN"},{"begin":19892,"end":20423,"name":"tag","value":"8"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"CALLVALUE"},{"begin":19892,"end":20423,"name":"ISZERO"},{"begin":19892,"end":20423,"name":"PUSH [tag]","value":"42"},{"begin":19892,"end":20423,"name":"JUMPI"},{"begin":19892,"end":20423,"name":"PUSH","value":"0"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"REVERT"},{"begin":19892,"end":20423,"name":"tag","value":"42"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"PUSH [tag]","value":"43"},{"begin":19892,"end":20423,"name":"PUSH","value":"4"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP4"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"0"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"tag","value":"44"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"LT"},{"begin":19892,"end":20423,"name":"ISZERO"},{"begin":19892,"end":20423,"name":"PUSH [tag]","value":"45"},{"begin":19892,"end":20423,"name":"JUMPI"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"PUSH","value":"A0"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"5"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"PUSH","value":"5"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"CALLDATACOPY"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"1"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH [tag]","value":"44"},{"begin":19892,"end":20423,"name":"JUMP"},{"begin":19892,"end":20423,"name":"tag","value":"45"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP4"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"0"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"tag","value":"46"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"LT"},{"begin":19892,"end":20423,"name":"ISZERO"},{"begin":19892,"end":20423,"name":"PUSH [tag]","value":"47"},{"begin":19892,"end":20423,"name":"JUMPI"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"PUSH","value":"C0"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"6"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"PUSH","value":"6"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"CALLDATACOPY"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"1"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH [tag]","value":"46"},{"begin":19892,"end":20423,"name":"JUMP"},{"begin":19892,"end":20423,"name":"tag","value":"47"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP4"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"CALLDATACOPY"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP4"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"CALLDATACOPY"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP4"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"CALLDATACOPY"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"CALLDATALOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MLOAD"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"PUSH","value":"40"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"SWAP4"},{"begin":19892,"end":20423,"name":"SWAP3"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"DUP2"},{"begin":19892,"end":20423,"name":"MSTORE"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"DUP4"},{"begin":19892,"end":20423,"name":"PUSH","value":"20"},{"begin":19892,"end":20423,"name":"MUL"},{"begin":19892,"end":20423,"name":"DUP1"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"DUP5"},{"begin":19892,"end":20423,"name":"CALLDATACOPY"},{"begin":19892,"end":20423,"name":"DUP3"},{"begin":19892,"end":20423,"name":"ADD"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"SWAP2"},{"begin":19892,"end":20423,"name":"SWAP1"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"PUSH [tag]","value":"48"},{"begin":19892,"end":20423,"name":"JUMP"},{"begin":19892,"end":20423,"name":"tag","value":"43"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"STOP"},{"begin":17634,"end":18071,"name":"tag","value":"9"},{"begin":17634,"end":18071,"name":"JUMPDEST"},{"begin":17634,"end":18071,"name":"CALLVALUE"},{"begin":17634,"end":18071,"name":"ISZERO"},{"begin":17634,"end":18071,"name":"PUSH [tag]","value":"49"},{"begin":17634,"end":18071,"name":"JUMPI"},{"begin":17634,"end":18071,"name":"PUSH","value":"0"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"REVERT"},{"begin":17634,"end":18071,"name":"tag","value":"49"},{"begin":17634,"end":18071,"name":"JUMPDEST"},{"begin":17634,"end":18071,"name":"PUSH [tag]","value":"50"},{"begin":17634,"end":18071,"name":"PUSH","value":"4"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"A0"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"5"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"MUL"},{"begin":17634,"end":18071,"name":"PUSH","value":"40"},{"begin":17634,"end":18071,"name":"MLOAD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP2"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"PUSH","value":"40"},{"begin":17634,"end":18071,"name":"MSTORE"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"SWAP3"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP3"},{"begin":17634,"end":18071,"name":"PUSH","value":"5"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"MUL"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"DUP3"},{"begin":17634,"end":18071,"name":"DUP5"},{"begin":17634,"end":18071,"name":"CALLDATACOPY"},{"begin":17634,"end":18071,"name":"DUP3"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"C0"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"6"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"MUL"},{"begin":17634,"end":18071,"name":"PUSH","value":"40"},{"begin":17634,"end":18071,"name":"MLOAD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP2"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"PUSH","value":"40"},{"begin":17634,"end":18071,"name":"MSTORE"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"SWAP3"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP3"},{"begin":17634,"end":18071,"name":"PUSH","value":"6"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"MUL"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"DUP3"},{"begin":17634,"end":18071,"name":"DUP5"},{"begin":17634,"end":18071,"name":"CALLDATACOPY"},{"begin":17634,"end":18071,"name":"DUP3"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"CALLDATALOAD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"CALLDATALOAD"},{"begin":17634,"end":18071,"name":"PUSH","value":"FF"},{"begin":17634,"end":18071,"name":"AND"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"CALLDATALOAD"},{"begin":17634,"end":18071,"name":"PUSH","value":"0"},{"begin":17634,"end":18071,"name":"NOT"},{"begin":17634,"end":18071,"name":"AND"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"DUP1"},{"begin":17634,"end":18071,"name":"CALLDATALOAD"},{"begin":17634,"end":18071,"name":"PUSH","value":"0"},{"begin":17634,"end":18071,"name":"NOT"},{"begin":17634,"end":18071,"name":"AND"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"PUSH","value":"20"},{"begin":17634,"end":18071,"name":"ADD"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"SWAP2"},{"begin":17634,"end":18071,"name":"SWAP1"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"PUSH [tag]","value":"51"},{"begin":17634,"end":18071,"name":"JUMP"},{"begin":17634,"end":18071,"name":"tag","value":"50"},{"begin":17634,"end":18071,"name":"JUMPDEST"},{"begin":17634,"end":18071,"name":"STOP"},{"begin":26205,"end":26401,"name":"tag","value":"10"},{"begin":26205,"end":26401,"name":"JUMPDEST"},{"begin":26205,"end":26401,"name":"CALLVALUE"},{"begin":26205,"end":26401,"name":"ISZERO"},{"begin":26205,"end":26401,"name":"PUSH [tag]","value":"52"},{"begin":26205,"end":26401,"name":"JUMPI"},{"begin":26205,"end":26401,"name":"PUSH","value":"0"},{"begin":26205,"end":26401,"name":"DUP1"},{"begin":26205,"end":26401,"name":"REVERT"},{"begin":26205,"end":26401,"name":"tag","value":"52"},{"begin":26205,"end":26401,"name":"JUMPDEST"},{"begin":26205,"end":26401,"name":"PUSH [tag]","value":"53"},{"begin":26205,"end":26401,"name":"PUSH","value":"4"},{"begin":26205,"end":26401,"name":"DUP1"},{"begin":26205,"end":26401,"name":"DUP1"},{"begin":26205,"end":26401,"name":"CALLDATALOAD"},{"begin":26205,"end":26401,"name":"PUSH","value":"0"},{"begin":26205,"end":26401,"name":"NOT"},{"begin":26205,"end":26401,"name":"AND"},{"begin":26205,"end":26401,"name":"SWAP1"},{"begin":26205,"end":26401,"name":"PUSH","value":"20"},{"begin":26205,"end":26401,"name":"ADD"},{"begin":26205,"end":26401,"name":"SWAP1"},{"begin":26205,"end":26401,"name":"SWAP2"},{"begin":26205,"end":26401,"name":"SWAP1"},{"begin":26205,"end":26401,"name":"POP"},{"begin":26205,"end":26401,"name":"POP"},{"begin":26205,"end":26401,"name":"PUSH [tag]","value":"54"},{"begin":26205,"end":26401,"name":"JUMP"},{"begin":26205,"end":26401,"name":"tag","value":"53"},{"begin":26205,"end":26401,"name":"JUMPDEST"},{"begin":26205,"end":26401,"name":"PUSH","value":"40"},{"begin":26205,"end":26401,"name":"MLOAD"},{"begin":26205,"end":26401,"name":"DUP1"},{"begin":26205,"end":26401,"name":"DUP3"},{"begin":26205,"end":26401,"name":"DUP2"},{"begin":26205,"end":26401,"name":"MSTORE"},{"begin":26205,"end":26401,"name":"PUSH","value":"20"},{"begin":26205,"end":26401,"name":"ADD"},{"begin":26205,"end":26401,"name":"SWAP2"},{"begin":26205,"end":26401,"name":"POP"},{"begin":26205,"end":26401,"name":"POP"},{"begin":26205,"end":26401,"name":"PUSH","value":"40"},{"begin":26205,"end":26401,"name":"MLOAD"},{"begin":26205,"end":26401,"name":"DUP1"},{"begin":26205,"end":26401,"name":"SWAP2"},{"begin":26205,"end":26401,"name":"SUB"},{"begin":26205,"end":26401,"name":"SWAP1"},{"begin":26205,"end":26401,"name":"RETURN"},{"begin":24430,"end":24796,"name":"tag","value":"11"},{"begin":24430,"end":24796,"name":"JUMPDEST"},{"begin":24430,"end":24796,"name":"CALLVALUE"},{"begin":24430,"end":24796,"name":"ISZERO"},{"begin":24430,"end":24796,"name":"PUSH [tag]","value":"55"},{"begin":24430,"end":24796,"name":"JUMPI"},{"begin":24430,"end":24796,"name":"PUSH","value":"0"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"REVERT"},{"begin":24430,"end":24796,"name":"tag","value":"55"},{"begin":24430,"end":24796,"name":"JUMPDEST"},{"begin":24430,"end":24796,"name":"PUSH [tag]","value":"56"},{"begin":24430,"end":24796,"name":"PUSH","value":"4"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"CALLDATALOAD"},{"begin":24430,"end":24796,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":24430,"end":24796,"name":"AND"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"PUSH","value":"20"},{"begin":24430,"end":24796,"name":"ADD"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"SWAP2"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"CALLDATALOAD"},{"begin":24430,"end":24796,"name":"PUSH","value":"0"},{"begin":24430,"end":24796,"name":"NOT"},{"begin":24430,"end":24796,"name":"AND"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"PUSH","value":"20"},{"begin":24430,"end":24796,"name":"ADD"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"SWAP2"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"CALLDATALOAD"},{"begin":24430,"end":24796,"name":"PUSH","value":"FF"},{"begin":24430,"end":24796,"name":"AND"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"PUSH","value":"20"},{"begin":24430,"end":24796,"name":"ADD"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"SWAP2"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"CALLDATALOAD"},{"begin":24430,"end":24796,"name":"PUSH","value":"0"},{"begin":24430,"end":24796,"name":"NOT"},{"begin":24430,"end":24796,"name":"AND"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"PUSH","value":"20"},{"begin":24430,"end":24796,"name":"ADD"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"SWAP2"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"CALLDATALOAD"},{"begin":24430,"end":24796,"name":"PUSH","value":"0"},{"begin":24430,"end":24796,"name":"NOT"},{"begin":24430,"end":24796,"name":"AND"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"PUSH","value":"20"},{"begin":24430,"end":24796,"name":"ADD"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"SWAP2"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"PUSH [tag]","value":"57"},{"begin":24430,"end":24796,"name":"JUMP"},{"begin":24430,"end":24796,"name":"tag","value":"56"},{"begin":24430,"end":24796,"name":"JUMPDEST"},{"begin":24430,"end":24796,"name":"PUSH","value":"40"},{"begin":24430,"end":24796,"name":"MLOAD"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"DUP3"},{"begin":24430,"end":24796,"name":"ISZERO"},{"begin":24430,"end":24796,"name":"ISZERO"},{"begin":24430,"end":24796,"name":"ISZERO"},{"begin":24430,"end":24796,"name":"ISZERO"},{"begin":24430,"end":24796,"name":"DUP2"},{"begin":24430,"end":24796,"name":"MSTORE"},{"begin":24430,"end":24796,"name":"PUSH","value":"20"},{"begin":24430,"end":24796,"name":"ADD"},{"begin":24430,"end":24796,"name":"SWAP2"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"PUSH","value":"40"},{"begin":24430,"end":24796,"name":"MLOAD"},{"begin":24430,"end":24796,"name":"DUP1"},{"begin":24430,"end":24796,"name":"SWAP2"},{"begin":24430,"end":24796,"name":"SUB"},{"begin":24430,"end":24796,"name":"SWAP1"},{"begin":24430,"end":24796,"name":"RETURN"},{"begin":25769,"end":25979,"name":"tag","value":"12"},{"begin":25769,"end":25979,"name":"JUMPDEST"},{"begin":25769,"end":25979,"name":"CALLVALUE"},{"begin":25769,"end":25979,"name":"ISZERO"},{"begin":25769,"end":25979,"name":"PUSH [tag]","value":"58"},{"begin":25769,"end":25979,"name":"JUMPI"},{"begin":25769,"end":25979,"name":"PUSH","value":"0"},{"begin":25769,"end":25979,"name":"DUP1"},{"begin":25769,"end":25979,"name":"REVERT"},{"begin":25769,"end":25979,"name":"tag","value":"58"},{"begin":25769,"end":25979,"name":"JUMPDEST"},{"begin":25769,"end":25979,"name":"PUSH [tag]","value":"59"},{"begin":25769,"end":25979,"name":"PUSH","value":"4"},{"begin":25769,"end":25979,"name":"DUP1"},{"begin":25769,"end":25979,"name":"DUP1"},{"begin":25769,"end":25979,"name":"CALLDATALOAD"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"PUSH","value":"20"},{"begin":25769,"end":25979,"name":"ADD"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"SWAP2"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"DUP1"},{"begin":25769,"end":25979,"name":"CALLDATALOAD"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"PUSH","value":"20"},{"begin":25769,"end":25979,"name":"ADD"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"SWAP2"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"DUP1"},{"begin":25769,"end":25979,"name":"CALLDATALOAD"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"PUSH","value":"20"},{"begin":25769,"end":25979,"name":"ADD"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"SWAP2"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"POP"},{"begin":25769,"end":25979,"name":"POP"},{"begin":25769,"end":25979,"name":"PUSH [tag]","value":"60"},{"begin":25769,"end":25979,"name":"JUMP"},{"begin":25769,"end":25979,"name":"tag","value":"59"},{"begin":25769,"end":25979,"name":"JUMPDEST"},{"begin":25769,"end":25979,"name":"PUSH","value":"40"},{"begin":25769,"end":25979,"name":"MLOAD"},{"begin":25769,"end":25979,"name":"DUP1"},{"begin":25769,"end":25979,"name":"DUP3"},{"begin":25769,"end":25979,"name":"DUP2"},{"begin":25769,"end":25979,"name":"MSTORE"},{"begin":25769,"end":25979,"name":"PUSH","value":"20"},{"begin":25769,"end":25979,"name":"ADD"},{"begin":25769,"end":25979,"name":"SWAP2"},{"begin":25769,"end":25979,"name":"POP"},{"begin":25769,"end":25979,"name":"POP"},{"begin":25769,"end":25979,"name":"PUSH","value":"40"},{"begin":25769,"end":25979,"name":"MLOAD"},{"begin":25769,"end":25979,"name":"DUP1"},{"begin":25769,"end":25979,"name":"SWAP2"},{"begin":25769,"end":25979,"name":"SUB"},{"begin":25769,"end":25979,"name":"SWAP1"},{"begin":25769,"end":25979,"name":"RETURN"},{"begin":8134,"end":8178,"name":"tag","value":"13"},{"begin":8134,"end":8178,"name":"JUMPDEST"},{"begin":8134,"end":8178,"name":"CALLVALUE"},{"begin":8134,"end":8178,"name":"ISZERO"},{"begin":8134,"end":8178,"name":"PUSH [tag]","value":"61"},{"begin":8134,"end":8178,"name":"JUMPI"},{"begin":8134,"end":8178,"name":"PUSH","value":"0"},{"begin":8134,"end":8178,"name":"DUP1"},{"begin":8134,"end":8178,"name":"REVERT"},{"begin":8134,"end":8178,"name":"tag","value":"61"},{"begin":8134,"end":8178,"name":"JUMPDEST"},{"begin":8134,"end":8178,"name":"PUSH [tag]","value":"62"},{"begin":8134,"end":8178,"name":"PUSH [tag]","value":"63"},{"begin":8134,"end":8178,"name":"JUMP"},{"begin":8134,"end":8178,"name":"tag","value":"62"},{"begin":8134,"end":8178,"name":"JUMPDEST"},{"begin":8134,"end":8178,"name":"PUSH","value":"40"},{"begin":8134,"end":8178,"name":"MLOAD"},{"begin":8134,"end":8178,"name":"DUP1"},{"begin":8134,"end":8178,"name":"DUP3"},{"begin":8134,"end":8178,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":8134,"end":8178,"name":"AND"},{"begin":8134,"end":8178,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":8134,"end":8178,"name":"AND"},{"begin":8134,"end":8178,"name":"DUP2"},{"begin":8134,"end":8178,"name":"MSTORE"},{"begin":8134,"end":8178,"name":"PUSH","value":"20"},{"begin":8134,"end":8178,"name":"ADD"},{"begin":8134,"end":8178,"name":"SWAP2"},{"begin":8134,"end":8178,"name":"POP"},{"begin":8134,"end":8178,"name":"POP"},{"begin":8134,"end":8178,"name":"PUSH","value":"40"},{"begin":8134,"end":8178,"name":"MLOAD"},{"begin":8134,"end":8178,"name":"DUP1"},{"begin":8134,"end":8178,"name":"SWAP2"},{"begin":8134,"end":8178,"name":"SUB"},{"begin":8134,"end":8178,"name":"SWAP1"},{"begin":8134,"end":8178,"name":"RETURN"},{"begin":18712,"end":19352,"name":"tag","value":"14"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"CALLVALUE"},{"begin":18712,"end":19352,"name":"ISZERO"},{"begin":18712,"end":19352,"name":"PUSH [tag]","value":"64"},{"begin":18712,"end":19352,"name":"JUMPI"},{"begin":18712,"end":19352,"name":"PUSH","value":"0"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"REVERT"},{"begin":18712,"end":19352,"name":"tag","value":"64"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"PUSH [tag]","value":"65"},{"begin":18712,"end":19352,"name":"PUSH","value":"4"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP4"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"0"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"tag","value":"66"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"LT"},{"begin":18712,"end":19352,"name":"ISZERO"},{"begin":18712,"end":19352,"name":"PUSH [tag]","value":"67"},{"begin":18712,"end":19352,"name":"JUMPI"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"PUSH","value":"A0"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"5"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"PUSH","value":"5"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"CALLDATACOPY"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"1"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH [tag]","value":"66"},{"begin":18712,"end":19352,"name":"JUMP"},{"begin":18712,"end":19352,"name":"tag","value":"67"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP4"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"0"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"tag","value":"68"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"LT"},{"begin":18712,"end":19352,"name":"ISZERO"},{"begin":18712,"end":19352,"name":"PUSH [tag]","value":"69"},{"begin":18712,"end":19352,"name":"JUMPI"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"PUSH","value":"C0"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"6"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"PUSH","value":"6"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"CALLDATACOPY"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"1"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH [tag]","value":"68"},{"begin":18712,"end":19352,"name":"JUMP"},{"begin":18712,"end":19352,"name":"tag","value":"69"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP4"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"CALLDATACOPY"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"ISZERO"},{"begin":18712,"end":19352,"name":"ISZERO"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP4"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"CALLDATACOPY"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP4"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"CALLDATACOPY"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"CALLDATALOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MLOAD"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"PUSH","value":"40"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"SWAP4"},{"begin":18712,"end":19352,"name":"SWAP3"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"DUP2"},{"begin":18712,"end":19352,"name":"MSTORE"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"DUP4"},{"begin":18712,"end":19352,"name":"PUSH","value":"20"},{"begin":18712,"end":19352,"name":"MUL"},{"begin":18712,"end":19352,"name":"DUP1"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"DUP5"},{"begin":18712,"end":19352,"name":"CALLDATACOPY"},{"begin":18712,"end":19352,"name":"DUP3"},{"begin":18712,"end":19352,"name":"ADD"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"SWAP2"},{"begin":18712,"end":19352,"name":"SWAP1"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"PUSH [tag]","value":"70"},{"begin":18712,"end":19352,"name":"JUMP"},{"begin":18712,"end":19352,"name":"tag","value":"65"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"STOP"},{"begin":22550,"end":22944,"name":"tag","value":"15"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"CALLVALUE"},{"begin":22550,"end":22944,"name":"ISZERO"},{"begin":22550,"end":22944,"name":"PUSH [tag]","value":"71"},{"begin":22550,"end":22944,"name":"JUMPI"},{"begin":22550,"end":22944,"name":"PUSH","value":"0"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"REVERT"},{"begin":22550,"end":22944,"name":"tag","value":"71"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"PUSH [tag]","value":"72"},{"begin":22550,"end":22944,"name":"PUSH","value":"4"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"CALLDATALOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"CALLDATALOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MLOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"SWAP4"},{"begin":22550,"end":22944,"name":"SWAP3"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"0"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"tag","value":"73"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"LT"},{"begin":22550,"end":22944,"name":"ISZERO"},{"begin":22550,"end":22944,"name":"PUSH [tag]","value":"74"},{"begin":22550,"end":22944,"name":"JUMPI"},{"begin":22550,"end":22944,"name":"DUP5"},{"begin":22550,"end":22944,"name":"DUP5"},{"begin":22550,"end":22944,"name":"DUP4"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"PUSH","value":"A0"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"5"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MLOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"SWAP3"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"PUSH","value":"5"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"DUP5"},{"begin":22550,"end":22944,"name":"CALLDATACOPY"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"1"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH [tag]","value":"73"},{"begin":22550,"end":22944,"name":"JUMP"},{"begin":22550,"end":22944,"name":"tag","value":"74"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"CALLDATALOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"CALLDATALOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MLOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"SWAP4"},{"begin":22550,"end":22944,"name":"SWAP3"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"0"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"tag","value":"75"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"LT"},{"begin":22550,"end":22944,"name":"ISZERO"},{"begin":22550,"end":22944,"name":"PUSH [tag]","value":"76"},{"begin":22550,"end":22944,"name":"JUMPI"},{"begin":22550,"end":22944,"name":"DUP5"},{"begin":22550,"end":22944,"name":"DUP5"},{"begin":22550,"end":22944,"name":"DUP4"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"PUSH","value":"C0"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"6"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MLOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"SWAP3"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"PUSH","value":"6"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"DUP5"},{"begin":22550,"end":22944,"name":"CALLDATACOPY"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"1"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH [tag]","value":"75"},{"begin":22550,"end":22944,"name":"JUMP"},{"begin":22550,"end":22944,"name":"tag","value":"76"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"CALLDATALOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"CALLDATALOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MLOAD"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"PUSH","value":"40"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"SWAP4"},{"begin":22550,"end":22944,"name":"SWAP3"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"DUP2"},{"begin":22550,"end":22944,"name":"MSTORE"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"DUP4"},{"begin":22550,"end":22944,"name":"DUP4"},{"begin":22550,"end":22944,"name":"PUSH","value":"20"},{"begin":22550,"end":22944,"name":"MUL"},{"begin":22550,"end":22944,"name":"DUP1"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"DUP5"},{"begin":22550,"end":22944,"name":"CALLDATACOPY"},{"begin":22550,"end":22944,"name":"DUP3"},{"begin":22550,"end":22944,"name":"ADD"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"SWAP2"},{"begin":22550,"end":22944,"name":"SWAP1"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"PUSH [tag]","value":"77"},{"begin":22550,"end":22944,"name":"JUMP"},{"begin":22550,"end":22944,"name":"tag","value":"72"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"STOP"},{"begin":10433,"end":14584,"name":"tag","value":"16"},{"begin":10433,"end":14584,"name":"JUMPDEST"},{"begin":10433,"end":14584,"name":"CALLVALUE"},{"begin":10433,"end":14584,"name":"ISZERO"},{"begin":10433,"end":14584,"name":"PUSH [tag]","value":"78"},{"begin":10433,"end":14584,"name":"JUMPI"},{"begin":10433,"end":14584,"name":"PUSH","value":"0"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"REVERT"},{"begin":10433,"end":14584,"name":"tag","value":"78"},{"begin":10433,"end":14584,"name":"JUMPDEST"},{"begin":10433,"end":14584,"name":"PUSH [tag]","value":"79"},{"begin":10433,"end":14584,"name":"PUSH","value":"4"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"A0"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"5"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"MUL"},{"begin":10433,"end":14584,"name":"PUSH","value":"40"},{"begin":10433,"end":14584,"name":"MLOAD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP2"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"PUSH","value":"40"},{"begin":10433,"end":14584,"name":"MSTORE"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"SWAP3"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP3"},{"begin":10433,"end":14584,"name":"PUSH","value":"5"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"MUL"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"DUP3"},{"begin":10433,"end":14584,"name":"DUP5"},{"begin":10433,"end":14584,"name":"CALLDATACOPY"},{"begin":10433,"end":14584,"name":"DUP3"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"C0"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"6"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"MUL"},{"begin":10433,"end":14584,"name":"PUSH","value":"40"},{"begin":10433,"end":14584,"name":"MLOAD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP2"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"PUSH","value":"40"},{"begin":10433,"end":14584,"name":"MSTORE"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"SWAP3"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP3"},{"begin":10433,"end":14584,"name":"PUSH","value":"6"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"MUL"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"DUP3"},{"begin":10433,"end":14584,"name":"DUP5"},{"begin":10433,"end":14584,"name":"CALLDATACOPY"},{"begin":10433,"end":14584,"name":"DUP3"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"CALLDATALOAD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"CALLDATALOAD"},{"begin":10433,"end":14584,"name":"ISZERO"},{"begin":10433,"end":14584,"name":"ISZERO"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"CALLDATALOAD"},{"begin":10433,"end":14584,"name":"PUSH","value":"FF"},{"begin":10433,"end":14584,"name":"AND"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"CALLDATALOAD"},{"begin":10433,"end":14584,"name":"PUSH","value":"0"},{"begin":10433,"end":14584,"name":"NOT"},{"begin":10433,"end":14584,"name":"AND"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"CALLDATALOAD"},{"begin":10433,"end":14584,"name":"PUSH","value":"0"},{"begin":10433,"end":14584,"name":"NOT"},{"begin":10433,"end":14584,"name":"AND"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"PUSH [tag]","value":"80"},{"begin":10433,"end":14584,"name":"JUMP"},{"begin":10433,"end":14584,"name":"tag","value":"79"},{"begin":10433,"end":14584,"name":"JUMPDEST"},{"begin":10433,"end":14584,"name":"PUSH","value":"40"},{"begin":10433,"end":14584,"name":"MLOAD"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"DUP3"},{"begin":10433,"end":14584,"name":"DUP2"},{"begin":10433,"end":14584,"name":"MSTORE"},{"begin":10433,"end":14584,"name":"PUSH","value":"20"},{"begin":10433,"end":14584,"name":"ADD"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"PUSH","value":"40"},{"begin":10433,"end":14584,"name":"MLOAD"},{"begin":10433,"end":14584,"name":"DUP1"},{"begin":10433,"end":14584,"name":"SWAP2"},{"begin":10433,"end":14584,"name":"SUB"},{"begin":10433,"end":14584,"name":"SWAP1"},{"begin":10433,"end":14584,"name":"RETURN"},{"begin":23364,"end":24089,"name":"tag","value":"17"},{"begin":23364,"end":24089,"name":"JUMPDEST"},{"begin":23364,"end":24089,"name":"CALLVALUE"},{"begin":23364,"end":24089,"name":"ISZERO"},{"begin":23364,"end":24089,"name":"PUSH [tag]","value":"81"},{"begin":23364,"end":24089,"name":"JUMPI"},{"begin":23364,"end":24089,"name":"PUSH","value":"0"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"REVERT"},{"begin":23364,"end":24089,"name":"tag","value":"81"},{"begin":23364,"end":24089,"name":"JUMPDEST"},{"begin":23364,"end":24089,"name":"PUSH [tag]","value":"82"},{"begin":23364,"end":24089,"name":"PUSH","value":"4"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"PUSH","value":"A0"},{"begin":23364,"end":24089,"name":"ADD"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"PUSH","value":"5"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"PUSH","value":"20"},{"begin":23364,"end":24089,"name":"MUL"},{"begin":23364,"end":24089,"name":"PUSH","value":"40"},{"begin":23364,"end":24089,"name":"MLOAD"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"DUP2"},{"begin":23364,"end":24089,"name":"ADD"},{"begin":23364,"end":24089,"name":"PUSH","value":"40"},{"begin":23364,"end":24089,"name":"MSTORE"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"SWAP3"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"DUP3"},{"begin":23364,"end":24089,"name":"PUSH","value":"5"},{"begin":23364,"end":24089,"name":"PUSH","value":"20"},{"begin":23364,"end":24089,"name":"MUL"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"DUP3"},{"begin":23364,"end":24089,"name":"DUP5"},{"begin":23364,"end":24089,"name":"CALLDATACOPY"},{"begin":23364,"end":24089,"name":"DUP3"},{"begin":23364,"end":24089,"name":"ADD"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"PUSH","value":"C0"},{"begin":23364,"end":24089,"name":"ADD"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"PUSH","value":"6"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"PUSH","value":"20"},{"begin":23364,"end":24089,"name":"MUL"},{"begin":23364,"end":24089,"name":"PUSH","value":"40"},{"begin":23364,"end":24089,"name":"MLOAD"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"DUP2"},{"begin":23364,"end":24089,"name":"ADD"},{"begin":23364,"end":24089,"name":"PUSH","value":"40"},{"begin":23364,"end":24089,"name":"MSTORE"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"SWAP3"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"DUP3"},{"begin":23364,"end":24089,"name":"PUSH","value":"6"},{"begin":23364,"end":24089,"name":"PUSH","value":"20"},{"begin":23364,"end":24089,"name":"MUL"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"DUP3"},{"begin":23364,"end":24089,"name":"DUP5"},{"begin":23364,"end":24089,"name":"CALLDATACOPY"},{"begin":23364,"end":24089,"name":"DUP3"},{"begin":23364,"end":24089,"name":"ADD"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"PUSH [tag]","value":"83"},{"begin":23364,"end":24089,"name":"JUMP"},{"begin":23364,"end":24089,"name":"tag","value":"82"},{"begin":23364,"end":24089,"name":"JUMPDEST"},{"begin":23364,"end":24089,"name":"PUSH","value":"40"},{"begin":23364,"end":24089,"name":"MLOAD"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"DUP3"},{"begin":23364,"end":24089,"name":"PUSH","value":"0"},{"begin":23364,"end":24089,"name":"NOT"},{"begin":23364,"end":24089,"name":"AND"},{"begin":23364,"end":24089,"name":"PUSH","value":"0"},{"begin":23364,"end":24089,"name":"NOT"},{"begin":23364,"end":24089,"name":"AND"},{"begin":23364,"end":24089,"name":"DUP2"},{"begin":23364,"end":24089,"name":"MSTORE"},{"begin":23364,"end":24089,"name":"PUSH","value":"20"},{"begin":23364,"end":24089,"name":"ADD"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"PUSH","value":"40"},{"begin":23364,"end":24089,"name":"MLOAD"},{"begin":23364,"end":24089,"name":"DUP1"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"SUB"},{"begin":23364,"end":24089,"name":"SWAP1"},{"begin":23364,"end":24089,"name":"RETURN"},{"begin":7982,"end":8036,"name":"tag","value":"18"},{"begin":7982,"end":8036,"name":"JUMPDEST"},{"begin":7982,"end":8036,"name":"CALLVALUE"},{"begin":7982,"end":8036,"name":"ISZERO"},{"begin":7982,"end":8036,"name":"PUSH [tag]","value":"84"},{"begin":7982,"end":8036,"name":"JUMPI"},{"begin":7982,"end":8036,"name":"PUSH","value":"0"},{"begin":7982,"end":8036,"name":"DUP1"},{"begin":7982,"end":8036,"name":"REVERT"},{"begin":7982,"end":8036,"name":"tag","value":"84"},{"begin":7982,"end":8036,"name":"JUMPDEST"},{"begin":7982,"end":8036,"name":"PUSH [tag]","value":"85"},{"begin":7982,"end":8036,"name":"PUSH [tag]","value":"86"},{"begin":7982,"end":8036,"name":"JUMP"},{"begin":7982,"end":8036,"name":"tag","value":"85"},{"begin":7982,"end":8036,"name":"JUMPDEST"},{"begin":7982,"end":8036,"name":"PUSH","value":"40"},{"begin":7982,"end":8036,"name":"MLOAD"},{"begin":7982,"end":8036,"name":"DUP1"},{"begin":7982,"end":8036,"name":"DUP3"},{"begin":7982,"end":8036,"name":"PUSH","value":"FFFF"},{"begin":7982,"end":8036,"name":"AND"},{"begin":7982,"end":8036,"name":"PUSH","value":"FFFF"},{"begin":7982,"end":8036,"name":"AND"},{"begin":7982,"end":8036,"name":"DUP2"},{"begin":7982,"end":8036,"name":"MSTORE"},{"begin":7982,"end":8036,"name":"PUSH","value":"20"},{"begin":7982,"end":8036,"name":"ADD"},{"begin":7982,"end":8036,"name":"SWAP2"},{"begin":7982,"end":8036,"name":"POP"},{"begin":7982,"end":8036,"name":"POP"},{"begin":7982,"end":8036,"name":"PUSH","value":"40"},{"begin":7982,"end":8036,"name":"MLOAD"},{"begin":7982,"end":8036,"name":"DUP1"},{"begin":7982,"end":8036,"name":"SWAP2"},{"begin":7982,"end":8036,"name":"SUB"},{"begin":7982,"end":8036,"name":"SWAP1"},{"begin":7982,"end":8036,"name":"RETURN"},{"begin":7935,"end":7975,"name":"tag","value":"19"},{"begin":7935,"end":7975,"name":"JUMPDEST"},{"begin":7935,"end":7975,"name":"CALLVALUE"},{"begin":7935,"end":7975,"name":"ISZERO"},{"begin":7935,"end":7975,"name":"PUSH [tag]","value":"87"},{"begin":7935,"end":7975,"name":"JUMPI"},{"begin":7935,"end":7975,"name":"PUSH","value":"0"},{"begin":7935,"end":7975,"name":"DUP1"},{"begin":7935,"end":7975,"name":"REVERT"},{"begin":7935,"end":7975,"name":"tag","value":"87"},{"begin":7935,"end":7975,"name":"JUMPDEST"},{"begin":7935,"end":7975,"name":"PUSH [tag]","value":"88"},{"begin":7935,"end":7975,"name":"PUSH [tag]","value":"89"},{"begin":7935,"end":7975,"name":"JUMP"},{"begin":7935,"end":7975,"name":"tag","value":"88"},{"begin":7935,"end":7975,"name":"JUMPDEST"},{"begin":7935,"end":7975,"name":"PUSH","value":"40"},{"begin":7935,"end":7975,"name":"MLOAD"},{"begin":7935,"end":7975,"name":"DUP1"},{"begin":7935,"end":7975,"name":"DUP1"},{"begin":7935,"end":7975,"name":"PUSH","value":"20"},{"begin":7935,"end":7975,"name":"ADD"},{"begin":7935,"end":7975,"name":"DUP3"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"SUB"},{"begin":7935,"end":7975,"name":"DUP3"},{"begin":7935,"end":7975,"name":"MSTORE"},{"begin":7935,"end":7975,"name":"DUP4"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"MLOAD"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"MSTORE"},{"begin":7935,"end":7975,"name":"PUSH","value":"20"},{"begin":7935,"end":7975,"name":"ADD"},{"begin":7935,"end":7975,"name":"SWAP2"},{"begin":7935,"end":7975,"name":"POP"},{"begin":7935,"end":7975,"name":"DUP1"},{"begin":7935,"end":7975,"name":"MLOAD"},{"begin":7935,"end":7975,"name":"SWAP1"},{"begin":7935,"end":7975,"name":"PUSH","value":"20"},{"begin":7935,"end":7975,"name":"ADD"},{"begin":7935,"end":7975,"name":"SWAP1"},{"begin":7935,"end":7975,"name":"DUP1"},{"begin":7935,"end":7975,"name":"DUP4"},{"begin":7935,"end":7975,"name":"DUP4"},{"begin":23,"end":24,"name":"PUSH","value":"0"},{"begin":8,"end":108,"name":"tag","value":"90"},{"begin":8,"end":108,"name":"JUMPDEST"},{"begin":33,"end":36,"name":"DUP4"},{"begin":30,"end":31,"name":"DUP2"},{"begin":27,"end":29,"name":"LT"},{"begin":8,"end":108,"name":"ISZERO"},{"begin":8,"end":108,"name":"PUSH [tag]","value":"91"},{"begin":8,"end":108,"name":"JUMPI"},{"begin":99,"end":100,"name":"DUP1"},{"begin":94,"end":97,"name":"DUP3"},{"begin":90,"end":93,"name":"ADD"},{"begin":84,"end":89,"name":"MLOAD"},{"begin":80,"end":81,"name":"DUP2"},{"begin":75,"end":78,"name":"DUP5"},{"begin":71,"end":74,"name":"ADD"},{"begin":64,"end":70,"name":"MSTORE"},{"begin":8,"end":108,"name":"tag","value":"92"},{"begin":8,"end":108,"name":"JUMPDEST"},{"begin":52,"end":54,"name":"PUSH","value":"20"},{"begin":49,"end":50,"name":"DUP2"},{"begin":45,"end":48,"name":"ADD"},{"begin":40,"end":55,"name":"SWAP1"},{"begin":40,"end":55,"name":"POP"},{"begin":8,"end":108,"name":"PUSH [tag]","value":"90"},{"begin":8,"end":108,"name":"JUMP"},{"begin":8,"end":108,"name":"tag","value":"91"},{"begin":8,"end":108,"name":"JUMPDEST"},{"begin":12,"end":26,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"SWAP1"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"SWAP1"},{"begin":3,"end":112,"name":"DUP2"},{"begin":3,"end":112,"name":"ADD"},{"begin":3,"end":112,"name":"SWAP1"},{"begin":3,"end":112,"name":"PUSH","value":"1F"},{"begin":3,"end":112,"name":"AND"},{"begin":3,"end":112,"name":"DUP1"},{"begin":3,"end":112,"name":"ISZERO"},{"begin":3,"end":112,"name":"PUSH [tag]","value":"93"},{"begin":3,"end":112,"name":"JUMPI"},{"begin":3,"end":112,"name":"DUP1"},{"begin":3,"end":112,"name":"DUP3"},{"begin":3,"end":112,"name":"SUB"},{"begin":3,"end":112,"name":"DUP1"},{"begin":3,"end":112,"name":"MLOAD"},{"begin":3,"end":112,"name":"PUSH","value":"1"},{"begin":3,"end":112,"name":"DUP4"},{"begin":3,"end":112,"name":"PUSH","value":"20"},{"begin":3,"end":112,"name":"SUB"},{"begin":3,"end":112,"name":"PUSH","value":"100"},{"begin":3,"end":112,"name":"EXP"},{"begin":3,"end":112,"name":"SUB"},{"begin":3,"end":112,"name":"NOT"},{"begin":3,"end":112,"name":"AND"},{"begin":3,"end":112,"name":"DUP2"},{"begin":3,"end":112,"name":"MSTORE"},{"begin":3,"end":112,"name":"PUSH","value":"20"},{"begin":3,"end":112,"name":"ADD"},{"begin":3,"end":112,"name":"SWAP2"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"tag","value":"93"},{"begin":3,"end":112,"name":"JUMPDEST"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"SWAP3"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"PUSH","value":"40"},{"begin":3,"end":112,"name":"MLOAD"},{"begin":3,"end":112,"name":"DUP1"},{"begin":3,"end":112,"name":"SWAP2"},{"begin":3,"end":112,"name":"SUB"},{"begin":3,"end":112,"name":"SWAP1"},{"begin":3,"end":112,"name":"RETURN"},{"begin":25042,"end":25513,"name":"tag","value":"22"},{"begin":25042,"end":25513,"name":"JUMPDEST"},{"begin":25166,"end":25170,"name":"PUSH","value":"0"},{"begin":25188,"end":25202,"name":"DUP1"},{"begin":25321,"end":25351,"name":"PUSH","value":"0"},{"begin":25231,"end":25242,"name":"DUP5"},{"begin":25220,"end":25229,"name":"DUP7"},{"begin":25212,"end":25218,"name":"DUP6"},{"begin":25205,"end":25243,"name":"MULMOD"},{"begin":25188,"end":25243,"name":"SWAP2"},{"begin":25188,"end":25243,"name":"POP"},{"begin":25271,"end":25272,"name":"PUSH","value":"0"},{"begin":25258,"end":25267,"name":"DUP3"},{"begin":25258,"end":25272,"name":"EQ"},{"begin":25254,"end":25286,"name":"ISZERO"},{"begin":25254,"end":25286,"name":"PUSH [tag]","value":"95"},{"begin":25254,"end":25286,"name":"JUMPI"},{"begin":25281,"end":25286,"name":"PUSH","value":"0"},{"begin":25274,"end":25286,"name":"SWAP3"},{"begin":25274,"end":25286,"name":"POP"},{"begin":25274,"end":25286,"name":"PUSH [tag]","value":"94"},{"begin":25274,"end":25286,"name":"JUMP"},{"begin":25254,"end":25286,"name":"tag","value":"95"},{"begin":25254,"end":25286,"name":"JUMPDEST"},{"begin":25354,"end":25455,"name":"PUSH [tag]","value":"96"},{"begin":25376,"end":25403,"name":"PUSH [tag]","value":"97"},{"begin":25384,"end":25393,"name":"DUP4"},{"begin":25395,"end":25402,"name":"PUSH","value":"F4240"},{"begin":25376,"end":25383,"name":"PUSH [tag]","value":"98"},{"begin":25376,"end":25403,"name":"JUMP","value":"[in]"},{"begin":25376,"end":25403,"name":"tag","value":"97"},{"begin":25376,"end":25403,"name":"JUMPDEST"},{"begin":25418,"end":25444,"name":"PUSH [tag]","value":"99"},{"begin":25426,"end":25435,"name":"DUP9"},{"begin":25437,"end":25443,"name":"DUP8"},{"begin":25418,"end":25425,"name":"PUSH [tag]","value":"98"},{"begin":25418,"end":25444,"name":"JUMP","value":"[in]"},{"begin":25418,"end":25444,"name":"tag","value":"99"},{"begin":25418,"end":25444,"name":"JUMPDEST"},{"begin":25354,"end":25361,"name":"PUSH [tag]","value":"100"},{"begin":25354,"end":25455,"name":"JUMP","value":"[in]"},{"begin":25354,"end":25455,"name":"tag","value":"96"},{"begin":25354,"end":25455,"name":"JUMPDEST"},{"begin":25321,"end":25455,"name":"SWAP1"},{"begin":25321,"end":25455,"name":"POP"},{"begin":25501,"end":25505,"name":"PUSH","value":"3E8"},{"begin":25473,"end":25498,"name":"DUP2"},{"begin":25473,"end":25505,"name":"GT"},{"begin":25466,"end":25505,"name":"SWAP3"},{"begin":25466,"end":25505,"name":"POP"},{"begin":25042,"end":25513,"name":"tag","value":"94"},{"begin":25042,"end":25513,"name":"JUMPDEST"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"SWAP4"},{"begin":25042,"end":25513,"name":"SWAP3"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"POP"},{"begin":25042,"end":25513,"name":"JUMP","value":"[out]"},{"begin":8269,"end":8308,"name":"tag","value":"25"},{"begin":8269,"end":8308,"name":"JUMPDEST"},{"begin":8269,"end":8308,"name":"PUSH","value":"2"},{"begin":8269,"end":8308,"name":"PUSH","value":"20"},{"begin":8269,"end":8308,"name":"MSTORE"},{"begin":8269,"end":8308,"name":"DUP1"},{"begin":8269,"end":8308,"name":"PUSH","value":"0"},{"begin":8269,"end":8308,"name":"MSTORE"},{"begin":8269,"end":8308,"name":"PUSH","value":"40"},{"begin":8269,"end":8308,"name":"PUSH","value":"0"},{"begin":8269,"end":8308,"name":"KECCAK256"},{"begin":8269,"end":8308,"name":"PUSH","value":"0"},{"begin":8269,"end":8308,"name":"SWAP2"},{"begin":8269,"end":8308,"name":"POP"},{"begin":8269,"end":8308,"name":"SWAP1"},{"begin":8269,"end":8308,"name":"POP"},{"begin":8269,"end":8308,"name":"SLOAD"},{"begin":8269,"end":8308,"name":"DUP2"},{"begin":8269,"end":8308,"name":"JUMP","value":"[out]"},{"begin":8315,"end":8357,"name":"tag","value":"28"},{"begin":8315,"end":8357,"name":"JUMPDEST"},{"begin":8315,"end":8357,"name":"PUSH","value":"3"},{"begin":8315,"end":8357,"name":"PUSH","value":"20"},{"begin":8315,"end":8357,"name":"MSTORE"},{"begin":8315,"end":8357,"name":"DUP1"},{"begin":8315,"end":8357,"name":"PUSH","value":"0"},{"begin":8315,"end":8357,"name":"MSTORE"},{"begin":8315,"end":8357,"name":"PUSH","value":"40"},{"begin":8315,"end":8357,"name":"PUSH","value":"0"},{"begin":8315,"end":8357,"name":"KECCAK256"},{"begin":8315,"end":8357,"name":"PUSH","value":"0"},{"begin":8315,"end":8357,"name":"SWAP2"},{"begin":8315,"end":8357,"name":"POP"},{"begin":8315,"end":8357,"name":"SWAP1"},{"begin":8315,"end":8357,"name":"POP"},{"begin":8315,"end":8357,"name":"SLOAD"},{"begin":8315,"end":8357,"name":"DUP2"},{"begin":8315,"end":8357,"name":"JUMP","value":"[out]"},{"begin":21171,"end":22186,"name":"tag","value":"35"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21459,"end":21463,"name":"PUSH","value":"0"},{"begin":21481,"end":21508,"name":"DUP1"},{"begin":21528,"end":21534,"name":"PUSH","value":"0"},{"begin":21511,"end":21512,"name":"DUP1"},{"begin":21481,"end":21512,"name":"SWAP2"},{"begin":21481,"end":21512,"name":"POP"},{"begin":21537,"end":21538,"name":"PUSH","value":"0"},{"begin":21528,"end":21538,"name":"SWAP1"},{"begin":21528,"end":21538,"name":"POP"},{"begin":21523,"end":22139,"name":"tag","value":"102"},{"begin":21523,"end":22139,"name":"JUMPDEST"},{"begin":21544,"end":21558,"name":"DUP10"},{"begin":21544,"end":21565,"name":"MLOAD"},{"begin":21540,"end":21541,"name":"DUP2"},{"begin":21540,"end":21565,"name":"LT"},{"begin":21523,"end":22139,"name":"ISZERO"},{"begin":21523,"end":22139,"name":"PUSH [tag]","value":"103"},{"begin":21523,"end":22139,"name":"JUMPI"},{"begin":21619,"end":21633,"name":"DUP10"},{"begin":21634,"end":21635,"name":"PUSH","value":"0"},{"begin":21619,"end":21636,"name":"DUP2"},{"begin":21619,"end":21636,"name":"MLOAD"},{"begin":21619,"end":21636,"name":"DUP2"},{"begin":21619,"end":21636,"name":"LT"},{"begin":21619,"end":21636,"name":"ISZERO"},{"begin":21619,"end":21636,"name":"ISZERO"},{"begin":21619,"end":21636,"name":"PUSH [tag]","value":"105"},{"begin":21619,"end":21636,"name":"JUMPI"},{"begin":21619,"end":21636,"name":"INVALID"},{"begin":21619,"end":21636,"name":"tag","value":"105"},{"begin":21619,"end":21636,"name":"JUMPDEST"},{"begin":21619,"end":21636,"name":"SWAP1"},{"begin":21619,"end":21636,"name":"PUSH","value":"20"},{"begin":21619,"end":21636,"name":"ADD"},{"begin":21619,"end":21636,"name":"SWAP1"},{"begin":21619,"end":21636,"name":"PUSH","value":"20"},{"begin":21619,"end":21636,"name":"MUL"},{"begin":21619,"end":21636,"name":"ADD"},{"begin":21619,"end":21636,"name":"MLOAD"},{"begin":21637,"end":21638,"name":"PUSH","value":"3"},{"begin":21619,"end":21639,"name":"PUSH","value":"5"},{"begin":21619,"end":21639,"name":"DUP2"},{"begin":21619,"end":21639,"name":"LT"},{"begin":21619,"end":21639,"name":"ISZERO"},{"begin":21619,"end":21639,"name":"ISZERO"},{"begin":21619,"end":21639,"name":"PUSH [tag]","value":"106"},{"begin":21619,"end":21639,"name":"JUMPI"},{"begin":21619,"end":21639,"name":"INVALID"},{"begin":21619,"end":21639,"name":"tag","value":"106"},{"begin":21619,"end":21639,"name":"JUMPDEST"},{"begin":21619,"end":21639,"name":"PUSH","value":"20"},{"begin":21619,"end":21639,"name":"MUL"},{"begin":21619,"end":21639,"name":"ADD"},{"begin":21619,"end":21639,"name":"MLOAD"},{"begin":21595,"end":21639,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":21595,"end":21639,"name":"AND"},{"begin":21595,"end":21609,"name":"DUP11"},{"begin":21610,"end":21611,"name":"DUP3"},{"begin":21595,"end":21612,"name":"DUP2"},{"begin":21595,"end":21612,"name":"MLOAD"},{"begin":21595,"end":21612,"name":"DUP2"},{"begin":21595,"end":21612,"name":"LT"},{"begin":21595,"end":21612,"name":"ISZERO"},{"begin":21595,"end":21612,"name":"ISZERO"},{"begin":21595,"end":21612,"name":"PUSH [tag]","value":"107"},{"begin":21595,"end":21612,"name":"JUMPI"},{"begin":21595,"end":21612,"name":"INVALID"},{"begin":21595,"end":21612,"name":"tag","value":"107"},{"begin":21595,"end":21612,"name":"JUMPDEST"},{"begin":21595,"end":21612,"name":"SWAP1"},{"begin":21595,"end":21612,"name":"PUSH","value":"20"},{"begin":21595,"end":21612,"name":"ADD"},{"begin":21595,"end":21612,"name":"SWAP1"},{"begin":21595,"end":21612,"name":"PUSH","value":"20"},{"begin":21595,"end":21612,"name":"MUL"},{"begin":21595,"end":21612,"name":"ADD"},{"begin":21595,"end":21612,"name":"MLOAD"},{"begin":21613,"end":21614,"name":"PUSH","value":"3"},{"begin":21595,"end":21615,"name":"PUSH","value":"5"},{"begin":21595,"end":21615,"name":"DUP2"},{"begin":21595,"end":21615,"name":"LT"},{"begin":21595,"end":21615,"name":"ISZERO"},{"begin":21595,"end":21615,"name":"ISZERO"},{"begin":21595,"end":21615,"name":"PUSH [tag]","value":"108"},{"begin":21595,"end":21615,"name":"JUMPI"},{"begin":21595,"end":21615,"name":"INVALID"},{"begin":21595,"end":21615,"name":"tag","value":"108"},{"begin":21595,"end":21615,"name":"JUMPDEST"},{"begin":21595,"end":21615,"name":"PUSH","value":"20"},{"begin":21595,"end":21615,"name":"MUL"},{"begin":21595,"end":21615,"name":"ADD"},{"begin":21595,"end":21615,"name":"MLOAD"},{"begin":21595,"end":21639,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":21595,"end":21639,"name":"AND"},{"begin":21595,"end":21639,"name":"EQ"},{"begin":21587,"end":21640,"name":"ISZERO"},{"begin":21587,"end":21640,"name":"ISZERO"},{"begin":21587,"end":21640,"name":"PUSH [tag]","value":"109"},{"begin":21587,"end":21640,"name":"JUMPI"},{"begin":21587,"end":21640,"name":"PUSH","value":"0"},{"begin":21587,"end":21640,"name":"DUP1"},{"begin":21587,"end":21640,"name":"REVERT"},{"begin":21587,"end":21640,"name":"tag","value":"109"},{"begin":21587,"end":21640,"name":"JUMPDEST"},{"begin":21726,"end":22055,"name":"PUSH [tag]","value":"110"},{"begin":21734,"end":21756,"name":"DUP3"},{"begin":21758,"end":22054,"name":"PUSH [tag]","value":"111"},{"begin":21786,"end":21800,"name":"DUP13"},{"begin":21801,"end":21802,"name":"DUP5"},{"begin":21786,"end":21803,"name":"DUP2"},{"begin":21786,"end":21803,"name":"MLOAD"},{"begin":21786,"end":21803,"name":"DUP2"},{"begin":21786,"end":21803,"name":"LT"},{"begin":21786,"end":21803,"name":"ISZERO"},{"begin":21786,"end":21803,"name":"ISZERO"},{"begin":21786,"end":21803,"name":"PUSH [tag]","value":"112"},{"begin":21786,"end":21803,"name":"JUMPI"},{"begin":21786,"end":21803,"name":"INVALID"},{"begin":21786,"end":21803,"name":"tag","value":"112"},{"begin":21786,"end":21803,"name":"JUMPDEST"},{"begin":21786,"end":21803,"name":"SWAP1"},{"begin":21786,"end":21803,"name":"PUSH","value":"20"},{"begin":21786,"end":21803,"name":"ADD"},{"begin":21786,"end":21803,"name":"SWAP1"},{"begin":21786,"end":21803,"name":"PUSH","value":"20"},{"begin":21786,"end":21803,"name":"MUL"},{"begin":21786,"end":21803,"name":"ADD"},{"begin":21786,"end":21803,"name":"MLOAD"},{"begin":21822,"end":21833,"name":"DUP13"},{"begin":21834,"end":21835,"name":"DUP6"},{"begin":21822,"end":21836,"name":"DUP2"},{"begin":21822,"end":21836,"name":"MLOAD"},{"begin":21822,"end":21836,"name":"DUP2"},{"begin":21822,"end":21836,"name":"LT"},{"begin":21822,"end":21836,"name":"ISZERO"},{"begin":21822,"end":21836,"name":"ISZERO"},{"begin":21822,"end":21836,"name":"PUSH [tag]","value":"113"},{"begin":21822,"end":21836,"name":"JUMPI"},{"begin":21822,"end":21836,"name":"INVALID"},{"begin":21822,"end":21836,"name":"tag","value":"113"},{"begin":21822,"end":21836,"name":"JUMPDEST"},{"begin":21822,"end":21836,"name":"SWAP1"},{"begin":21822,"end":21836,"name":"PUSH","value":"20"},{"begin":21822,"end":21836,"name":"ADD"},{"begin":21822,"end":21836,"name":"SWAP1"},{"begin":21822,"end":21836,"name":"PUSH","value":"20"},{"begin":21822,"end":21836,"name":"MUL"},{"begin":21822,"end":21836,"name":"ADD"},{"begin":21822,"end":21836,"name":"MLOAD"},{"begin":21855,"end":21908,"name":"PUSH [tag]","value":"114"},{"begin":21863,"end":21883,"name":"DUP14"},{"begin":21885,"end":21907,"name":"DUP9"},{"begin":21855,"end":21862,"name":"PUSH [tag]","value":"115"},{"begin":21855,"end":21908,"name":"JUMP","value":"[in]"},{"begin":21855,"end":21908,"name":"tag","value":"114"},{"begin":21855,"end":21908,"name":"JUMPDEST"},{"begin":21927,"end":21970,"name":"DUP13"},{"begin":21989,"end":21990,"name":"DUP13"},{"begin":21991,"end":21992,"name":"DUP9"},{"begin":21989,"end":21993,"name":"DUP2"},{"begin":21989,"end":21993,"name":"MLOAD"},{"begin":21989,"end":21993,"name":"DUP2"},{"begin":21989,"end":21993,"name":"LT"},{"begin":21989,"end":21993,"name":"ISZERO"},{"begin":21989,"end":21993,"name":"ISZERO"},{"begin":21989,"end":21993,"name":"PUSH [tag]","value":"116"},{"begin":21989,"end":21993,"name":"JUMPI"},{"begin":21989,"end":21993,"name":"INVALID"},{"begin":21989,"end":21993,"name":"tag","value":"116"},{"begin":21989,"end":21993,"name":"JUMPDEST"},{"begin":21989,"end":21993,"name":"SWAP1"},{"begin":21989,"end":21993,"name":"PUSH","value":"20"},{"begin":21989,"end":21993,"name":"ADD"},{"begin":21989,"end":21993,"name":"SWAP1"},{"begin":21989,"end":21993,"name":"PUSH","value":"20"},{"begin":21989,"end":21993,"name":"MUL"},{"begin":21989,"end":21993,"name":"ADD"},{"begin":21989,"end":21993,"name":"MLOAD"},{"begin":22012,"end":22013,"name":"DUP13"},{"begin":22014,"end":22015,"name":"DUP10"},{"begin":22012,"end":22016,"name":"DUP2"},{"begin":22012,"end":22016,"name":"MLOAD"},{"begin":22012,"end":22016,"name":"DUP2"},{"begin":22012,"end":22016,"name":"LT"},{"begin":22012,"end":22016,"name":"ISZERO"},{"begin":22012,"end":22016,"name":"ISZERO"},{"begin":22012,"end":22016,"name":"PUSH [tag]","value":"117"},{"begin":22012,"end":22016,"name":"JUMPI"},{"begin":22012,"end":22016,"name":"INVALID"},{"begin":22012,"end":22016,"name":"tag","value":"117"},{"begin":22012,"end":22016,"name":"JUMPDEST"},{"begin":22012,"end":22016,"name":"SWAP1"},{"begin":22012,"end":22016,"name":"PUSH","value":"20"},{"begin":22012,"end":22016,"name":"ADD"},{"begin":22012,"end":22016,"name":"SWAP1"},{"begin":22012,"end":22016,"name":"PUSH","value":"20"},{"begin":22012,"end":22016,"name":"MUL"},{"begin":22012,"end":22016,"name":"ADD"},{"begin":22012,"end":22016,"name":"MLOAD"},{"begin":22035,"end":22036,"name":"DUP13"},{"begin":22037,"end":22038,"name":"DUP11"},{"begin":22035,"end":22039,"name":"DUP2"},{"begin":22035,"end":22039,"name":"MLOAD"},{"begin":22035,"end":22039,"name":"DUP2"},{"begin":22035,"end":22039,"name":"LT"},{"begin":22035,"end":22039,"name":"ISZERO"},{"begin":22035,"end":22039,"name":"ISZERO"},{"begin":22035,"end":22039,"name":"PUSH [tag]","value":"118"},{"begin":22035,"end":22039,"name":"JUMPI"},{"begin":22035,"end":22039,"name":"INVALID"},{"begin":22035,"end":22039,"name":"tag","value":"118"},{"begin":22035,"end":22039,"name":"JUMPDEST"},{"begin":22035,"end":22039,"name":"SWAP1"},{"begin":22035,"end":22039,"name":"PUSH","value":"20"},{"begin":22035,"end":22039,"name":"ADD"},{"begin":22035,"end":22039,"name":"SWAP1"},{"begin":22035,"end":22039,"name":"PUSH","value":"20"},{"begin":22035,"end":22039,"name":"MUL"},{"begin":22035,"end":22039,"name":"ADD"},{"begin":22035,"end":22039,"name":"MLOAD"},{"begin":21758,"end":21767,"name":"PUSH [tag]","value":"80"},{"begin":21758,"end":22054,"name":"JUMP","value":"[in]"},{"begin":21758,"end":22054,"name":"tag","value":"111"},{"begin":21758,"end":22054,"name":"JUMPDEST"},{"begin":21726,"end":21733,"name":"PUSH [tag]","value":"119"},{"begin":21726,"end":22055,"name":"JUMP","value":"[in]"},{"begin":21726,"end":22055,"name":"tag","value":"110"},{"begin":21726,"end":22055,"name":"JUMPDEST"},{"begin":21701,"end":22055,"name":"SWAP2"},{"begin":21701,"end":22055,"name":"POP"},{"begin":22100,"end":22120,"name":"DUP8"},{"begin":22074,"end":22096,"name":"DUP3"},{"begin":22074,"end":22120,"name":"EQ"},{"begin":22070,"end":22127,"name":"ISZERO"},{"begin":22070,"end":22127,"name":"PUSH [tag]","value":"120"},{"begin":22070,"end":22127,"name":"JUMPI"},{"begin":22122,"end":22127,"name":"PUSH [tag]","value":"103"},{"begin":22122,"end":22127,"name":"JUMP"},{"begin":22070,"end":22127,"name":"tag","value":"120"},{"begin":22070,"end":22127,"name":"JUMPDEST"},{"begin":21523,"end":22139,"name":"tag","value":"104"},{"begin":21523,"end":22139,"name":"JUMPDEST"},{"begin":21567,"end":21570,"name":"DUP1"},{"begin":21567,"end":21570,"name":"DUP1"},{"begin":21567,"end":21570,"name":"PUSH","value":"1"},{"begin":21567,"end":21570,"name":"ADD"},{"begin":21567,"end":21570,"name":"SWAP2"},{"begin":21567,"end":21570,"name":"POP"},{"begin":21567,"end":21570,"name":"POP"},{"begin":21523,"end":22139,"name":"PUSH [tag]","value":"102"},{"begin":21523,"end":22139,"name":"JUMP"},{"begin":21523,"end":22139,"name":"tag","value":"103"},{"begin":21523,"end":22139,"name":"JUMPDEST"},{"begin":22156,"end":22178,"name":"DUP2"},{"begin":22149,"end":22178,"name":"SWAP3"},{"begin":22149,"end":22178,"name":"POP"},{"begin":21171,"end":22186,"name":"tag","value":"101"},{"begin":21171,"end":22186,"name":"JUMPDEST"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"SWAP8"},{"begin":21171,"end":22186,"name":"SWAP7"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"POP"},{"begin":21171,"end":22186,"name":"JUMP","value":"[out]"},{"begin":15009,"end":17000,"name":"tag","value":"38"},{"begin":15009,"end":17000,"name":"JUMPDEST"},{"begin":15169,"end":15173,"name":"PUSH","value":"0"},{"begin":15191,"end":15209,"name":"PUSH [tag]","value":"121"},{"begin":15191,"end":15209,"name":"PUSH [tag]","value":"122"},{"begin":15191,"end":15209,"name":"JUMP","value":"[in]"},{"begin":15191,"end":15209,"name":"tag","value":"121"},{"begin":15191,"end":15209,"name":"JUMPDEST"},{"begin":16073,"end":16103,"name":"PUSH","value":"0"},{"begin":16197,"end":16227,"name":"DUP1"},{"begin":15212,"end":15736,"name":"PUSH","value":"160"},{"begin":15212,"end":15736,"name":"PUSH","value":"40"},{"begin":15212,"end":15736,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"SWAP1"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15212,"end":15736,"name":"PUSH","value":"40"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"DUP1"},{"begin":15240,"end":15254,"name":"DUP9"},{"begin":15255,"end":15256,"name":"PUSH","value":"0"},{"begin":15240,"end":15257,"name":"PUSH","value":"5"},{"begin":15240,"end":15257,"name":"DUP2"},{"begin":15240,"end":15257,"name":"LT"},{"begin":15240,"end":15257,"name":"ISZERO"},{"begin":15240,"end":15257,"name":"ISZERO"},{"begin":15240,"end":15257,"name":"PUSH [tag]","value":"124"},{"begin":15240,"end":15257,"name":"JUMPI"},{"begin":15240,"end":15257,"name":"INVALID"},{"begin":15240,"end":15257,"name":"tag","value":"124"},{"begin":15240,"end":15257,"name":"JUMPDEST"},{"begin":15240,"end":15257,"name":"PUSH","value":"20"},{"begin":15240,"end":15257,"name":"MUL"},{"begin":15240,"end":15257,"name":"ADD"},{"begin":15240,"end":15257,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":15212,"end":15736,"name":"AND"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15279,"end":15293,"name":"DUP9"},{"begin":15294,"end":15295,"name":"PUSH","value":"1"},{"begin":15279,"end":15296,"name":"PUSH","value":"5"},{"begin":15279,"end":15296,"name":"DUP2"},{"begin":15279,"end":15296,"name":"LT"},{"begin":15279,"end":15296,"name":"ISZERO"},{"begin":15279,"end":15296,"name":"ISZERO"},{"begin":15279,"end":15296,"name":"PUSH [tag]","value":"125"},{"begin":15279,"end":15296,"name":"JUMPI"},{"begin":15279,"end":15296,"name":"INVALID"},{"begin":15279,"end":15296,"name":"tag","value":"125"},{"begin":15279,"end":15296,"name":"JUMPDEST"},{"begin":15279,"end":15296,"name":"PUSH","value":"20"},{"begin":15279,"end":15296,"name":"MUL"},{"begin":15279,"end":15296,"name":"ADD"},{"begin":15279,"end":15296,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":15212,"end":15736,"name":"AND"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15323,"end":15337,"name":"DUP9"},{"begin":15338,"end":15339,"name":"PUSH","value":"2"},{"begin":15323,"end":15340,"name":"PUSH","value":"5"},{"begin":15323,"end":15340,"name":"DUP2"},{"begin":15323,"end":15340,"name":"LT"},{"begin":15323,"end":15340,"name":"ISZERO"},{"begin":15323,"end":15340,"name":"ISZERO"},{"begin":15323,"end":15340,"name":"PUSH [tag]","value":"126"},{"begin":15323,"end":15340,"name":"JUMPI"},{"begin":15323,"end":15340,"name":"INVALID"},{"begin":15323,"end":15340,"name":"tag","value":"126"},{"begin":15323,"end":15340,"name":"JUMPDEST"},{"begin":15323,"end":15340,"name":"PUSH","value":"20"},{"begin":15323,"end":15340,"name":"MUL"},{"begin":15323,"end":15340,"name":"ADD"},{"begin":15323,"end":15340,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":15212,"end":15736,"name":"AND"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15367,"end":15381,"name":"DUP9"},{"begin":15382,"end":15383,"name":"PUSH","value":"3"},{"begin":15367,"end":15384,"name":"PUSH","value":"5"},{"begin":15367,"end":15384,"name":"DUP2"},{"begin":15367,"end":15384,"name":"LT"},{"begin":15367,"end":15384,"name":"ISZERO"},{"begin":15367,"end":15384,"name":"ISZERO"},{"begin":15367,"end":15384,"name":"PUSH [tag]","value":"127"},{"begin":15367,"end":15384,"name":"JUMPI"},{"begin":15367,"end":15384,"name":"INVALID"},{"begin":15367,"end":15384,"name":"tag","value":"127"},{"begin":15367,"end":15384,"name":"JUMPDEST"},{"begin":15367,"end":15384,"name":"PUSH","value":"20"},{"begin":15367,"end":15384,"name":"MUL"},{"begin":15367,"end":15384,"name":"ADD"},{"begin":15367,"end":15384,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":15212,"end":15736,"name":"AND"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15413,"end":15427,"name":"DUP9"},{"begin":15428,"end":15429,"name":"PUSH","value":"4"},{"begin":15413,"end":15430,"name":"PUSH","value":"5"},{"begin":15413,"end":15430,"name":"DUP2"},{"begin":15413,"end":15430,"name":"LT"},{"begin":15413,"end":15430,"name":"ISZERO"},{"begin":15413,"end":15430,"name":"ISZERO"},{"begin":15413,"end":15430,"name":"PUSH [tag]","value":"128"},{"begin":15413,"end":15430,"name":"JUMPI"},{"begin":15413,"end":15430,"name":"INVALID"},{"begin":15413,"end":15430,"name":"tag","value":"128"},{"begin":15413,"end":15430,"name":"JUMPDEST"},{"begin":15413,"end":15430,"name":"PUSH","value":"20"},{"begin":15413,"end":15430,"name":"MUL"},{"begin":15413,"end":15430,"name":"ADD"},{"begin":15413,"end":15430,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":15212,"end":15736,"name":"AND"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15463,"end":15474,"name":"DUP8"},{"begin":15475,"end":15476,"name":"PUSH","value":"0"},{"begin":15463,"end":15477,"name":"PUSH","value":"6"},{"begin":15463,"end":15477,"name":"DUP2"},{"begin":15463,"end":15477,"name":"LT"},{"begin":15463,"end":15477,"name":"ISZERO"},{"begin":15463,"end":15477,"name":"ISZERO"},{"begin":15463,"end":15477,"name":"PUSH [tag]","value":"129"},{"begin":15463,"end":15477,"name":"JUMPI"},{"begin":15463,"end":15477,"name":"INVALID"},{"begin":15463,"end":15477,"name":"tag","value":"129"},{"begin":15463,"end":15477,"name":"JUMPDEST"},{"begin":15463,"end":15477,"name":"PUSH","value":"20"},{"begin":15463,"end":15477,"name":"MUL"},{"begin":15463,"end":15477,"name":"ADD"},{"begin":15463,"end":15477,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15510,"end":15521,"name":"DUP8"},{"begin":15522,"end":15523,"name":"PUSH","value":"1"},{"begin":15510,"end":15524,"name":"PUSH","value":"6"},{"begin":15510,"end":15524,"name":"DUP2"},{"begin":15510,"end":15524,"name":"LT"},{"begin":15510,"end":15524,"name":"ISZERO"},{"begin":15510,"end":15524,"name":"ISZERO"},{"begin":15510,"end":15524,"name":"PUSH [tag]","value":"130"},{"begin":15510,"end":15524,"name":"JUMPI"},{"begin":15510,"end":15524,"name":"INVALID"},{"begin":15510,"end":15524,"name":"tag","value":"130"},{"begin":15510,"end":15524,"name":"JUMPDEST"},{"begin":15510,"end":15524,"name":"PUSH","value":"20"},{"begin":15510,"end":15524,"name":"MUL"},{"begin":15510,"end":15524,"name":"ADD"},{"begin":15510,"end":15524,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15549,"end":15560,"name":"DUP8"},{"begin":15561,"end":15562,"name":"PUSH","value":"2"},{"begin":15549,"end":15563,"name":"PUSH","value":"6"},{"begin":15549,"end":15563,"name":"DUP2"},{"begin":15549,"end":15563,"name":"LT"},{"begin":15549,"end":15563,"name":"ISZERO"},{"begin":15549,"end":15563,"name":"ISZERO"},{"begin":15549,"end":15563,"name":"PUSH [tag]","value":"131"},{"begin":15549,"end":15563,"name":"JUMPI"},{"begin":15549,"end":15563,"name":"INVALID"},{"begin":15549,"end":15563,"name":"tag","value":"131"},{"begin":15549,"end":15563,"name":"JUMPDEST"},{"begin":15549,"end":15563,"name":"PUSH","value":"20"},{"begin":15549,"end":15563,"name":"MUL"},{"begin":15549,"end":15563,"name":"ADD"},{"begin":15549,"end":15563,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15588,"end":15599,"name":"DUP8"},{"begin":15600,"end":15601,"name":"PUSH","value":"3"},{"begin":15588,"end":15602,"name":"PUSH","value":"6"},{"begin":15588,"end":15602,"name":"DUP2"},{"begin":15588,"end":15602,"name":"LT"},{"begin":15588,"end":15602,"name":"ISZERO"},{"begin":15588,"end":15602,"name":"ISZERO"},{"begin":15588,"end":15602,"name":"PUSH [tag]","value":"132"},{"begin":15588,"end":15602,"name":"JUMPI"},{"begin":15588,"end":15602,"name":"INVALID"},{"begin":15588,"end":15602,"name":"tag","value":"132"},{"begin":15588,"end":15602,"name":"JUMPDEST"},{"begin":15588,"end":15602,"name":"PUSH","value":"20"},{"begin":15588,"end":15602,"name":"MUL"},{"begin":15588,"end":15602,"name":"ADD"},{"begin":15588,"end":15602,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15643,"end":15654,"name":"DUP8"},{"begin":15655,"end":15656,"name":"PUSH","value":"4"},{"begin":15643,"end":15657,"name":"PUSH","value":"6"},{"begin":15643,"end":15657,"name":"DUP2"},{"begin":15643,"end":15657,"name":"LT"},{"begin":15643,"end":15657,"name":"ISZERO"},{"begin":15643,"end":15657,"name":"ISZERO"},{"begin":15643,"end":15657,"name":"PUSH [tag]","value":"133"},{"begin":15643,"end":15657,"name":"JUMPI"},{"begin":15643,"end":15657,"name":"INVALID"},{"begin":15643,"end":15657,"name":"tag","value":"133"},{"begin":15643,"end":15657,"name":"JUMPDEST"},{"begin":15643,"end":15657,"name":"PUSH","value":"20"},{"begin":15643,"end":15657,"name":"MUL"},{"begin":15643,"end":15657,"name":"ADD"},{"begin":15643,"end":15657,"name":"MLOAD"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"PUSH","value":"20"},{"begin":15212,"end":15736,"name":"ADD"},{"begin":15683,"end":15724,"name":"PUSH [tag]","value":"134"},{"begin":15696,"end":15710,"name":"DUP10"},{"begin":15712,"end":15723,"name":"DUP10"},{"begin":15683,"end":15695,"name":"PUSH [tag]","value":"83"},{"begin":15683,"end":15724,"name":"JUMP","value":"[in]"},{"begin":15683,"end":15724,"name":"tag","value":"134"},{"begin":15683,"end":15724,"name":"JUMPDEST"},{"begin":15212,"end":15736,"name":"PUSH","value":"0"},{"begin":15212,"end":15736,"name":"NOT"},{"begin":15212,"end":15736,"name":"AND"},{"begin":15212,"end":15736,"name":"DUP2"},{"begin":15212,"end":15736,"name":"MSTORE"},{"begin":15212,"end":15736,"name":"POP"},{"begin":15191,"end":15736,"name":"SWAP3"},{"begin":15191,"end":15736,"name":"POP"},{"begin":15772,"end":15782,"name":"CALLER"},{"begin":15757,"end":15782,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":15757,"end":15782,"name":"AND"},{"begin":15757,"end":15762,"name":"DUP4"},{"begin":15757,"end":15768,"name":"PUSH","value":"0"},{"begin":15757,"end":15768,"name":"ADD"},{"begin":15757,"end":15768,"name":"MLOAD"},{"begin":15757,"end":15782,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":15757,"end":15782,"name":"AND"},{"begin":15757,"end":15782,"name":"EQ"},{"begin":15749,"end":15783,"name":"ISZERO"},{"begin":15749,"end":15783,"name":"ISZERO"},{"begin":15749,"end":15783,"name":"PUSH [tag]","value":"135"},{"begin":15749,"end":15783,"name":"JUMPI"},{"begin":15749,"end":15783,"name":"PUSH","value":"0"},{"begin":15749,"end":15783,"name":"DUP1"},{"begin":15749,"end":15783,"name":"REVERT"},{"begin":15749,"end":15783,"name":"tag","value":"135"},{"begin":15749,"end":15783,"name":"JUMPDEST"},{"begin":15827,"end":15828,"name":"PUSH","value":"0"},{"begin":15802,"end":15807,"name":"DUP4"},{"begin":15802,"end":15824,"name":"PUSH","value":"A0"},{"begin":15802,"end":15824,"name":"ADD"},{"begin":15802,"end":15824,"name":"MLOAD"},{"begin":15802,"end":15828,"name":"GT"},{"begin":15802,"end":15858,"name":"DUP1"},{"begin":15802,"end":15858,"name":"ISZERO"},{"begin":15802,"end":15858,"name":"PUSH [tag]","value":"136"},{"begin":15802,"end":15858,"name":"JUMPI"},{"begin":15802,"end":15858,"name":"POP"},{"begin":15857,"end":15858,"name":"PUSH","value":"0"},{"begin":15832,"end":15837,"name":"DUP4"},{"begin":15832,"end":15854,"name":"PUSH","value":"C0"},{"begin":15832,"end":15854,"name":"ADD"},{"begin":15832,"end":15854,"name":"MLOAD"},{"begin":15832,"end":15858,"name":"GT"},{"begin":15802,"end":15858,"name":"tag","value":"136"},{"begin":15802,"end":15858,"name":"JUMPDEST"},{"begin":15802,"end":15888,"name":"DUP1"},{"begin":15802,"end":15888,"name":"ISZERO"},{"begin":15802,"end":15888,"name":"PUSH [tag]","value":"137"},{"begin":15802,"end":15888,"name":"JUMPI"},{"begin":15802,"end":15888,"name":"POP"},{"begin":15887,"end":15888,"name":"PUSH","value":"0"},{"begin":15862,"end":15884,"name":"DUP6"},{"begin":15862,"end":15888,"name":"GT"},{"begin":15802,"end":15888,"name":"tag","value":"137"},{"begin":15802,"end":15888,"name":"JUMPDEST"},{"begin":15794,"end":15889,"name":"ISZERO"},{"begin":15794,"end":15889,"name":"ISZERO"},{"begin":15794,"end":15889,"name":"PUSH [tag]","value":"138"},{"begin":15794,"end":15889,"name":"JUMPI"},{"begin":15794,"end":15889,"name":"PUSH","value":"0"},{"begin":15794,"end":15889,"name":"DUP1"},{"begin":15794,"end":15889,"name":"REVERT"},{"begin":15794,"end":15889,"name":"tag","value":"138"},{"begin":15794,"end":15889,"name":"JUMPDEST"},{"begin":15925,"end":15930,"name":"DUP3"},{"begin":15925,"end":15955,"name":"PUSH","value":"120"},{"begin":15925,"end":15955,"name":"ADD"},{"begin":15925,"end":15955,"name":"MLOAD"},{"begin":15906,"end":15921,"name":"TIMESTAMP"},{"begin":15906,"end":15955,"name":"LT"},{"begin":15906,"end":15955,"name":"ISZERO"},{"begin":15902,"end":16061,"name":"ISZERO"},{"begin":15902,"end":16061,"name":"PUSH [tag]","value":"139"},{"begin":15902,"end":16061,"name":"JUMPI"},{"begin":16010,"end":16015,"name":"DUP3"},{"begin":16010,"end":16025,"name":"PUSH","value":"140"},{"begin":16010,"end":16025,"name":"ADD"},{"begin":16010,"end":16025,"name":"MLOAD"},{"begin":15972,"end":16026,"name":"PUSH","value":"0"},{"begin":15972,"end":16026,"name":"NOT"},{"begin":15972,"end":16026,"name":"AND"},{"begin":15987,"end":16007,"name":"PUSH","value":"0"},{"begin":15981,"end":16008,"name":"PUSH","value":"3"},{"begin":15981,"end":16008,"name":"DUP2"},{"begin":15981,"end":16008,"name":"GT"},{"begin":15981,"end":16008,"name":"ISZERO"},{"begin":15981,"end":16008,"name":"PUSH [tag]","value":"140"},{"begin":15981,"end":16008,"name":"JUMPI"},{"begin":15981,"end":16008,"name":"INVALID"},{"begin":15981,"end":16008,"name":"tag","value":"140"},{"begin":15981,"end":16008,"name":"JUMPDEST"},{"begin":15972,"end":16026,"name":"PUSH","value":"FF"},{"begin":15972,"end":16026,"name":"AND"},{"begin":15972,"end":16026,"name":"PUSH","value":"36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90"},{"begin":15972,"end":16026,"name":"PUSH","value":"40"},{"begin":15972,"end":16026,"name":"MLOAD"},{"begin":15972,"end":16026,"name":"PUSH","value":"40"},{"begin":15972,"end":16026,"name":"MLOAD"},{"begin":15972,"end":16026,"name":"DUP1"},{"begin":15972,"end":16026,"name":"SWAP2"},{"begin":15972,"end":16026,"name":"SUB"},{"begin":15972,"end":16026,"name":"SWAP1"},{"begin":15972,"end":16026,"name":"LOG3"},{"begin":16048,"end":16049,"name":"PUSH","value":"0"},{"begin":16041,"end":16049,"name":"SWAP4"},{"begin":16041,"end":16049,"name":"POP"},{"begin":16041,"end":16049,"name":"PUSH [tag]","value":"123"},{"begin":16041,"end":16049,"name":"JUMP"},{"begin":15902,"end":16061,"name":"tag","value":"139"},{"begin":15902,"end":16061,"name":"JUMPDEST"},{"begin":16106,"end":16186,"name":"PUSH [tag]","value":"141"},{"begin":16114,"end":16119,"name":"DUP4"},{"begin":16114,"end":16136,"name":"PUSH","value":"C0"},{"begin":16114,"end":16136,"name":"ADD"},{"begin":16114,"end":16136,"name":"MLOAD"},{"begin":16138,"end":16185,"name":"PUSH [tag]","value":"142"},{"begin":16169,"end":16174,"name":"DUP6"},{"begin":16169,"end":16184,"name":"PUSH","value":"140"},{"begin":16169,"end":16184,"name":"ADD"},{"begin":16169,"end":16184,"name":"MLOAD"},{"begin":16138,"end":16168,"name":"PUSH [tag]","value":"54"},{"begin":16138,"end":16185,"name":"JUMP","value":"[in]"},{"begin":16138,"end":16185,"name":"tag","value":"142"},{"begin":16138,"end":16185,"name":"JUMPDEST"},{"begin":16106,"end":16113,"name":"PUSH [tag]","value":"115"},{"begin":16106,"end":16186,"name":"JUMP","value":"[in]"},{"begin":16106,"end":16186,"name":"tag","value":"141"},{"begin":16106,"end":16186,"name":"JUMPDEST"},{"begin":16073,"end":16186,"name":"SWAP2"},{"begin":16073,"end":16186,"name":"POP"},{"begin":16230,"end":16287,"name":"PUSH [tag]","value":"143"},{"begin":16237,"end":16259,"name":"DUP6"},{"begin":16261,"end":16286,"name":"DUP4"},{"begin":16230,"end":16236,"name":"PUSH [tag]","value":"144"},{"begin":16230,"end":16287,"name":"JUMP","value":"[in]"},{"begin":16230,"end":16287,"name":"tag","value":"143"},{"begin":16230,"end":16287,"name":"JUMPDEST"},{"begin":16197,"end":16287,"name":"SWAP1"},{"begin":16197,"end":16287,"name":"POP"},{"begin":16331,"end":16332,"name":"PUSH","value":"0"},{"begin":16302,"end":16327,"name":"DUP2"},{"begin":16302,"end":16332,"name":"EQ"},{"begin":16298,"end":16456,"name":"ISZERO"},{"begin":16298,"end":16456,"name":"PUSH [tag]","value":"145"},{"begin":16298,"end":16456,"name":"JUMPI"},{"begin":16405,"end":16410,"name":"DUP3"},{"begin":16405,"end":16420,"name":"PUSH","value":"140"},{"begin":16405,"end":16420,"name":"ADD"},{"begin":16405,"end":16420,"name":"MLOAD"},{"begin":16349,"end":16421,"name":"PUSH","value":"0"},{"begin":16349,"end":16421,"name":"NOT"},{"begin":16349,"end":16421,"name":"AND"},{"begin":16364,"end":16402,"name":"PUSH","value":"1"},{"begin":16358,"end":16403,"name":"PUSH","value":"3"},{"begin":16358,"end":16403,"name":"DUP2"},{"begin":16358,"end":16403,"name":"GT"},{"begin":16358,"end":16403,"name":"ISZERO"},{"begin":16358,"end":16403,"name":"PUSH [tag]","value":"146"},{"begin":16358,"end":16403,"name":"JUMPI"},{"begin":16358,"end":16403,"name":"INVALID"},{"begin":16358,"end":16403,"name":"tag","value":"146"},{"begin":16358,"end":16403,"name":"JUMPDEST"},{"begin":16349,"end":16421,"name":"PUSH","value":"FF"},{"begin":16349,"end":16421,"name":"AND"},{"begin":16349,"end":16421,"name":"PUSH","value":"36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90"},{"begin":16349,"end":16421,"name":"PUSH","value":"40"},{"begin":16349,"end":16421,"name":"MLOAD"},{"begin":16349,"end":16421,"name":"PUSH","value":"40"},{"begin":16349,"end":16421,"name":"MLOAD"},{"begin":16349,"end":16421,"name":"DUP1"},{"begin":16349,"end":16421,"name":"SWAP2"},{"begin":16349,"end":16421,"name":"SUB"},{"begin":16349,"end":16421,"name":"SWAP1"},{"begin":16349,"end":16421,"name":"LOG3"},{"begin":16443,"end":16444,"name":"PUSH","value":"0"},{"begin":16436,"end":16444,"name":"SWAP4"},{"begin":16436,"end":16444,"name":"POP"},{"begin":16436,"end":16444,"name":"PUSH [tag]","value":"123"},{"begin":16436,"end":16444,"name":"JUMP"},{"begin":16298,"end":16456,"name":"tag","value":"145"},{"begin":16298,"end":16456,"name":"JUMPDEST"},{"begin":16497,"end":16559,"name":"PUSH [tag]","value":"147"},{"begin":16505,"end":16514,"name":"PUSH","value":"3"},{"begin":16505,"end":16531,"name":"PUSH","value":"0"},{"begin":16515,"end":16520,"name":"DUP6"},{"begin":16515,"end":16530,"name":"PUSH","value":"140"},{"begin":16515,"end":16530,"name":"ADD"},{"begin":16515,"end":16530,"name":"MLOAD"},{"begin":16505,"end":16531,"name":"PUSH","value":"0"},{"begin":16505,"end":16531,"name":"NOT"},{"begin":16505,"end":16531,"name":"AND"},{"begin":16505,"end":16531,"name":"PUSH","value":"0"},{"begin":16505,"end":16531,"name":"NOT"},{"begin":16505,"end":16531,"name":"AND"},{"begin":16505,"end":16531,"name":"DUP2"},{"begin":16505,"end":16531,"name":"MSTORE"},{"begin":16505,"end":16531,"name":"PUSH","value":"20"},{"begin":16505,"end":16531,"name":"ADD"},{"begin":16505,"end":16531,"name":"SWAP1"},{"begin":16505,"end":16531,"name":"DUP2"},{"begin":16505,"end":16531,"name":"MSTORE"},{"begin":16505,"end":16531,"name":"PUSH","value":"20"},{"begin":16505,"end":16531,"name":"ADD"},{"begin":16505,"end":16531,"name":"PUSH","value":"0"},{"begin":16505,"end":16531,"name":"KECCAK256"},{"begin":16505,"end":16531,"name":"SLOAD"},{"begin":16533,"end":16558,"name":"DUP3"},{"begin":16497,"end":16504,"name":"PUSH [tag]","value":"119"},{"begin":16497,"end":16559,"name":"JUMP","value":"[in]"},{"begin":16497,"end":16559,"name":"tag","value":"147"},{"begin":16497,"end":16559,"name":"JUMPDEST"},{"begin":16468,"end":16477,"name":"PUSH","value":"3"},{"begin":16468,"end":16494,"name":"PUSH","value":"0"},{"begin":16478,"end":16483,"name":"DUP6"},{"begin":16478,"end":16493,"name":"PUSH","value":"140"},{"begin":16478,"end":16493,"name":"ADD"},{"begin":16478,"end":16493,"name":"MLOAD"},{"begin":16468,"end":16494,"name":"PUSH","value":"0"},{"begin":16468,"end":16494,"name":"NOT"},{"begin":16468,"end":16494,"name":"AND"},{"begin":16468,"end":16494,"name":"PUSH","value":"0"},{"begin":16468,"end":16494,"name":"NOT"},{"begin":16468,"end":16494,"name":"AND"},{"begin":16468,"end":16494,"name":"DUP2"},{"begin":16468,"end":16494,"name":"MSTORE"},{"begin":16468,"end":16494,"name":"PUSH","value":"20"},{"begin":16468,"end":16494,"name":"ADD"},{"begin":16468,"end":16494,"name":"SWAP1"},{"begin":16468,"end":16494,"name":"DUP2"},{"begin":16468,"end":16494,"name":"MSTORE"},{"begin":16468,"end":16494,"name":"PUSH","value":"20"},{"begin":16468,"end":16494,"name":"ADD"},{"begin":16468,"end":16494,"name":"PUSH","value":"0"},{"begin":16468,"end":16494,"name":"KECCAK256"},{"begin":16468,"end":16559,"name":"DUP2"},{"begin":16468,"end":16559,"name":"SWAP1"},{"begin":16468,"end":16559,"name":"SSTORE"},{"begin":16468,"end":16559,"name":"POP"},{"begin":16873,"end":16878,"name":"DUP3"},{"begin":16873,"end":16889,"name":"PUSH","value":"40"},{"begin":16873,"end":16889,"name":"ADD"},{"begin":16873,"end":16889,"name":"MLOAD"},{"begin":16891,"end":16896,"name":"DUP4"},{"begin":16891,"end":16907,"name":"PUSH","value":"60"},{"begin":16891,"end":16907,"name":"ADD"},{"begin":16891,"end":16907,"name":"MLOAD"},{"begin":16863,"end":16908,"name":"PUSH","value":"40"},{"begin":16863,"end":16908,"name":"MLOAD"},{"begin":16863,"end":16908,"name":"DUP1"},{"begin":16863,"end":16908,"name":"DUP4"},{"begin":16863,"end":16908,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16863,"end":16908,"name":"AND"},{"begin":16863,"end":16908,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16863,"end":16908,"name":"AND"},{"begin":16863,"end":16908,"name":"PUSH","value":"1000000000000000000000000"},{"begin":16863,"end":16908,"name":"MUL"},{"begin":16863,"end":16908,"name":"DUP2"},{"begin":16863,"end":16908,"name":"MSTORE"},{"begin":16863,"end":16908,"name":"PUSH","value":"14"},{"begin":16863,"end":16908,"name":"ADD"},{"begin":16863,"end":16908,"name":"DUP3"},{"begin":16863,"end":16908,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16863,"end":16908,"name":"AND"},{"begin":16863,"end":16908,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16863,"end":16908,"name":"AND"},{"begin":16863,"end":16908,"name":"PUSH","value":"1000000000000000000000000"},{"begin":16863,"end":16908,"name":"MUL"},{"begin":16863,"end":16908,"name":"DUP2"},{"begin":16863,"end":16908,"name":"MSTORE"},{"begin":16863,"end":16908,"name":"PUSH","value":"14"},{"begin":16863,"end":16908,"name":"ADD"},{"begin":16863,"end":16908,"name":"SWAP3"},{"begin":16863,"end":16908,"name":"POP"},{"begin":16863,"end":16908,"name":"POP"},{"begin":16863,"end":16908,"name":"POP"},{"begin":16863,"end":16908,"name":"PUSH","value":"40"},{"begin":16863,"end":16908,"name":"MLOAD"},{"begin":16863,"end":16908,"name":"DUP1"},{"begin":16863,"end":16908,"name":"SWAP2"},{"begin":16863,"end":16908,"name":"SUB"},{"begin":16863,"end":16908,"name":"SWAP1"},{"begin":16863,"end":16908,"name":"KECCAK256"},{"begin":16572,"end":16949,"name":"PUSH","value":"0"},{"begin":16572,"end":16949,"name":"NOT"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16622,"end":16627,"name":"DUP4"},{"begin":16622,"end":16640,"name":"PUSH","value":"80"},{"begin":16622,"end":16640,"name":"ADD"},{"begin":16622,"end":16640,"name":"MLOAD"},{"begin":16572,"end":16949,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16596,"end":16601,"name":"DUP5"},{"begin":16596,"end":16607,"name":"PUSH","value":"0"},{"begin":16596,"end":16607,"name":"ADD"},{"begin":16596,"end":16607,"name":"MLOAD"},{"begin":16572,"end":16949,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16572,"end":16949,"name":"PUSH","value":"67D66F160BC93D925D05DAE1794C90D2D6D6688B29B84FF069398A9B04587131"},{"begin":16655,"end":16660,"name":"DUP7"},{"begin":16655,"end":16671,"name":"PUSH","value":"40"},{"begin":16655,"end":16671,"name":"ADD"},{"begin":16655,"end":16671,"name":"MLOAD"},{"begin":16686,"end":16691,"name":"DUP8"},{"begin":16686,"end":16702,"name":"PUSH","value":"60"},{"begin":16686,"end":16702,"name":"ADD"},{"begin":16686,"end":16702,"name":"MLOAD"},{"begin":16717,"end":16808,"name":"PUSH [tag]","value":"148"},{"begin":16734,"end":16759,"name":"DUP8"},{"begin":16761,"end":16766,"name":"DUP11"},{"begin":16761,"end":16783,"name":"PUSH","value":"C0"},{"begin":16761,"end":16783,"name":"ADD"},{"begin":16761,"end":16783,"name":"MLOAD"},{"begin":16785,"end":16790,"name":"DUP12"},{"begin":16785,"end":16807,"name":"PUSH","value":"A0"},{"begin":16785,"end":16807,"name":"ADD"},{"begin":16785,"end":16807,"name":"MLOAD"},{"begin":16717,"end":16733,"name":"PUSH [tag]","value":"60"},{"begin":16717,"end":16808,"name":"JUMP","value":"[in]"},{"begin":16717,"end":16808,"name":"tag","value":"148"},{"begin":16717,"end":16808,"name":"JUMPDEST"},{"begin":16823,"end":16848,"name":"DUP8"},{"begin":16923,"end":16928,"name":"DUP11"},{"begin":16923,"end":16938,"name":"PUSH","value":"140"},{"begin":16923,"end":16938,"name":"ADD"},{"begin":16923,"end":16938,"name":"MLOAD"},{"begin":16572,"end":16949,"name":"PUSH","value":"40"},{"begin":16572,"end":16949,"name":"MLOAD"},{"begin":16572,"end":16949,"name":"DUP1"},{"begin":16572,"end":16949,"name":"DUP7"},{"begin":16572,"end":16949,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16572,"end":16949,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16572,"end":16949,"name":"DUP2"},{"begin":16572,"end":16949,"name":"MSTORE"},{"begin":16572,"end":16949,"name":"PUSH","value":"20"},{"begin":16572,"end":16949,"name":"ADD"},{"begin":16572,"end":16949,"name":"DUP6"},{"begin":16572,"end":16949,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16572,"end":16949,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16572,"end":16949,"name":"DUP2"},{"begin":16572,"end":16949,"name":"MSTORE"},{"begin":16572,"end":16949,"name":"PUSH","value":"20"},{"begin":16572,"end":16949,"name":"ADD"},{"begin":16572,"end":16949,"name":"DUP5"},{"begin":16572,"end":16949,"name":"DUP2"},{"begin":16572,"end":16949,"name":"MSTORE"},{"begin":16572,"end":16949,"name":"PUSH","value":"20"},{"begin":16572,"end":16949,"name":"ADD"},{"begin":16572,"end":16949,"name":"DUP4"},{"begin":16572,"end":16949,"name":"DUP2"},{"begin":16572,"end":16949,"name":"MSTORE"},{"begin":16572,"end":16949,"name":"PUSH","value":"20"},{"begin":16572,"end":16949,"name":"ADD"},{"begin":16572,"end":16949,"name":"DUP3"},{"begin":16572,"end":16949,"name":"PUSH","value":"0"},{"begin":16572,"end":16949,"name":"NOT"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16572,"end":16949,"name":"PUSH","value":"0"},{"begin":16572,"end":16949,"name":"NOT"},{"begin":16572,"end":16949,"name":"AND"},{"begin":16572,"end":16949,"name":"DUP2"},{"begin":16572,"end":16949,"name":"MSTORE"},{"begin":16572,"end":16949,"name":"PUSH","value":"20"},{"begin":16572,"end":16949,"name":"ADD"},{"begin":16572,"end":16949,"name":"SWAP6"},{"begin":16572,"end":16949,"name":"POP"},{"begin":16572,"end":16949,"name":"POP"},{"begin":16572,"end":16949,"name":"POP"},{"begin":16572,"end":16949,"name":"POP"},{"begin":16572,"end":16949,"name":"POP"},{"begin":16572,"end":16949,"name":"POP"},{"begin":16572,"end":16949,"name":"PUSH","value":"40"},{"begin":16572,"end":16949,"name":"MLOAD"},{"begin":16572,"end":16949,"name":"DUP1"},{"begin":16572,"end":16949,"name":"SWAP2"},{"begin":16572,"end":16949,"name":"SUB"},{"begin":16572,"end":16949,"name":"SWAP1"},{"begin":16572,"end":16949,"name":"LOG4"},{"begin":16967,"end":16992,"name":"DUP1"},{"begin":16960,"end":16992,"name":"SWAP4"},{"begin":16960,"end":16992,"name":"POP"},{"begin":15009,"end":17000,"name":"tag","value":"123"},{"begin":15009,"end":17000,"name":"JUMPDEST"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"SWAP4"},{"begin":15009,"end":17000,"name":"SWAP3"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"POP"},{"begin":15009,"end":17000,"name":"JUMP","value":"[out]"},{"begin":8094,"end":8127,"name":"tag","value":"41"},{"begin":8094,"end":8127,"name":"JUMPDEST"},{"begin":8094,"end":8127,"name":"PUSH","value":"0"},{"begin":8094,"end":8127,"name":"DUP1"},{"begin":8094,"end":8127,"name":"SWAP1"},{"begin":8094,"end":8127,"name":"SLOAD"},{"begin":8094,"end":8127,"name":"SWAP1"},{"begin":8094,"end":8127,"name":"PUSH","value":"100"},{"begin":8094,"end":8127,"name":"EXP"},{"begin":8094,"end":8127,"name":"SWAP1"},{"begin":8094,"end":8127,"name":"DIV"},{"begin":8094,"end":8127,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":8094,"end":8127,"name":"AND"},{"begin":8094,"end":8127,"name":"DUP2"},{"begin":8094,"end":8127,"name":"JUMP","value":"[out]"},{"begin":19892,"end":20423,"name":"tag","value":"48"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":20134,"end":20140,"name":"PUSH","value":"0"},{"begin":20143,"end":20144,"name":"DUP1"},{"begin":20134,"end":20144,"name":"SWAP1"},{"begin":20134,"end":20144,"name":"POP"},{"begin":20129,"end":20416,"name":"tag","value":"150"},{"begin":20129,"end":20416,"name":"JUMPDEST"},{"begin":20150,"end":20164,"name":"DUP7"},{"begin":20150,"end":20171,"name":"MLOAD"},{"begin":20146,"end":20147,"name":"DUP2"},{"begin":20146,"end":20171,"name":"LT"},{"begin":20129,"end":20416,"name":"ISZERO"},{"begin":20129,"end":20416,"name":"PUSH [tag]","value":"151"},{"begin":20129,"end":20416,"name":"JUMPI"},{"begin":20193,"end":20404,"name":"PUSH [tag]","value":"153"},{"begin":20227,"end":20241,"name":"DUP8"},{"begin":20242,"end":20243,"name":"DUP3"},{"begin":20227,"end":20244,"name":"DUP2"},{"begin":20227,"end":20244,"name":"MLOAD"},{"begin":20227,"end":20244,"name":"DUP2"},{"begin":20227,"end":20244,"name":"LT"},{"begin":20227,"end":20244,"name":"ISZERO"},{"begin":20227,"end":20244,"name":"ISZERO"},{"begin":20227,"end":20244,"name":"PUSH [tag]","value":"154"},{"begin":20227,"end":20244,"name":"JUMPI"},{"begin":20227,"end":20244,"name":"INVALID"},{"begin":20227,"end":20244,"name":"tag","value":"154"},{"begin":20227,"end":20244,"name":"JUMPDEST"},{"begin":20227,"end":20244,"name":"SWAP1"},{"begin":20227,"end":20244,"name":"PUSH","value":"20"},{"begin":20227,"end":20244,"name":"ADD"},{"begin":20227,"end":20244,"name":"SWAP1"},{"begin":20227,"end":20244,"name":"PUSH","value":"20"},{"begin":20227,"end":20244,"name":"MUL"},{"begin":20227,"end":20244,"name":"ADD"},{"begin":20227,"end":20244,"name":"MLOAD"},{"begin":20263,"end":20274,"name":"DUP8"},{"begin":20275,"end":20276,"name":"DUP4"},{"begin":20263,"end":20277,"name":"DUP2"},{"begin":20263,"end":20277,"name":"MLOAD"},{"begin":20263,"end":20277,"name":"DUP2"},{"begin":20263,"end":20277,"name":"LT"},{"begin":20263,"end":20277,"name":"ISZERO"},{"begin":20263,"end":20277,"name":"ISZERO"},{"begin":20263,"end":20277,"name":"PUSH [tag]","value":"155"},{"begin":20263,"end":20277,"name":"JUMPI"},{"begin":20263,"end":20277,"name":"INVALID"},{"begin":20263,"end":20277,"name":"tag","value":"155"},{"begin":20263,"end":20277,"name":"JUMPDEST"},{"begin":20263,"end":20277,"name":"SWAP1"},{"begin":20263,"end":20277,"name":"PUSH","value":"20"},{"begin":20263,"end":20277,"name":"ADD"},{"begin":20263,"end":20277,"name":"SWAP1"},{"begin":20263,"end":20277,"name":"PUSH","value":"20"},{"begin":20263,"end":20277,"name":"MUL"},{"begin":20263,"end":20277,"name":"ADD"},{"begin":20263,"end":20277,"name":"MLOAD"},{"begin":20296,"end":20317,"name":"DUP8"},{"begin":20318,"end":20319,"name":"DUP5"},{"begin":20296,"end":20320,"name":"DUP2"},{"begin":20296,"end":20320,"name":"MLOAD"},{"begin":20296,"end":20320,"name":"DUP2"},{"begin":20296,"end":20320,"name":"LT"},{"begin":20296,"end":20320,"name":"ISZERO"},{"begin":20296,"end":20320,"name":"ISZERO"},{"begin":20296,"end":20320,"name":"PUSH [tag]","value":"156"},{"begin":20296,"end":20320,"name":"JUMPI"},{"begin":20296,"end":20320,"name":"INVALID"},{"begin":20296,"end":20320,"name":"tag","value":"156"},{"begin":20296,"end":20320,"name":"JUMPDEST"},{"begin":20296,"end":20320,"name":"SWAP1"},{"begin":20296,"end":20320,"name":"PUSH","value":"20"},{"begin":20296,"end":20320,"name":"ADD"},{"begin":20296,"end":20320,"name":"SWAP1"},{"begin":20296,"end":20320,"name":"PUSH","value":"20"},{"begin":20296,"end":20320,"name":"MUL"},{"begin":20296,"end":20320,"name":"ADD"},{"begin":20296,"end":20320,"name":"MLOAD"},{"begin":20339,"end":20340,"name":"DUP8"},{"begin":20341,"end":20342,"name":"DUP6"},{"begin":20339,"end":20343,"name":"DUP2"},{"begin":20339,"end":20343,"name":"MLOAD"},{"begin":20339,"end":20343,"name":"DUP2"},{"begin":20339,"end":20343,"name":"LT"},{"begin":20339,"end":20343,"name":"ISZERO"},{"begin":20339,"end":20343,"name":"ISZERO"},{"begin":20339,"end":20343,"name":"PUSH [tag]","value":"157"},{"begin":20339,"end":20343,"name":"JUMPI"},{"begin":20339,"end":20343,"name":"INVALID"},{"begin":20339,"end":20343,"name":"tag","value":"157"},{"begin":20339,"end":20343,"name":"JUMPDEST"},{"begin":20339,"end":20343,"name":"SWAP1"},{"begin":20339,"end":20343,"name":"PUSH","value":"20"},{"begin":20339,"end":20343,"name":"ADD"},{"begin":20339,"end":20343,"name":"SWAP1"},{"begin":20339,"end":20343,"name":"PUSH","value":"20"},{"begin":20339,"end":20343,"name":"MUL"},{"begin":20339,"end":20343,"name":"ADD"},{"begin":20339,"end":20343,"name":"MLOAD"},{"begin":20362,"end":20363,"name":"DUP8"},{"begin":20364,"end":20365,"name":"DUP7"},{"begin":20362,"end":20366,"name":"DUP2"},{"begin":20362,"end":20366,"name":"MLOAD"},{"begin":20362,"end":20366,"name":"DUP2"},{"begin":20362,"end":20366,"name":"LT"},{"begin":20362,"end":20366,"name":"ISZERO"},{"begin":20362,"end":20366,"name":"ISZERO"},{"begin":20362,"end":20366,"name":"PUSH [tag]","value":"158"},{"begin":20362,"end":20366,"name":"JUMPI"},{"begin":20362,"end":20366,"name":"INVALID"},{"begin":20362,"end":20366,"name":"tag","value":"158"},{"begin":20362,"end":20366,"name":"JUMPDEST"},{"begin":20362,"end":20366,"name":"SWAP1"},{"begin":20362,"end":20366,"name":"PUSH","value":"20"},{"begin":20362,"end":20366,"name":"ADD"},{"begin":20362,"end":20366,"name":"SWAP1"},{"begin":20362,"end":20366,"name":"PUSH","value":"20"},{"begin":20362,"end":20366,"name":"MUL"},{"begin":20362,"end":20366,"name":"ADD"},{"begin":20362,"end":20366,"name":"MLOAD"},{"begin":20385,"end":20386,"name":"DUP8"},{"begin":20387,"end":20388,"name":"DUP8"},{"begin":20385,"end":20389,"name":"DUP2"},{"begin":20385,"end":20389,"name":"MLOAD"},{"begin":20385,"end":20389,"name":"DUP2"},{"begin":20385,"end":20389,"name":"LT"},{"begin":20385,"end":20389,"name":"ISZERO"},{"begin":20385,"end":20389,"name":"ISZERO"},{"begin":20385,"end":20389,"name":"PUSH [tag]","value":"159"},{"begin":20385,"end":20389,"name":"JUMPI"},{"begin":20385,"end":20389,"name":"INVALID"},{"begin":20385,"end":20389,"name":"tag","value":"159"},{"begin":20385,"end":20389,"name":"JUMPDEST"},{"begin":20385,"end":20389,"name":"SWAP1"},{"begin":20385,"end":20389,"name":"PUSH","value":"20"},{"begin":20385,"end":20389,"name":"ADD"},{"begin":20385,"end":20389,"name":"SWAP1"},{"begin":20385,"end":20389,"name":"PUSH","value":"20"},{"begin":20385,"end":20389,"name":"MUL"},{"begin":20385,"end":20389,"name":"ADD"},{"begin":20385,"end":20389,"name":"MLOAD"},{"begin":20193,"end":20208,"name":"PUSH [tag]","value":"51"},{"begin":20193,"end":20404,"name":"JUMP","value":"[in]"},{"begin":20193,"end":20404,"name":"tag","value":"153"},{"begin":20193,"end":20404,"name":"JUMPDEST"},{"begin":20129,"end":20416,"name":"tag","value":"152"},{"begin":20129,"end":20416,"name":"JUMPDEST"},{"begin":20173,"end":20176,"name":"DUP1"},{"begin":20173,"end":20176,"name":"DUP1"},{"begin":20173,"end":20176,"name":"PUSH","value":"1"},{"begin":20173,"end":20176,"name":"ADD"},{"begin":20173,"end":20176,"name":"SWAP2"},{"begin":20173,"end":20176,"name":"POP"},{"begin":20173,"end":20176,"name":"POP"},{"begin":20129,"end":20416,"name":"PUSH [tag]","value":"150"},{"begin":20129,"end":20416,"name":"JUMP"},{"begin":20129,"end":20416,"name":"tag","value":"151"},{"begin":20129,"end":20416,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"tag","value":"149"},{"begin":19892,"end":20423,"name":"JUMPDEST"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"POP"},{"begin":19892,"end":20423,"name":"JUMP","value":"[out]"},{"begin":17634,"end":18071,"name":"tag","value":"51"},{"begin":17634,"end":18071,"name":"JUMPDEST"},{"begin":18042,"end":18062,"name":"DUP4"},{"begin":17860,"end":18038,"name":"PUSH [tag]","value":"161"},{"begin":17884,"end":17898,"name":"DUP8"},{"begin":17913,"end":17924,"name":"DUP8"},{"begin":17939,"end":17959,"name":"DUP8"},{"begin":17974,"end":17979,"name":"PUSH","value":"0"},{"begin":17994,"end":17995,"name":"DUP9"},{"begin":18010,"end":18011,"name":"DUP9"},{"begin":18026,"end":18027,"name":"DUP9"},{"begin":17860,"end":17869,"name":"PUSH [tag]","value":"80"},{"begin":17860,"end":18038,"name":"JUMP","value":"[in]"},{"begin":17860,"end":18038,"name":"tag","value":"161"},{"begin":17860,"end":18038,"name":"JUMPDEST"},{"begin":17860,"end":18062,"name":"EQ"},{"begin":17852,"end":18063,"name":"ISZERO"},{"begin":17852,"end":18063,"name":"ISZERO"},{"begin":17852,"end":18063,"name":"PUSH [tag]","value":"162"},{"begin":17852,"end":18063,"name":"JUMPI"},{"begin":17852,"end":18063,"name":"PUSH","value":"0"},{"begin":17852,"end":18063,"name":"DUP1"},{"begin":17852,"end":18063,"name":"REVERT"},{"begin":17852,"end":18063,"name":"tag","value":"162"},{"begin":17852,"end":18063,"name":"JUMPDEST"},{"begin":17634,"end":18071,"name":"tag","value":"160"},{"begin":17634,"end":18071,"name":"JUMPDEST"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"POP"},{"begin":17634,"end":18071,"name":"JUMP","value":"[out]"},{"begin":26205,"end":26401,"name":"tag","value":"54"},{"begin":26205,"end":26401,"name":"JUMPDEST"},{"begin":26316,"end":26320,"name":"PUSH","value":"0"},{"begin":26345,"end":26393,"name":"PUSH [tag]","value":"164"},{"begin":26353,"end":26359,"name":"PUSH","value":"2"},{"begin":26353,"end":26370,"name":"PUSH","value":"0"},{"begin":26360,"end":26369,"name":"DUP5"},{"begin":26353,"end":26370,"name":"PUSH","value":"0"},{"begin":26353,"end":26370,"name":"NOT"},{"begin":26353,"end":26370,"name":"AND"},{"begin":26353,"end":26370,"name":"PUSH","value":"0"},{"begin":26353,"end":26370,"name":"NOT"},{"begin":26353,"end":26370,"name":"AND"},{"begin":26353,"end":26370,"name":"DUP2"},{"begin":26353,"end":26370,"name":"MSTORE"},{"begin":26353,"end":26370,"name":"PUSH","value":"20"},{"begin":26353,"end":26370,"name":"ADD"},{"begin":26353,"end":26370,"name":"SWAP1"},{"begin":26353,"end":26370,"name":"DUP2"},{"begin":26353,"end":26370,"name":"MSTORE"},{"begin":26353,"end":26370,"name":"PUSH","value":"20"},{"begin":26353,"end":26370,"name":"ADD"},{"begin":26353,"end":26370,"name":"PUSH","value":"0"},{"begin":26353,"end":26370,"name":"KECCAK256"},{"begin":26353,"end":26370,"name":"SLOAD"},{"begin":26372,"end":26381,"name":"PUSH","value":"3"},{"begin":26372,"end":26392,"name":"PUSH","value":"0"},{"begin":26382,"end":26391,"name":"DUP6"},{"begin":26372,"end":26392,"name":"PUSH","value":"0"},{"begin":26372,"end":26392,"name":"NOT"},{"begin":26372,"end":26392,"name":"AND"},{"begin":26372,"end":26392,"name":"PUSH","value":"0"},{"begin":26372,"end":26392,"name":"NOT"},{"begin":26372,"end":26392,"name":"AND"},{"begin":26372,"end":26392,"name":"DUP2"},{"begin":26372,"end":26392,"name":"MSTORE"},{"begin":26372,"end":26392,"name":"PUSH","value":"20"},{"begin":26372,"end":26392,"name":"ADD"},{"begin":26372,"end":26392,"name":"SWAP1"},{"begin":26372,"end":26392,"name":"DUP2"},{"begin":26372,"end":26392,"name":"MSTORE"},{"begin":26372,"end":26392,"name":"PUSH","value":"20"},{"begin":26372,"end":26392,"name":"ADD"},{"begin":26372,"end":26392,"name":"PUSH","value":"0"},{"begin":26372,"end":26392,"name":"KECCAK256"},{"begin":26372,"end":26392,"name":"SLOAD"},{"begin":26345,"end":26352,"name":"PUSH [tag]","value":"119"},{"begin":26345,"end":26393,"name":"JUMP","value":"[in]"},{"begin":26345,"end":26393,"name":"tag","value":"164"},{"begin":26345,"end":26393,"name":"JUMPDEST"},{"begin":26338,"end":26393,"name":"SWAP1"},{"begin":26338,"end":26393,"name":"POP"},{"begin":26205,"end":26401,"name":"tag","value":"163"},{"begin":26205,"end":26401,"name":"JUMPDEST"},{"begin":26205,"end":26401,"name":"SWAP2"},{"begin":26205,"end":26401,"name":"SWAP1"},{"begin":26205,"end":26401,"name":"POP"},{"begin":26205,"end":26401,"name":"JUMP","value":"[out]"},{"begin":24430,"end":24796,"name":"tag","value":"57"},{"begin":24430,"end":24796,"name":"JUMPDEST"},{"begin":24615,"end":24619,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"PUSH","value":"1"},{"begin":24724,"end":24728,"name":"DUP6"},{"begin":24678,"end":24729,"name":"PUSH","value":"40"},{"begin":24678,"end":24729,"name":"MLOAD"},{"begin":24678,"end":24729,"name":"DUP1"},{"begin":24678,"end":24729,"name":"DUP1"},{"begin":24678,"end":24729,"name":"PUSH","value":"19457468657265756D205369676E6564204D6573736167653A0A333200000000"},{"begin":24678,"end":24729,"name":"DUP2"},{"begin":24678,"end":24729,"name":"MSTORE"},{"begin":24678,"end":24729,"name":"POP"},{"begin":24678,"end":24729,"name":"PUSH","value":"1C"},{"begin":24678,"end":24729,"name":"ADD"},{"begin":24678,"end":24729,"name":"DUP3"},{"begin":24678,"end":24729,"name":"PUSH","value":"0"},{"begin":24678,"end":24729,"name":"NOT"},{"begin":24678,"end":24729,"name":"AND"},{"begin":24678,"end":24729,"name":"PUSH","value":"0"},{"begin":24678,"end":24729,"name":"NOT"},{"begin":24678,"end":24729,"name":"AND"},{"begin":24678,"end":24729,"name":"DUP2"},{"begin":24678,"end":24729,"name":"MSTORE"},{"begin":24678,"end":24729,"name":"PUSH","value":"20"},{"begin":24678,"end":24729,"name":"ADD"},{"begin":24678,"end":24729,"name":"SWAP2"},{"begin":24678,"end":24729,"name":"POP"},{"begin":24678,"end":24729,"name":"POP"},{"begin":24678,"end":24729,"name":"PUSH","value":"40"},{"begin":24678,"end":24729,"name":"MLOAD"},{"begin":24678,"end":24729,"name":"DUP1"},{"begin":24678,"end":24729,"name":"SWAP2"},{"begin":24678,"end":24729,"name":"SUB"},{"begin":24678,"end":24729,"name":"SWAP1"},{"begin":24678,"end":24729,"name":"KECCAK256"},{"begin":24744,"end":24745,"name":"DUP6"},{"begin":24760,"end":24761,"name":"DUP6"},{"begin":24776,"end":24777,"name":"DUP6"},{"begin":24654,"end":24788,"name":"PUSH","value":"40"},{"begin":24654,"end":24788,"name":"MLOAD"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"DUP2"},{"begin":24654,"end":24788,"name":"MSTORE"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"ADD"},{"begin":24654,"end":24788,"name":"PUSH","value":"40"},{"begin":24654,"end":24788,"name":"MSTORE"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"PUSH","value":"40"},{"begin":24654,"end":24788,"name":"MLOAD"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"ADD"},{"begin":24654,"end":24788,"name":"MSTORE"},{"begin":24654,"end":24788,"name":"PUSH","value":"40"},{"begin":24654,"end":24788,"name":"MLOAD"},{"begin":24654,"end":24788,"name":"DUP1"},{"begin":24654,"end":24788,"name":"DUP6"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"NOT"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"NOT"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"DUP2"},{"begin":24654,"end":24788,"name":"MSTORE"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"ADD"},{"begin":24654,"end":24788,"name":"DUP5"},{"begin":24654,"end":24788,"name":"PUSH","value":"FF"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"PUSH","value":"FF"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"DUP2"},{"begin":24654,"end":24788,"name":"MSTORE"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"ADD"},{"begin":24654,"end":24788,"name":"DUP4"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"NOT"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"NOT"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"DUP2"},{"begin":24654,"end":24788,"name":"MSTORE"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"ADD"},{"begin":24654,"end":24788,"name":"DUP3"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"NOT"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"NOT"},{"begin":24654,"end":24788,"name":"AND"},{"begin":24654,"end":24788,"name":"DUP2"},{"begin":24654,"end":24788,"name":"MSTORE"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"ADD"},{"begin":24654,"end":24788,"name":"SWAP5"},{"begin":24654,"end":24788,"name":"POP"},{"begin":24654,"end":24788,"name":"POP"},{"begin":24654,"end":24788,"name":"POP"},{"begin":24654,"end":24788,"name":"POP"},{"begin":24654,"end":24788,"name":"POP"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"PUSH","value":"40"},{"begin":24654,"end":24788,"name":"MLOAD"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"DUP2"},{"begin":24654,"end":24788,"name":"SUB"},{"begin":24654,"end":24788,"name":"SWAP1"},{"begin":24654,"end":24788,"name":"DUP1"},{"begin":24654,"end":24788,"name":"DUP5"},{"begin":24654,"end":24788,"name":"SUB"},{"begin":24654,"end":24788,"name":"SWAP1"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"DUP7"},{"begin":24654,"end":24788,"name":"PUSH","value":"646E"},{"begin":24654,"end":24788,"name":"GAS"},{"begin":24654,"end":24788,"name":"SUB"},{"begin":24654,"end":24788,"name":"CALL"},{"begin":24654,"end":24788,"name":"ISZERO"},{"begin":24654,"end":24788,"name":"ISZERO"},{"begin":24654,"end":24788,"name":"PUSH [tag]","value":"166"},{"begin":24654,"end":24788,"name":"JUMPI"},{"begin":24654,"end":24788,"name":"PUSH","value":"0"},{"begin":24654,"end":24788,"name":"DUP1"},{"begin":24654,"end":24788,"name":"REVERT"},{"begin":24654,"end":24788,"name":"tag","value":"166"},{"begin":24654,"end":24788,"name":"JUMPDEST"},{"begin":24654,"end":24788,"name":"POP"},{"begin":24654,"end":24788,"name":"POP"},{"begin":24654,"end":24788,"name":"PUSH","value":"20"},{"begin":24654,"end":24788,"name":"PUSH","value":"40"},{"begin":24654,"end":24788,"name":"MLOAD"},{"begin":24654,"end":24788,"name":"SUB"},{"begin":24654,"end":24788,"name":"MLOAD"},{"begin":24644,"end":24788,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":24644,"end":24788,"name":"AND"},{"begin":24644,"end":24650,"name":"DUP7"},{"begin":24644,"end":24788,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":24644,"end":24788,"name":"AND"},{"begin":24644,"end":24788,"name":"EQ"},{"begin":24637,"end":24788,"name":"SWAP1"},{"begin":24637,"end":24788,"name":"POP"},{"begin":24430,"end":24796,"name":"tag","value":"165"},{"begin":24430,"end":24796,"name":"JUMPDEST"},{"begin":24430,"end":24796,"name":"SWAP6"},{"begin":24430,"end":24796,"name":"SWAP5"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"POP"},{"begin":24430,"end":24796,"name":"JUMP","value":"[out]"},{"begin":25769,"end":25979,"name":"tag","value":"60"},{"begin":25769,"end":25979,"name":"JUMPDEST"},{"begin":25894,"end":25898,"name":"PUSH","value":"0"},{"begin":25923,"end":25971,"name":"PUSH [tag]","value":"168"},{"begin":25931,"end":25957,"name":"PUSH [tag]","value":"169"},{"begin":25939,"end":25948,"name":"DUP6"},{"begin":25950,"end":25956,"name":"DUP5"},{"begin":25931,"end":25938,"name":"PUSH [tag]","value":"98"},{"begin":25931,"end":25957,"name":"JUMP","value":"[in]"},{"begin":25931,"end":25957,"name":"tag","value":"169"},{"begin":25931,"end":25957,"name":"JUMPDEST"},{"begin":25959,"end":25970,"name":"DUP5"},{"begin":25923,"end":25930,"name":"PUSH [tag]","value":"100"},{"begin":25923,"end":25971,"name":"JUMP","value":"[in]"},{"begin":25923,"end":25971,"name":"tag","value":"168"},{"begin":25923,"end":25971,"name":"JUMPDEST"},{"begin":25916,"end":25971,"name":"SWAP1"},{"begin":25916,"end":25971,"name":"POP"},{"begin":25769,"end":25979,"name":"tag","value":"167"},{"begin":25769,"end":25979,"name":"JUMPDEST"},{"begin":25769,"end":25979,"name":"SWAP4"},{"begin":25769,"end":25979,"name":"SWAP3"},{"begin":25769,"end":25979,"name":"POP"},{"begin":25769,"end":25979,"name":"POP"},{"begin":25769,"end":25979,"name":"POP"},{"begin":25769,"end":25979,"name":"JUMP","value":"[out]"},{"begin":8134,"end":8178,"name":"tag","value":"63"},{"begin":8134,"end":8178,"name":"JUMPDEST"},{"begin":8134,"end":8178,"name":"PUSH","value":"1"},{"begin":8134,"end":8178,"name":"PUSH","value":"0"},{"begin":8134,"end":8178,"name":"SWAP1"},{"begin":8134,"end":8178,"name":"SLOAD"},{"begin":8134,"end":8178,"name":"SWAP1"},{"begin":8134,"end":8178,"name":"PUSH","value":"100"},{"begin":8134,"end":8178,"name":"EXP"},{"begin":8134,"end":8178,"name":"SWAP1"},{"begin":8134,"end":8178,"name":"DIV"},{"begin":8134,"end":8178,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":8134,"end":8178,"name":"AND"},{"begin":8134,"end":8178,"name":"DUP2"},{"begin":8134,"end":8178,"name":"JUMP","value":"[out]"},{"begin":18712,"end":19352,"name":"tag","value":"70"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":19007,"end":19013,"name":"PUSH","value":"0"},{"begin":19016,"end":19017,"name":"DUP1"},{"begin":19007,"end":19017,"name":"SWAP1"},{"begin":19007,"end":19017,"name":"POP"},{"begin":19002,"end":19345,"name":"tag","value":"171"},{"begin":19002,"end":19345,"name":"JUMPDEST"},{"begin":19023,"end":19037,"name":"DUP8"},{"begin":19023,"end":19044,"name":"MLOAD"},{"begin":19019,"end":19020,"name":"DUP2"},{"begin":19019,"end":19044,"name":"LT"},{"begin":19002,"end":19345,"name":"ISZERO"},{"begin":19002,"end":19345,"name":"PUSH [tag]","value":"172"},{"begin":19002,"end":19345,"name":"JUMPI"},{"begin":19066,"end":19333,"name":"PUSH [tag]","value":"174"},{"begin":19094,"end":19108,"name":"DUP9"},{"begin":19109,"end":19110,"name":"DUP3"},{"begin":19094,"end":19111,"name":"DUP2"},{"begin":19094,"end":19111,"name":"MLOAD"},{"begin":19094,"end":19111,"name":"DUP2"},{"begin":19094,"end":19111,"name":"LT"},{"begin":19094,"end":19111,"name":"ISZERO"},{"begin":19094,"end":19111,"name":"ISZERO"},{"begin":19094,"end":19111,"name":"PUSH [tag]","value":"175"},{"begin":19094,"end":19111,"name":"JUMPI"},{"begin":19094,"end":19111,"name":"INVALID"},{"begin":19094,"end":19111,"name":"tag","value":"175"},{"begin":19094,"end":19111,"name":"JUMPDEST"},{"begin":19094,"end":19111,"name":"SWAP1"},{"begin":19094,"end":19111,"name":"PUSH","value":"20"},{"begin":19094,"end":19111,"name":"ADD"},{"begin":19094,"end":19111,"name":"SWAP1"},{"begin":19094,"end":19111,"name":"PUSH","value":"20"},{"begin":19094,"end":19111,"name":"MUL"},{"begin":19094,"end":19111,"name":"ADD"},{"begin":19094,"end":19111,"name":"MLOAD"},{"begin":19130,"end":19141,"name":"DUP9"},{"begin":19142,"end":19143,"name":"DUP4"},{"begin":19130,"end":19144,"name":"DUP2"},{"begin":19130,"end":19144,"name":"MLOAD"},{"begin":19130,"end":19144,"name":"DUP2"},{"begin":19130,"end":19144,"name":"LT"},{"begin":19130,"end":19144,"name":"ISZERO"},{"begin":19130,"end":19144,"name":"ISZERO"},{"begin":19130,"end":19144,"name":"PUSH [tag]","value":"176"},{"begin":19130,"end":19144,"name":"JUMPI"},{"begin":19130,"end":19144,"name":"INVALID"},{"begin":19130,"end":19144,"name":"tag","value":"176"},{"begin":19130,"end":19144,"name":"JUMPDEST"},{"begin":19130,"end":19144,"name":"SWAP1"},{"begin":19130,"end":19144,"name":"PUSH","value":"20"},{"begin":19130,"end":19144,"name":"ADD"},{"begin":19130,"end":19144,"name":"SWAP1"},{"begin":19130,"end":19144,"name":"PUSH","value":"20"},{"begin":19130,"end":19144,"name":"MUL"},{"begin":19130,"end":19144,"name":"ADD"},{"begin":19130,"end":19144,"name":"MLOAD"},{"begin":19163,"end":19184,"name":"DUP9"},{"begin":19185,"end":19186,"name":"DUP5"},{"begin":19163,"end":19187,"name":"DUP2"},{"begin":19163,"end":19187,"name":"MLOAD"},{"begin":19163,"end":19187,"name":"DUP2"},{"begin":19163,"end":19187,"name":"LT"},{"begin":19163,"end":19187,"name":"ISZERO"},{"begin":19163,"end":19187,"name":"ISZERO"},{"begin":19163,"end":19187,"name":"PUSH [tag]","value":"177"},{"begin":19163,"end":19187,"name":"JUMPI"},{"begin":19163,"end":19187,"name":"INVALID"},{"begin":19163,"end":19187,"name":"tag","value":"177"},{"begin":19163,"end":19187,"name":"JUMPDEST"},{"begin":19163,"end":19187,"name":"SWAP1"},{"begin":19163,"end":19187,"name":"PUSH","value":"20"},{"begin":19163,"end":19187,"name":"ADD"},{"begin":19163,"end":19187,"name":"SWAP1"},{"begin":19163,"end":19187,"name":"PUSH","value":"20"},{"begin":19163,"end":19187,"name":"MUL"},{"begin":19163,"end":19187,"name":"ADD"},{"begin":19163,"end":19187,"name":"MLOAD"},{"begin":19206,"end":19249,"name":"DUP9"},{"begin":19268,"end":19269,"name":"DUP9"},{"begin":19270,"end":19271,"name":"DUP7"},{"begin":19268,"end":19272,"name":"DUP2"},{"begin":19268,"end":19272,"name":"MLOAD"},{"begin":19268,"end":19272,"name":"DUP2"},{"begin":19268,"end":19272,"name":"LT"},{"begin":19268,"end":19272,"name":"ISZERO"},{"begin":19268,"end":19272,"name":"ISZERO"},{"begin":19268,"end":19272,"name":"PUSH [tag]","value":"178"},{"begin":19268,"end":19272,"name":"JUMPI"},{"begin":19268,"end":19272,"name":"INVALID"},{"begin":19268,"end":19272,"name":"tag","value":"178"},{"begin":19268,"end":19272,"name":"JUMPDEST"},{"begin":19268,"end":19272,"name":"SWAP1"},{"begin":19268,"end":19272,"name":"PUSH","value":"20"},{"begin":19268,"end":19272,"name":"ADD"},{"begin":19268,"end":19272,"name":"SWAP1"},{"begin":19268,"end":19272,"name":"PUSH","value":"20"},{"begin":19268,"end":19272,"name":"MUL"},{"begin":19268,"end":19272,"name":"ADD"},{"begin":19268,"end":19272,"name":"MLOAD"},{"begin":19291,"end":19292,"name":"DUP9"},{"begin":19293,"end":19294,"name":"DUP8"},{"begin":19291,"end":19295,"name":"DUP2"},{"begin":19291,"end":19295,"name":"MLOAD"},{"begin":19291,"end":19295,"name":"DUP2"},{"begin":19291,"end":19295,"name":"LT"},{"begin":19291,"end":19295,"name":"ISZERO"},{"begin":19291,"end":19295,"name":"ISZERO"},{"begin":19291,"end":19295,"name":"PUSH [tag]","value":"179"},{"begin":19291,"end":19295,"name":"JUMPI"},{"begin":19291,"end":19295,"name":"INVALID"},{"begin":19291,"end":19295,"name":"tag","value":"179"},{"begin":19291,"end":19295,"name":"JUMPDEST"},{"begin":19291,"end":19295,"name":"SWAP1"},{"begin":19291,"end":19295,"name":"PUSH","value":"20"},{"begin":19291,"end":19295,"name":"ADD"},{"begin":19291,"end":19295,"name":"SWAP1"},{"begin":19291,"end":19295,"name":"PUSH","value":"20"},{"begin":19291,"end":19295,"name":"MUL"},{"begin":19291,"end":19295,"name":"ADD"},{"begin":19291,"end":19295,"name":"MLOAD"},{"begin":19314,"end":19315,"name":"DUP9"},{"begin":19316,"end":19317,"name":"DUP9"},{"begin":19314,"end":19318,"name":"DUP2"},{"begin":19314,"end":19318,"name":"MLOAD"},{"begin":19314,"end":19318,"name":"DUP2"},{"begin":19314,"end":19318,"name":"LT"},{"begin":19314,"end":19318,"name":"ISZERO"},{"begin":19314,"end":19318,"name":"ISZERO"},{"begin":19314,"end":19318,"name":"PUSH [tag]","value":"180"},{"begin":19314,"end":19318,"name":"JUMPI"},{"begin":19314,"end":19318,"name":"INVALID"},{"begin":19314,"end":19318,"name":"tag","value":"180"},{"begin":19314,"end":19318,"name":"JUMPDEST"},{"begin":19314,"end":19318,"name":"SWAP1"},{"begin":19314,"end":19318,"name":"PUSH","value":"20"},{"begin":19314,"end":19318,"name":"ADD"},{"begin":19314,"end":19318,"name":"SWAP1"},{"begin":19314,"end":19318,"name":"PUSH","value":"20"},{"begin":19314,"end":19318,"name":"MUL"},{"begin":19314,"end":19318,"name":"ADD"},{"begin":19314,"end":19318,"name":"MLOAD"},{"begin":19066,"end":19075,"name":"PUSH [tag]","value":"80"},{"begin":19066,"end":19333,"name":"JUMP","value":"[in]"},{"begin":19066,"end":19333,"name":"tag","value":"174"},{"begin":19066,"end":19333,"name":"JUMPDEST"},{"begin":19066,"end":19333,"name":"POP"},{"begin":19002,"end":19345,"name":"tag","value":"173"},{"begin":19002,"end":19345,"name":"JUMPDEST"},{"begin":19046,"end":19049,"name":"DUP1"},{"begin":19046,"end":19049,"name":"DUP1"},{"begin":19046,"end":19049,"name":"PUSH","value":"1"},{"begin":19046,"end":19049,"name":"ADD"},{"begin":19046,"end":19049,"name":"SWAP2"},{"begin":19046,"end":19049,"name":"POP"},{"begin":19046,"end":19049,"name":"POP"},{"begin":19002,"end":19345,"name":"PUSH [tag]","value":"171"},{"begin":19002,"end":19345,"name":"JUMP"},{"begin":19002,"end":19345,"name":"tag","value":"172"},{"begin":19002,"end":19345,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"tag","value":"170"},{"begin":18712,"end":19352,"name":"JUMPDEST"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"POP"},{"begin":18712,"end":19352,"name":"JUMP","value":"[out]"},{"begin":22550,"end":22944,"name":"tag","value":"77"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22726,"end":22732,"name":"PUSH","value":"0"},{"begin":22735,"end":22736,"name":"DUP1"},{"begin":22726,"end":22736,"name":"SWAP1"},{"begin":22726,"end":22736,"name":"POP"},{"begin":22721,"end":22937,"name":"tag","value":"182"},{"begin":22721,"end":22937,"name":"JUMPDEST"},{"begin":22742,"end":22756,"name":"DUP4"},{"begin":22742,"end":22763,"name":"MLOAD"},{"begin":22738,"end":22739,"name":"DUP2"},{"begin":22738,"end":22763,"name":"LT"},{"begin":22721,"end":22937,"name":"ISZERO"},{"begin":22721,"end":22937,"name":"PUSH [tag]","value":"183"},{"begin":22721,"end":22937,"name":"JUMPI"},{"begin":22785,"end":22925,"name":"PUSH [tag]","value":"185"},{"begin":22815,"end":22829,"name":"DUP5"},{"begin":22830,"end":22831,"name":"DUP3"},{"begin":22815,"end":22832,"name":"DUP2"},{"begin":22815,"end":22832,"name":"MLOAD"},{"begin":22815,"end":22832,"name":"DUP2"},{"begin":22815,"end":22832,"name":"LT"},{"begin":22815,"end":22832,"name":"ISZERO"},{"begin":22815,"end":22832,"name":"ISZERO"},{"begin":22815,"end":22832,"name":"PUSH [tag]","value":"186"},{"begin":22815,"end":22832,"name":"JUMPI"},{"begin":22815,"end":22832,"name":"INVALID"},{"begin":22815,"end":22832,"name":"tag","value":"186"},{"begin":22815,"end":22832,"name":"JUMPDEST"},{"begin":22815,"end":22832,"name":"SWAP1"},{"begin":22815,"end":22832,"name":"PUSH","value":"20"},{"begin":22815,"end":22832,"name":"ADD"},{"begin":22815,"end":22832,"name":"SWAP1"},{"begin":22815,"end":22832,"name":"PUSH","value":"20"},{"begin":22815,"end":22832,"name":"MUL"},{"begin":22815,"end":22832,"name":"ADD"},{"begin":22815,"end":22832,"name":"MLOAD"},{"begin":22851,"end":22862,"name":"DUP5"},{"begin":22863,"end":22864,"name":"DUP4"},{"begin":22851,"end":22865,"name":"DUP2"},{"begin":22851,"end":22865,"name":"MLOAD"},{"begin":22851,"end":22865,"name":"DUP2"},{"begin":22851,"end":22865,"name":"LT"},{"begin":22851,"end":22865,"name":"ISZERO"},{"begin":22851,"end":22865,"name":"ISZERO"},{"begin":22851,"end":22865,"name":"PUSH [tag]","value":"187"},{"begin":22851,"end":22865,"name":"JUMPI"},{"begin":22851,"end":22865,"name":"INVALID"},{"begin":22851,"end":22865,"name":"tag","value":"187"},{"begin":22851,"end":22865,"name":"JUMPDEST"},{"begin":22851,"end":22865,"name":"SWAP1"},{"begin":22851,"end":22865,"name":"PUSH","value":"20"},{"begin":22851,"end":22865,"name":"ADD"},{"begin":22851,"end":22865,"name":"SWAP1"},{"begin":22851,"end":22865,"name":"PUSH","value":"20"},{"begin":22851,"end":22865,"name":"MUL"},{"begin":22851,"end":22865,"name":"ADD"},{"begin":22851,"end":22865,"name":"MLOAD"},{"begin":22884,"end":22907,"name":"DUP5"},{"begin":22908,"end":22909,"name":"DUP5"},{"begin":22884,"end":22910,"name":"DUP2"},{"begin":22884,"end":22910,"name":"MLOAD"},{"begin":22884,"end":22910,"name":"DUP2"},{"begin":22884,"end":22910,"name":"LT"},{"begin":22884,"end":22910,"name":"ISZERO"},{"begin":22884,"end":22910,"name":"ISZERO"},{"begin":22884,"end":22910,"name":"PUSH [tag]","value":"188"},{"begin":22884,"end":22910,"name":"JUMPI"},{"begin":22884,"end":22910,"name":"INVALID"},{"begin":22884,"end":22910,"name":"tag","value":"188"},{"begin":22884,"end":22910,"name":"JUMPDEST"},{"begin":22884,"end":22910,"name":"SWAP1"},{"begin":22884,"end":22910,"name":"PUSH","value":"20"},{"begin":22884,"end":22910,"name":"ADD"},{"begin":22884,"end":22910,"name":"SWAP1"},{"begin":22884,"end":22910,"name":"PUSH","value":"20"},{"begin":22884,"end":22910,"name":"MUL"},{"begin":22884,"end":22910,"name":"ADD"},{"begin":22884,"end":22910,"name":"MLOAD"},{"begin":22785,"end":22796,"name":"PUSH [tag]","value":"38"},{"begin":22785,"end":22925,"name":"JUMP","value":"[in]"},{"begin":22785,"end":22925,"name":"tag","value":"185"},{"begin":22785,"end":22925,"name":"JUMPDEST"},{"begin":22785,"end":22925,"name":"POP"},{"begin":22721,"end":22937,"name":"tag","value":"184"},{"begin":22721,"end":22937,"name":"JUMPDEST"},{"begin":22765,"end":22768,"name":"DUP1"},{"begin":22765,"end":22768,"name":"DUP1"},{"begin":22765,"end":22768,"name":"PUSH","value":"1"},{"begin":22765,"end":22768,"name":"ADD"},{"begin":22765,"end":22768,"name":"SWAP2"},{"begin":22765,"end":22768,"name":"POP"},{"begin":22765,"end":22768,"name":"POP"},{"begin":22721,"end":22937,"name":"PUSH [tag]","value":"182"},{"begin":22721,"end":22937,"name":"JUMP"},{"begin":22721,"end":22937,"name":"tag","value":"183"},{"begin":22721,"end":22937,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"tag","value":"181"},{"begin":22550,"end":22944,"name":"JUMPDEST"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"POP"},{"begin":22550,"end":22944,"name":"JUMP","value":"[out]"},{"begin":10433,"end":14584,"name":"tag","value":"80"},{"begin":10433,"end":14584,"name":"JUMPDEST"},{"begin":10724,"end":10751,"name":"PUSH","value":"0"},{"begin":10769,"end":10787,"name":"PUSH [tag]","value":"189"},{"begin":10769,"end":10787,"name":"PUSH [tag]","value":"122"},{"begin":10769,"end":10787,"name":"JUMP","value":"[in]"},{"begin":10769,"end":10787,"name":"tag","value":"189"},{"begin":10769,"end":10787,"name":"JUMPDEST"},{"begin":11829,"end":11859,"name":"PUSH","value":"0"},{"begin":12667,"end":12694,"name":"DUP1"},{"begin":12796,"end":12813,"name":"PUSH","value":"0"},{"begin":12824,"end":12841,"name":"DUP1"},{"begin":10790,"end":11314,"name":"PUSH","value":"160"},{"begin":10790,"end":11314,"name":"PUSH","value":"40"},{"begin":10790,"end":11314,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"SWAP1"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":10790,"end":11314,"name":"PUSH","value":"40"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"DUP1"},{"begin":10818,"end":10832,"name":"DUP15"},{"begin":10833,"end":10834,"name":"PUSH","value":"0"},{"begin":10818,"end":10835,"name":"PUSH","value":"5"},{"begin":10818,"end":10835,"name":"DUP2"},{"begin":10818,"end":10835,"name":"LT"},{"begin":10818,"end":10835,"name":"ISZERO"},{"begin":10818,"end":10835,"name":"ISZERO"},{"begin":10818,"end":10835,"name":"PUSH [tag]","value":"191"},{"begin":10818,"end":10835,"name":"JUMPI"},{"begin":10818,"end":10835,"name":"INVALID"},{"begin":10818,"end":10835,"name":"tag","value":"191"},{"begin":10818,"end":10835,"name":"JUMPDEST"},{"begin":10818,"end":10835,"name":"PUSH","value":"20"},{"begin":10818,"end":10835,"name":"MUL"},{"begin":10818,"end":10835,"name":"ADD"},{"begin":10818,"end":10835,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":10790,"end":11314,"name":"AND"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":10857,"end":10871,"name":"DUP15"},{"begin":10872,"end":10873,"name":"PUSH","value":"1"},{"begin":10857,"end":10874,"name":"PUSH","value":"5"},{"begin":10857,"end":10874,"name":"DUP2"},{"begin":10857,"end":10874,"name":"LT"},{"begin":10857,"end":10874,"name":"ISZERO"},{"begin":10857,"end":10874,"name":"ISZERO"},{"begin":10857,"end":10874,"name":"PUSH [tag]","value":"192"},{"begin":10857,"end":10874,"name":"JUMPI"},{"begin":10857,"end":10874,"name":"INVALID"},{"begin":10857,"end":10874,"name":"tag","value":"192"},{"begin":10857,"end":10874,"name":"JUMPDEST"},{"begin":10857,"end":10874,"name":"PUSH","value":"20"},{"begin":10857,"end":10874,"name":"MUL"},{"begin":10857,"end":10874,"name":"ADD"},{"begin":10857,"end":10874,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":10790,"end":11314,"name":"AND"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":10901,"end":10915,"name":"DUP15"},{"begin":10916,"end":10917,"name":"PUSH","value":"2"},{"begin":10901,"end":10918,"name":"PUSH","value":"5"},{"begin":10901,"end":10918,"name":"DUP2"},{"begin":10901,"end":10918,"name":"LT"},{"begin":10901,"end":10918,"name":"ISZERO"},{"begin":10901,"end":10918,"name":"ISZERO"},{"begin":10901,"end":10918,"name":"PUSH [tag]","value":"193"},{"begin":10901,"end":10918,"name":"JUMPI"},{"begin":10901,"end":10918,"name":"INVALID"},{"begin":10901,"end":10918,"name":"tag","value":"193"},{"begin":10901,"end":10918,"name":"JUMPDEST"},{"begin":10901,"end":10918,"name":"PUSH","value":"20"},{"begin":10901,"end":10918,"name":"MUL"},{"begin":10901,"end":10918,"name":"ADD"},{"begin":10901,"end":10918,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":10790,"end":11314,"name":"AND"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":10945,"end":10959,"name":"DUP15"},{"begin":10960,"end":10961,"name":"PUSH","value":"3"},{"begin":10945,"end":10962,"name":"PUSH","value":"5"},{"begin":10945,"end":10962,"name":"DUP2"},{"begin":10945,"end":10962,"name":"LT"},{"begin":10945,"end":10962,"name":"ISZERO"},{"begin":10945,"end":10962,"name":"ISZERO"},{"begin":10945,"end":10962,"name":"PUSH [tag]","value":"194"},{"begin":10945,"end":10962,"name":"JUMPI"},{"begin":10945,"end":10962,"name":"INVALID"},{"begin":10945,"end":10962,"name":"tag","value":"194"},{"begin":10945,"end":10962,"name":"JUMPDEST"},{"begin":10945,"end":10962,"name":"PUSH","value":"20"},{"begin":10945,"end":10962,"name":"MUL"},{"begin":10945,"end":10962,"name":"ADD"},{"begin":10945,"end":10962,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":10790,"end":11314,"name":"AND"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":10991,"end":11005,"name":"DUP15"},{"begin":11006,"end":11007,"name":"PUSH","value":"4"},{"begin":10991,"end":11008,"name":"PUSH","value":"5"},{"begin":10991,"end":11008,"name":"DUP2"},{"begin":10991,"end":11008,"name":"LT"},{"begin":10991,"end":11008,"name":"ISZERO"},{"begin":10991,"end":11008,"name":"ISZERO"},{"begin":10991,"end":11008,"name":"PUSH [tag]","value":"195"},{"begin":10991,"end":11008,"name":"JUMPI"},{"begin":10991,"end":11008,"name":"INVALID"},{"begin":10991,"end":11008,"name":"tag","value":"195"},{"begin":10991,"end":11008,"name":"JUMPDEST"},{"begin":10991,"end":11008,"name":"PUSH","value":"20"},{"begin":10991,"end":11008,"name":"MUL"},{"begin":10991,"end":11008,"name":"ADD"},{"begin":10991,"end":11008,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":10790,"end":11314,"name":"AND"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":11041,"end":11052,"name":"DUP14"},{"begin":11053,"end":11054,"name":"PUSH","value":"0"},{"begin":11041,"end":11055,"name":"PUSH","value":"6"},{"begin":11041,"end":11055,"name":"DUP2"},{"begin":11041,"end":11055,"name":"LT"},{"begin":11041,"end":11055,"name":"ISZERO"},{"begin":11041,"end":11055,"name":"ISZERO"},{"begin":11041,"end":11055,"name":"PUSH [tag]","value":"196"},{"begin":11041,"end":11055,"name":"JUMPI"},{"begin":11041,"end":11055,"name":"INVALID"},{"begin":11041,"end":11055,"name":"tag","value":"196"},{"begin":11041,"end":11055,"name":"JUMPDEST"},{"begin":11041,"end":11055,"name":"PUSH","value":"20"},{"begin":11041,"end":11055,"name":"MUL"},{"begin":11041,"end":11055,"name":"ADD"},{"begin":11041,"end":11055,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":11088,"end":11099,"name":"DUP14"},{"begin":11100,"end":11101,"name":"PUSH","value":"1"},{"begin":11088,"end":11102,"name":"PUSH","value":"6"},{"begin":11088,"end":11102,"name":"DUP2"},{"begin":11088,"end":11102,"name":"LT"},{"begin":11088,"end":11102,"name":"ISZERO"},{"begin":11088,"end":11102,"name":"ISZERO"},{"begin":11088,"end":11102,"name":"PUSH [tag]","value":"197"},{"begin":11088,"end":11102,"name":"JUMPI"},{"begin":11088,"end":11102,"name":"INVALID"},{"begin":11088,"end":11102,"name":"tag","value":"197"},{"begin":11088,"end":11102,"name":"JUMPDEST"},{"begin":11088,"end":11102,"name":"PUSH","value":"20"},{"begin":11088,"end":11102,"name":"MUL"},{"begin":11088,"end":11102,"name":"ADD"},{"begin":11088,"end":11102,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":11127,"end":11138,"name":"DUP14"},{"begin":11139,"end":11140,"name":"PUSH","value":"2"},{"begin":11127,"end":11141,"name":"PUSH","value":"6"},{"begin":11127,"end":11141,"name":"DUP2"},{"begin":11127,"end":11141,"name":"LT"},{"begin":11127,"end":11141,"name":"ISZERO"},{"begin":11127,"end":11141,"name":"ISZERO"},{"begin":11127,"end":11141,"name":"PUSH [tag]","value":"198"},{"begin":11127,"end":11141,"name":"JUMPI"},{"begin":11127,"end":11141,"name":"INVALID"},{"begin":11127,"end":11141,"name":"tag","value":"198"},{"begin":11127,"end":11141,"name":"JUMPDEST"},{"begin":11127,"end":11141,"name":"PUSH","value":"20"},{"begin":11127,"end":11141,"name":"MUL"},{"begin":11127,"end":11141,"name":"ADD"},{"begin":11127,"end":11141,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":11166,"end":11177,"name":"DUP14"},{"begin":11178,"end":11179,"name":"PUSH","value":"3"},{"begin":11166,"end":11180,"name":"PUSH","value":"6"},{"begin":11166,"end":11180,"name":"DUP2"},{"begin":11166,"end":11180,"name":"LT"},{"begin":11166,"end":11180,"name":"ISZERO"},{"begin":11166,"end":11180,"name":"ISZERO"},{"begin":11166,"end":11180,"name":"PUSH [tag]","value":"199"},{"begin":11166,"end":11180,"name":"JUMPI"},{"begin":11166,"end":11180,"name":"INVALID"},{"begin":11166,"end":11180,"name":"tag","value":"199"},{"begin":11166,"end":11180,"name":"JUMPDEST"},{"begin":11166,"end":11180,"name":"PUSH","value":"20"},{"begin":11166,"end":11180,"name":"MUL"},{"begin":11166,"end":11180,"name":"ADD"},{"begin":11166,"end":11180,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":11221,"end":11232,"name":"DUP14"},{"begin":11233,"end":11234,"name":"PUSH","value":"4"},{"begin":11221,"end":11235,"name":"PUSH","value":"6"},{"begin":11221,"end":11235,"name":"DUP2"},{"begin":11221,"end":11235,"name":"LT"},{"begin":11221,"end":11235,"name":"ISZERO"},{"begin":11221,"end":11235,"name":"ISZERO"},{"begin":11221,"end":11235,"name":"PUSH [tag]","value":"200"},{"begin":11221,"end":11235,"name":"JUMPI"},{"begin":11221,"end":11235,"name":"INVALID"},{"begin":11221,"end":11235,"name":"tag","value":"200"},{"begin":11221,"end":11235,"name":"JUMPDEST"},{"begin":11221,"end":11235,"name":"PUSH","value":"20"},{"begin":11221,"end":11235,"name":"MUL"},{"begin":11221,"end":11235,"name":"ADD"},{"begin":11221,"end":11235,"name":"MLOAD"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"PUSH","value":"20"},{"begin":10790,"end":11314,"name":"ADD"},{"begin":11261,"end":11302,"name":"PUSH [tag]","value":"201"},{"begin":11274,"end":11288,"name":"DUP16"},{"begin":11290,"end":11301,"name":"DUP16"},{"begin":11261,"end":11273,"name":"PUSH [tag]","value":"83"},{"begin":11261,"end":11302,"name":"JUMP","value":"[in]"},{"begin":11261,"end":11302,"name":"tag","value":"201"},{"begin":11261,"end":11302,"name":"JUMPDEST"},{"begin":10790,"end":11314,"name":"PUSH","value":"0"},{"begin":10790,"end":11314,"name":"NOT"},{"begin":10790,"end":11314,"name":"AND"},{"begin":10790,"end":11314,"name":"DUP2"},{"begin":10790,"end":11314,"name":"MSTORE"},{"begin":10790,"end":11314,"name":"POP"},{"begin":10769,"end":11314,"name":"SWAP5"},{"begin":10769,"end":11314,"name":"POP"},{"begin":11358,"end":11359,"name":"PUSH","value":"0"},{"begin":11335,"end":11360,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":11335,"end":11360,"name":"AND"},{"begin":11335,"end":11340,"name":"DUP6"},{"begin":11335,"end":11346,"name":"PUSH","value":"20"},{"begin":11335,"end":11346,"name":"ADD"},{"begin":11335,"end":11346,"name":"MLOAD"},{"begin":11335,"end":11360,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":11335,"end":11360,"name":"AND"},{"begin":11335,"end":11360,"name":"EQ"},{"begin":11335,"end":11389,"name":"DUP1"},{"begin":11335,"end":11389,"name":"PUSH [tag]","value":"202"},{"begin":11335,"end":11389,"name":"JUMPI"},{"begin":11335,"end":11389,"name":"POP"},{"begin":11379,"end":11389,"name":"CALLER"},{"begin":11364,"end":11389,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":11364,"end":11389,"name":"AND"},{"begin":11364,"end":11369,"name":"DUP6"},{"begin":11364,"end":11375,"name":"PUSH","value":"20"},{"begin":11364,"end":11375,"name":"ADD"},{"begin":11364,"end":11375,"name":"MLOAD"},{"begin":11364,"end":11389,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":11364,"end":11389,"name":"AND"},{"begin":11364,"end":11389,"name":"EQ"},{"begin":11335,"end":11389,"name":"tag","value":"202"},{"begin":11335,"end":11389,"name":"JUMPDEST"},{"begin":11327,"end":11390,"name":"ISZERO"},{"begin":11327,"end":11390,"name":"ISZERO"},{"begin":11327,"end":11390,"name":"PUSH [tag]","value":"203"},{"begin":11327,"end":11390,"name":"JUMPI"},{"begin":11327,"end":11390,"name":"PUSH","value":"0"},{"begin":11327,"end":11390,"name":"DUP1"},{"begin":11327,"end":11390,"name":"REVERT"},{"begin":11327,"end":11390,"name":"tag","value":"203"},{"begin":11327,"end":11390,"name":"JUMPDEST"},{"begin":11434,"end":11435,"name":"PUSH","value":"0"},{"begin":11409,"end":11414,"name":"DUP6"},{"begin":11409,"end":11431,"name":"PUSH","value":"A0"},{"begin":11409,"end":11431,"name":"ADD"},{"begin":11409,"end":11431,"name":"MLOAD"},{"begin":11409,"end":11435,"name":"GT"},{"begin":11409,"end":11465,"name":"DUP1"},{"begin":11409,"end":11465,"name":"ISZERO"},{"begin":11409,"end":11465,"name":"PUSH [tag]","value":"204"},{"begin":11409,"end":11465,"name":"JUMPI"},{"begin":11409,"end":11465,"name":"POP"},{"begin":11464,"end":11465,"name":"PUSH","value":"0"},{"begin":11439,"end":11444,"name":"DUP6"},{"begin":11439,"end":11461,"name":"PUSH","value":"C0"},{"begin":11439,"end":11461,"name":"ADD"},{"begin":11439,"end":11461,"name":"MLOAD"},{"begin":11439,"end":11465,"name":"GT"},{"begin":11409,"end":11465,"name":"tag","value":"204"},{"begin":11409,"end":11465,"name":"JUMPDEST"},{"begin":11409,"end":11493,"name":"DUP1"},{"begin":11409,"end":11493,"name":"ISZERO"},{"begin":11409,"end":11493,"name":"PUSH [tag]","value":"205"},{"begin":11409,"end":11493,"name":"JUMPI"},{"begin":11409,"end":11493,"name":"POP"},{"begin":11492,"end":11493,"name":"PUSH","value":"0"},{"begin":11469,"end":11489,"name":"DUP12"},{"begin":11469,"end":11493,"name":"GT"},{"begin":11409,"end":11493,"name":"tag","value":"205"},{"begin":11409,"end":11493,"name":"JUMPDEST"},{"begin":11401,"end":11494,"name":"ISZERO"},{"begin":11401,"end":11494,"name":"ISZERO"},{"begin":11401,"end":11494,"name":"PUSH [tag]","value":"206"},{"begin":11401,"end":11494,"name":"JUMPI"},{"begin":11401,"end":11494,"name":"PUSH","value":"0"},{"begin":11401,"end":11494,"name":"DUP1"},{"begin":11401,"end":11494,"name":"REVERT"},{"begin":11401,"end":11494,"name":"tag","value":"206"},{"begin":11401,"end":11494,"name":"JUMPDEST"},{"begin":11513,"end":11644,"name":"PUSH [tag]","value":"207"},{"begin":11544,"end":11549,"name":"DUP6"},{"begin":11544,"end":11555,"name":"PUSH","value":"0"},{"begin":11544,"end":11555,"name":"ADD"},{"begin":11544,"end":11555,"name":"MLOAD"},{"begin":11570,"end":11575,"name":"DUP7"},{"begin":11570,"end":11585,"name":"PUSH","value":"140"},{"begin":11570,"end":11585,"name":"ADD"},{"begin":11570,"end":11585,"name":"MLOAD"},{"begin":11600,"end":11601,"name":"DUP12"},{"begin":11616,"end":11617,"name":"DUP12"},{"begin":11632,"end":11633,"name":"DUP12"},{"begin":11513,"end":11529,"name":"PUSH [tag]","value":"57"},{"begin":11513,"end":11644,"name":"JUMP","value":"[in]"},{"begin":11513,"end":11644,"name":"tag","value":"207"},{"begin":11513,"end":11644,"name":"JUMPDEST"},{"begin":11505,"end":11645,"name":"ISZERO"},{"begin":11505,"end":11645,"name":"ISZERO"},{"begin":11505,"end":11645,"name":"PUSH [tag]","value":"208"},{"begin":11505,"end":11645,"name":"JUMPI"},{"begin":11505,"end":11645,"name":"PUSH","value":"0"},{"begin":11505,"end":11645,"name":"DUP1"},{"begin":11505,"end":11645,"name":"REVERT"},{"begin":11505,"end":11645,"name":"tag","value":"208"},{"begin":11505,"end":11645,"name":"JUMPDEST"},{"begin":11681,"end":11686,"name":"DUP5"},{"begin":11681,"end":11711,"name":"PUSH","value":"120"},{"begin":11681,"end":11711,"name":"ADD"},{"begin":11681,"end":11711,"name":"MLOAD"},{"begin":11662,"end":11677,"name":"TIMESTAMP"},{"begin":11662,"end":11711,"name":"LT"},{"begin":11662,"end":11711,"name":"ISZERO"},{"begin":11658,"end":11817,"name":"ISZERO"},{"begin":11658,"end":11817,"name":"PUSH [tag]","value":"209"},{"begin":11658,"end":11817,"name":"JUMPI"},{"begin":11766,"end":11771,"name":"DUP5"},{"begin":11766,"end":11781,"name":"PUSH","value":"140"},{"begin":11766,"end":11781,"name":"ADD"},{"begin":11766,"end":11781,"name":"MLOAD"},{"begin":11728,"end":11782,"name":"PUSH","value":"0"},{"begin":11728,"end":11782,"name":"NOT"},{"begin":11728,"end":11782,"name":"AND"},{"begin":11743,"end":11763,"name":"PUSH","value":"0"},{"begin":11737,"end":11764,"name":"PUSH","value":"3"},{"begin":11737,"end":11764,"name":"DUP2"},{"begin":11737,"end":11764,"name":"GT"},{"begin":11737,"end":11764,"name":"ISZERO"},{"begin":11737,"end":11764,"name":"PUSH [tag]","value":"210"},{"begin":11737,"end":11764,"name":"JUMPI"},{"begin":11737,"end":11764,"name":"INVALID"},{"begin":11737,"end":11764,"name":"tag","value":"210"},{"begin":11737,"end":11764,"name":"JUMPDEST"},{"begin":11728,"end":11782,"name":"PUSH","value":"FF"},{"begin":11728,"end":11782,"name":"AND"},{"begin":11728,"end":11782,"name":"PUSH","value":"36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90"},{"begin":11728,"end":11782,"name":"PUSH","value":"40"},{"begin":11728,"end":11782,"name":"MLOAD"},{"begin":11728,"end":11782,"name":"PUSH","value":"40"},{"begin":11728,"end":11782,"name":"MLOAD"},{"begin":11728,"end":11782,"name":"DUP1"},{"begin":11728,"end":11782,"name":"SWAP2"},{"begin":11728,"end":11782,"name":"SUB"},{"begin":11728,"end":11782,"name":"SWAP1"},{"begin":11728,"end":11782,"name":"LOG3"},{"begin":11804,"end":11805,"name":"PUSH","value":"0"},{"begin":11797,"end":11805,"name":"SWAP6"},{"begin":11797,"end":11805,"name":"POP"},{"begin":11797,"end":11805,"name":"PUSH [tag]","value":"190"},{"begin":11797,"end":11805,"name":"JUMP"},{"begin":11658,"end":11817,"name":"tag","value":"209"},{"begin":11658,"end":11817,"name":"JUMPDEST"},{"begin":11862,"end":11942,"name":"PUSH [tag]","value":"211"},{"begin":11870,"end":11875,"name":"DUP6"},{"begin":11870,"end":11892,"name":"PUSH","value":"C0"},{"begin":11870,"end":11892,"name":"ADD"},{"begin":11870,"end":11892,"name":"MLOAD"},{"begin":11894,"end":11941,"name":"PUSH [tag]","value":"212"},{"begin":11925,"end":11930,"name":"DUP8"},{"begin":11925,"end":11940,"name":"PUSH","value":"140"},{"begin":11925,"end":11940,"name":"ADD"},{"begin":11925,"end":11940,"name":"MLOAD"},{"begin":11894,"end":11924,"name":"PUSH [tag]","value":"54"},{"begin":11894,"end":11941,"name":"JUMP","value":"[in]"},{"begin":11894,"end":11941,"name":"tag","value":"212"},{"begin":11894,"end":11941,"name":"JUMPDEST"},{"begin":11862,"end":11869,"name":"PUSH [tag]","value":"115"},{"begin":11862,"end":11942,"name":"JUMP","value":"[in]"},{"begin":11862,"end":11942,"name":"tag","value":"211"},{"begin":11862,"end":11942,"name":"JUMPDEST"},{"begin":11829,"end":11942,"name":"SWAP4"},{"begin":11829,"end":11942,"name":"POP"},{"begin":11978,"end":12033,"name":"PUSH [tag]","value":"213"},{"begin":11985,"end":12005,"name":"DUP12"},{"begin":12007,"end":12032,"name":"DUP6"},{"begin":11978,"end":11984,"name":"PUSH [tag]","value":"144"},{"begin":11978,"end":12033,"name":"JUMP","value":"[in]"},{"begin":11978,"end":12033,"name":"tag","value":"213"},{"begin":11978,"end":12033,"name":"JUMPDEST"},{"begin":11953,"end":12033,"name":"SWAP6"},{"begin":11953,"end":12033,"name":"POP"},{"begin":12074,"end":12075,"name":"PUSH","value":"0"},{"begin":12048,"end":12070,"name":"DUP7"},{"begin":12048,"end":12075,"name":"EQ"},{"begin":12044,"end":12199,"name":"ISZERO"},{"begin":12044,"end":12199,"name":"PUSH [tag]","value":"214"},{"begin":12044,"end":12199,"name":"JUMPI"},{"begin":12148,"end":12153,"name":"DUP5"},{"begin":12148,"end":12163,"name":"PUSH","value":"140"},{"begin":12148,"end":12163,"name":"ADD"},{"begin":12148,"end":12163,"name":"MLOAD"},{"begin":12092,"end":12164,"name":"PUSH","value":"0"},{"begin":12092,"end":12164,"name":"NOT"},{"begin":12092,"end":12164,"name":"AND"},{"begin":12107,"end":12145,"name":"PUSH","value":"1"},{"begin":12101,"end":12146,"name":"PUSH","value":"3"},{"begin":12101,"end":12146,"name":"DUP2"},{"begin":12101,"end":12146,"name":"GT"},{"begin":12101,"end":12146,"name":"ISZERO"},{"begin":12101,"end":12146,"name":"PUSH [tag]","value":"215"},{"begin":12101,"end":12146,"name":"JUMPI"},{"begin":12101,"end":12146,"name":"INVALID"},{"begin":12101,"end":12146,"name":"tag","value":"215"},{"begin":12101,"end":12146,"name":"JUMPDEST"},{"begin":12092,"end":12164,"name":"PUSH","value":"FF"},{"begin":12092,"end":12164,"name":"AND"},{"begin":12092,"end":12164,"name":"PUSH","value":"36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90"},{"begin":12092,"end":12164,"name":"PUSH","value":"40"},{"begin":12092,"end":12164,"name":"MLOAD"},{"begin":12092,"end":12164,"name":"PUSH","value":"40"},{"begin":12092,"end":12164,"name":"MLOAD"},{"begin":12092,"end":12164,"name":"DUP1"},{"begin":12092,"end":12164,"name":"SWAP2"},{"begin":12092,"end":12164,"name":"SUB"},{"begin":12092,"end":12164,"name":"SWAP1"},{"begin":12092,"end":12164,"name":"LOG3"},{"begin":12186,"end":12187,"name":"PUSH","value":"0"},{"begin":12179,"end":12187,"name":"SWAP6"},{"begin":12179,"end":12187,"name":"POP"},{"begin":12179,"end":12187,"name":"PUSH [tag]","value":"190"},{"begin":12179,"end":12187,"name":"JUMP"},{"begin":12044,"end":12199,"name":"tag","value":"214"},{"begin":12044,"end":12199,"name":"JUMPDEST"},{"begin":12215,"end":12302,"name":"PUSH [tag]","value":"216"},{"begin":12231,"end":12253,"name":"DUP7"},{"begin":12255,"end":12260,"name":"DUP7"},{"begin":12255,"end":12277,"name":"PUSH","value":"C0"},{"begin":12255,"end":12277,"name":"ADD"},{"begin":12255,"end":12277,"name":"MLOAD"},{"begin":12279,"end":12284,"name":"DUP8"},{"begin":12279,"end":12301,"name":"PUSH","value":"A0"},{"begin":12279,"end":12301,"name":"ADD"},{"begin":12279,"end":12301,"name":"MLOAD"},{"begin":12215,"end":12230,"name":"PUSH [tag]","value":"22"},{"begin":12215,"end":12302,"name":"JUMP","value":"[in]"},{"begin":12215,"end":12302,"name":"tag","value":"216"},{"begin":12215,"end":12302,"name":"JUMPDEST"},{"begin":12211,"end":12419,"name":"ISZERO"},{"begin":12211,"end":12419,"name":"PUSH [tag]","value":"217"},{"begin":12211,"end":12419,"name":"JUMPI"},{"begin":12368,"end":12373,"name":"DUP5"},{"begin":12368,"end":12383,"name":"PUSH","value":"140"},{"begin":12368,"end":12383,"name":"ADD"},{"begin":12368,"end":12383,"name":"MLOAD"},{"begin":12319,"end":12384,"name":"PUSH","value":"0"},{"begin":12319,"end":12384,"name":"NOT"},{"begin":12319,"end":12384,"name":"AND"},{"begin":12334,"end":12365,"name":"PUSH","value":"2"},{"begin":12328,"end":12366,"name":"PUSH","value":"3"},{"begin":12328,"end":12366,"name":"DUP2"},{"begin":12328,"end":12366,"name":"GT"},{"begin":12328,"end":12366,"name":"ISZERO"},{"begin":12328,"end":12366,"name":"PUSH [tag]","value":"218"},{"begin":12328,"end":12366,"name":"JUMPI"},{"begin":12328,"end":12366,"name":"INVALID"},{"begin":12328,"end":12366,"name":"tag","value":"218"},{"begin":12328,"end":12366,"name":"JUMPDEST"},{"begin":12319,"end":12384,"name":"PUSH","value":"FF"},{"begin":12319,"end":12384,"name":"AND"},{"begin":12319,"end":12384,"name":"PUSH","value":"36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90"},{"begin":12319,"end":12384,"name":"PUSH","value":"40"},{"begin":12319,"end":12384,"name":"MLOAD"},{"begin":12319,"end":12384,"name":"PUSH","value":"40"},{"begin":12319,"end":12384,"name":"MLOAD"},{"begin":12319,"end":12384,"name":"DUP1"},{"begin":12319,"end":12384,"name":"SWAP2"},{"begin":12319,"end":12384,"name":"SUB"},{"begin":12319,"end":12384,"name":"SWAP1"},{"begin":12319,"end":12384,"name":"LOG3"},{"begin":12406,"end":12407,"name":"PUSH","value":"0"},{"begin":12399,"end":12407,"name":"SWAP6"},{"begin":12399,"end":12407,"name":"POP"},{"begin":12399,"end":12407,"name":"PUSH [tag]","value":"190"},{"begin":12399,"end":12407,"name":"JUMP"},{"begin":12211,"end":12419,"name":"tag","value":"217"},{"begin":12211,"end":12419,"name":"JUMPDEST"},{"begin":12436,"end":12479,"name":"DUP10"},{"begin":12435,"end":12479,"name":"ISZERO"},{"begin":12435,"end":12529,"name":"DUP1"},{"begin":12435,"end":12529,"name":"ISZERO"},{"begin":12435,"end":12529,"name":"PUSH [tag]","value":"219"},{"begin":12435,"end":12529,"name":"JUMPI"},{"begin":12435,"end":12529,"name":"POP"},{"begin":12484,"end":12529,"name":"PUSH [tag]","value":"220"},{"begin":12499,"end":12504,"name":"DUP6"},{"begin":12506,"end":12528,"name":"DUP8"},{"begin":12484,"end":12498,"name":"PUSH [tag]","value":"221"},{"begin":12484,"end":12529,"name":"JUMP","value":"[in]"},{"begin":12484,"end":12529,"name":"tag","value":"220"},{"begin":12484,"end":12529,"name":"JUMPDEST"},{"begin":12483,"end":12529,"name":"ISZERO"},{"begin":12435,"end":12529,"name":"tag","value":"219"},{"begin":12435,"end":12529,"name":"JUMPDEST"},{"begin":12431,"end":12655,"name":"ISZERO"},{"begin":12431,"end":12655,"name":"PUSH [tag]","value":"222"},{"begin":12431,"end":12655,"name":"JUMPI"},{"begin":12604,"end":12609,"name":"DUP5"},{"begin":12604,"end":12619,"name":"PUSH","value":"140"},{"begin":12604,"end":12619,"name":"ADD"},{"begin":12604,"end":12619,"name":"MLOAD"},{"begin":12546,"end":12620,"name":"PUSH","value":"0"},{"begin":12546,"end":12620,"name":"NOT"},{"begin":12546,"end":12620,"name":"AND"},{"begin":12561,"end":12601,"name":"PUSH","value":"3"},{"begin":12555,"end":12602,"name":"DUP1"},{"begin":12555,"end":12602,"name":"DUP2"},{"begin":12555,"end":12602,"name":"GT"},{"begin":12555,"end":12602,"name":"ISZERO"},{"begin":12555,"end":12602,"name":"PUSH [tag]","value":"223"},{"begin":12555,"end":12602,"name":"JUMPI"},{"begin":12555,"end":12602,"name":"INVALID"},{"begin":12555,"end":12602,"name":"tag","value":"223"},{"begin":12555,"end":12602,"name":"JUMPDEST"},{"begin":12546,"end":12620,"name":"PUSH","value":"FF"},{"begin":12546,"end":12620,"name":"AND"},{"begin":12546,"end":12620,"name":"PUSH","value":"36D86C59E00BD73DC19BA3ADFE068E4B64AC7E92BE35546ADEDDF1B956A87E90"},{"begin":12546,"end":12620,"name":"PUSH","value":"40"},{"begin":12546,"end":12620,"name":"MLOAD"},{"begin":12546,"end":12620,"name":"PUSH","value":"40"},{"begin":12546,"end":12620,"name":"MLOAD"},{"begin":12546,"end":12620,"name":"DUP1"},{"begin":12546,"end":12620,"name":"SWAP2"},{"begin":12546,"end":12620,"name":"SUB"},{"begin":12546,"end":12620,"name":"SWAP1"},{"begin":12546,"end":12620,"name":"LOG3"},{"begin":12642,"end":12643,"name":"PUSH","value":"0"},{"begin":12635,"end":12643,"name":"SWAP6"},{"begin":12635,"end":12643,"name":"POP"},{"begin":12635,"end":12643,"name":"PUSH [tag]","value":"190"},{"begin":12635,"end":12643,"name":"JUMP"},{"begin":12431,"end":12655,"name":"tag","value":"222"},{"begin":12431,"end":12655,"name":"JUMPDEST"},{"begin":12697,"end":12785,"name":"PUSH [tag]","value":"224"},{"begin":12714,"end":12736,"name":"DUP7"},{"begin":12738,"end":12743,"name":"DUP7"},{"begin":12738,"end":12760,"name":"PUSH","value":"C0"},{"begin":12738,"end":12760,"name":"ADD"},{"begin":12738,"end":12760,"name":"MLOAD"},{"begin":12762,"end":12767,"name":"DUP8"},{"begin":12762,"end":12784,"name":"PUSH","value":"A0"},{"begin":12762,"end":12784,"name":"ADD"},{"begin":12762,"end":12784,"name":"MLOAD"},{"begin":12697,"end":12713,"name":"PUSH [tag]","value":"60"},{"begin":12697,"end":12785,"name":"JUMP","value":"[in]"},{"begin":12697,"end":12785,"name":"tag","value":"224"},{"begin":12697,"end":12785,"name":"JUMPDEST"},{"begin":12667,"end":12785,"name":"SWAP3"},{"begin":12667,"end":12785,"name":"POP"},{"begin":12878,"end":12934,"name":"PUSH [tag]","value":"225"},{"begin":12886,"end":12892,"name":"PUSH","value":"2"},{"begin":12886,"end":12909,"name":"PUSH","value":"0"},{"begin":12893,"end":12898,"name":"DUP8"},{"begin":12893,"end":12908,"name":"PUSH","value":"140"},{"begin":12893,"end":12908,"name":"ADD"},{"begin":12893,"end":12908,"name":"MLOAD"},{"begin":12886,"end":12909,"name":"PUSH","value":"0"},{"begin":12886,"end":12909,"name":"NOT"},{"begin":12886,"end":12909,"name":"AND"},{"begin":12886,"end":12909,"name":"PUSH","value":"0"},{"begin":12886,"end":12909,"name":"NOT"},{"begin":12886,"end":12909,"name":"AND"},{"begin":12886,"end":12909,"name":"DUP2"},{"begin":12886,"end":12909,"name":"MSTORE"},{"begin":12886,"end":12909,"name":"PUSH","value":"20"},{"begin":12886,"end":12909,"name":"ADD"},{"begin":12886,"end":12909,"name":"SWAP1"},{"begin":12886,"end":12909,"name":"DUP2"},{"begin":12886,"end":12909,"name":"MSTORE"},{"begin":12886,"end":12909,"name":"PUSH","value":"20"},{"begin":12886,"end":12909,"name":"ADD"},{"begin":12886,"end":12909,"name":"PUSH","value":"0"},{"begin":12886,"end":12909,"name":"KECCAK256"},{"begin":12886,"end":12909,"name":"SLOAD"},{"begin":12911,"end":12933,"name":"DUP8"},{"begin":12878,"end":12885,"name":"PUSH [tag]","value":"119"},{"begin":12878,"end":12934,"name":"JUMP","value":"[in]"},{"begin":12878,"end":12934,"name":"tag","value":"225"},{"begin":12878,"end":12934,"name":"JUMPDEST"},{"begin":12852,"end":12858,"name":"PUSH","value":"2"},{"begin":12852,"end":12875,"name":"PUSH","value":"0"},{"begin":12859,"end":12864,"name":"DUP8"},{"begin":12859,"end":12874,"name":"PUSH","value":"140"},{"begin":12859,"end":12874,"name":"ADD"},{"begin":12859,"end":12874,"name":"MLOAD"},{"begin":12852,"end":12875,"name":"PUSH","value":"0"},{"begin":12852,"end":12875,"name":"NOT"},{"begin":12852,"end":12875,"name":"AND"},{"begin":12852,"end":12875,"name":"PUSH","value":"0"},{"begin":12852,"end":12875,"name":"NOT"},{"begin":12852,"end":12875,"name":"AND"},{"begin":12852,"end":12875,"name":"DUP2"},{"begin":12852,"end":12875,"name":"MSTORE"},{"begin":12852,"end":12875,"name":"PUSH","value":"20"},{"begin":12852,"end":12875,"name":"ADD"},{"begin":12852,"end":12875,"name":"SWAP1"},{"begin":12852,"end":12875,"name":"DUP2"},{"begin":12852,"end":12875,"name":"MSTORE"},{"begin":12852,"end":12875,"name":"PUSH","value":"20"},{"begin":12852,"end":12875,"name":"ADD"},{"begin":12852,"end":12875,"name":"PUSH","value":"0"},{"begin":12852,"end":12875,"name":"KECCAK256"},{"begin":12852,"end":12934,"name":"DUP2"},{"begin":12852,"end":12934,"name":"SWAP1"},{"begin":12852,"end":12934,"name":"SSTORE"},{"begin":12852,"end":12934,"name":"POP"},{"begin":12953,"end":13112,"name":"PUSH [tag]","value":"226"},{"begin":12997,"end":13002,"name":"DUP6"},{"begin":12997,"end":13013,"name":"PUSH","value":"40"},{"begin":12997,"end":13013,"name":"ADD"},{"begin":12997,"end":13013,"name":"MLOAD"},{"begin":13028,"end":13033,"name":"DUP7"},{"begin":13028,"end":13039,"name":"PUSH","value":"0"},{"begin":13028,"end":13039,"name":"ADD"},{"begin":13028,"end":13039,"name":"MLOAD"},{"begin":13054,"end":13064,"name":"CALLER"},{"begin":13079,"end":13101,"name":"DUP7"},{"begin":12953,"end":12982,"name":"PUSH [tag]","value":"227"},{"begin":12953,"end":13112,"name":"JUMP","value":"[in]"},{"begin":12953,"end":13112,"name":"tag","value":"226"},{"begin":12953,"end":13112,"name":"JUMPDEST"},{"begin":12945,"end":13113,"name":"ISZERO"},{"begin":12945,"end":13113,"name":"ISZERO"},{"begin":12945,"end":13113,"name":"PUSH [tag]","value":"228"},{"begin":12945,"end":13113,"name":"JUMPI"},{"begin":12945,"end":13113,"name":"PUSH","value":"0"},{"begin":12945,"end":13113,"name":"DUP1"},{"begin":12945,"end":13113,"name":"REVERT"},{"begin":12945,"end":13113,"name":"tag","value":"228"},{"begin":12945,"end":13113,"name":"JUMPDEST"},{"begin":13132,"end":13291,"name":"PUSH [tag]","value":"229"},{"begin":13176,"end":13181,"name":"DUP6"},{"begin":13176,"end":13192,"name":"PUSH","value":"60"},{"begin":13176,"end":13192,"name":"ADD"},{"begin":13176,"end":13192,"name":"MLOAD"},{"begin":13207,"end":13217,"name":"CALLER"},{"begin":13232,"end":13237,"name":"DUP8"},{"begin":13232,"end":13243,"name":"PUSH","value":"0"},{"begin":13232,"end":13243,"name":"ADD"},{"begin":13232,"end":13243,"name":"MLOAD"},{"begin":13258,"end":13280,"name":"DUP10"},{"begin":13132,"end":13161,"name":"PUSH [tag]","value":"227"},{"begin":13132,"end":13291,"name":"JUMP","value":"[in]"},{"begin":13132,"end":13291,"name":"tag","value":"229"},{"begin":13132,"end":13291,"name":"JUMPDEST"},{"begin":13124,"end":13292,"name":"ISZERO"},{"begin":13124,"end":13292,"name":"ISZERO"},{"begin":13124,"end":13292,"name":"PUSH [tag]","value":"230"},{"begin":13124,"end":13292,"name":"JUMPI"},{"begin":13124,"end":13292,"name":"PUSH","value":"0"},{"begin":13124,"end":13292,"name":"DUP1"},{"begin":13124,"end":13292,"name":"REVERT"},{"begin":13124,"end":13292,"name":"tag","value":"230"},{"begin":13124,"end":13292,"name":"JUMPDEST"},{"begin":13337,"end":13338,"name":"PUSH","value":"0"},{"begin":13307,"end":13339,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":13307,"end":13339,"name":"AND"},{"begin":13307,"end":13312,"name":"DUP6"},{"begin":13307,"end":13325,"name":"PUSH","value":"80"},{"begin":13307,"end":13325,"name":"ADD"},{"begin":13307,"end":13325,"name":"MLOAD"},{"begin":13307,"end":13339,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":13307,"end":13339,"name":"AND"},{"begin":13307,"end":13339,"name":"EQ"},{"begin":13307,"end":13339,"name":"ISZERO"},{"begin":13303,"end":14142,"name":"ISZERO"},{"begin":13303,"end":14142,"name":"PUSH [tag]","value":"231"},{"begin":13303,"end":14142,"name":"JUMPI"},{"begin":13377,"end":13378,"name":"PUSH","value":"0"},{"begin":13360,"end":13365,"name":"DUP6"},{"begin":13360,"end":13374,"name":"PUSH","value":"E0"},{"begin":13360,"end":13374,"name":"ADD"},{"begin":13360,"end":13374,"name":"MLOAD"},{"begin":13360,"end":13378,"name":"GT"},{"begin":13356,"end":13737,"name":"ISZERO"},{"begin":13356,"end":13737,"name":"PUSH [tag]","value":"232"},{"begin":13356,"end":13737,"name":"JUMPI"},{"begin":13414,"end":13494,"name":"PUSH [tag]","value":"233"},{"begin":13431,"end":13453,"name":"DUP7"},{"begin":13455,"end":13460,"name":"DUP7"},{"begin":13455,"end":13477,"name":"PUSH","value":"C0"},{"begin":13455,"end":13477,"name":"ADD"},{"begin":13455,"end":13477,"name":"MLOAD"},{"begin":13479,"end":13484,"name":"DUP8"},{"begin":13479,"end":13493,"name":"PUSH","value":"E0"},{"begin":13479,"end":13493,"name":"ADD"},{"begin":13479,"end":13493,"name":"MLOAD"},{"begin":13414,"end":13430,"name":"PUSH [tag]","value":"60"},{"begin":13414,"end":13494,"name":"JUMP","value":"[in]"},{"begin":13414,"end":13494,"name":"tag","value":"233"},{"begin":13414,"end":13494,"name":"JUMPDEST"},{"begin":13399,"end":13494,"name":"SWAP2"},{"begin":13399,"end":13494,"name":"POP"},{"begin":13521,"end":13720,"name":"PUSH [tag]","value":"234"},{"begin":13573,"end":13591,"name":"PUSH","value":"0"},{"begin":13573,"end":13591,"name":"DUP1"},{"begin":13573,"end":13591,"name":"SWAP1"},{"begin":13573,"end":13591,"name":"SLOAD"},{"begin":13573,"end":13591,"name":"SWAP1"},{"begin":13573,"end":13591,"name":"PUSH","value":"100"},{"begin":13573,"end":13591,"name":"EXP"},{"begin":13573,"end":13591,"name":"SWAP1"},{"begin":13573,"end":13591,"name":"DIV"},{"begin":13573,"end":13591,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":13573,"end":13591,"name":"AND"},{"begin":13614,"end":13619,"name":"DUP7"},{"begin":13614,"end":13625,"name":"PUSH","value":"0"},{"begin":13614,"end":13625,"name":"ADD"},{"begin":13614,"end":13625,"name":"MLOAD"},{"begin":13648,"end":13653,"name":"DUP8"},{"begin":13648,"end":13666,"name":"PUSH","value":"80"},{"begin":13648,"end":13666,"name":"ADD"},{"begin":13648,"end":13666,"name":"MLOAD"},{"begin":13689,"end":13701,"name":"DUP6"},{"begin":13521,"end":13550,"name":"PUSH [tag]","value":"227"},{"begin":13521,"end":13720,"name":"JUMP","value":"[in]"},{"begin":13521,"end":13720,"name":"tag","value":"234"},{"begin":13521,"end":13720,"name":"JUMPDEST"},{"begin":13513,"end":13721,"name":"ISZERO"},{"begin":13513,"end":13721,"name":"ISZERO"},{"begin":13513,"end":13721,"name":"PUSH [tag]","value":"235"},{"begin":13513,"end":13721,"name":"JUMPI"},{"begin":13513,"end":13721,"name":"PUSH","value":"0"},{"begin":13513,"end":13721,"name":"DUP1"},{"begin":13513,"end":13721,"name":"REVERT"},{"begin":13513,"end":13721,"name":"tag","value":"235"},{"begin":13513,"end":13721,"name":"JUMPDEST"},{"begin":13356,"end":13737,"name":"tag","value":"232"},{"begin":13356,"end":13737,"name":"JUMPDEST"},{"begin":13772,"end":13773,"name":"PUSH","value":"0"},{"begin":13755,"end":13760,"name":"DUP6"},{"begin":13755,"end":13769,"name":"PUSH","value":"100"},{"begin":13755,"end":13769,"name":"ADD"},{"begin":13755,"end":13769,"name":"MLOAD"},{"begin":13755,"end":13773,"name":"GT"},{"begin":13751,"end":14131,"name":"ISZERO"},{"begin":13751,"end":14131,"name":"PUSH [tag]","value":"236"},{"begin":13751,"end":14131,"name":"JUMPI"},{"begin":13809,"end":13889,"name":"PUSH [tag]","value":"237"},{"begin":13826,"end":13848,"name":"DUP7"},{"begin":13850,"end":13855,"name":"DUP7"},{"begin":13850,"end":13872,"name":"PUSH","value":"C0"},{"begin":13850,"end":13872,"name":"ADD"},{"begin":13850,"end":13872,"name":"MLOAD"},{"begin":13874,"end":13879,"name":"DUP8"},{"begin":13874,"end":13888,"name":"PUSH","value":"100"},{"begin":13874,"end":13888,"name":"ADD"},{"begin":13874,"end":13888,"name":"MLOAD"},{"begin":13809,"end":13825,"name":"PUSH [tag]","value":"60"},{"begin":13809,"end":13889,"name":"JUMP","value":"[in]"},{"begin":13809,"end":13889,"name":"tag","value":"237"},{"begin":13809,"end":13889,"name":"JUMPDEST"},{"begin":13794,"end":13889,"name":"SWAP1"},{"begin":13794,"end":13889,"name":"POP"},{"begin":13916,"end":14114,"name":"PUSH [tag]","value":"238"},{"begin":13968,"end":13986,"name":"PUSH","value":"0"},{"begin":13968,"end":13986,"name":"DUP1"},{"begin":13968,"end":13986,"name":"SWAP1"},{"begin":13968,"end":13986,"name":"SLOAD"},{"begin":13968,"end":13986,"name":"SWAP1"},{"begin":13968,"end":13986,"name":"PUSH","value":"100"},{"begin":13968,"end":13986,"name":"EXP"},{"begin":13968,"end":13986,"name":"SWAP1"},{"begin":13968,"end":13986,"name":"DIV"},{"begin":13968,"end":13986,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":13968,"end":13986,"name":"AND"},{"begin":14009,"end":14019,"name":"CALLER"},{"begin":14042,"end":14047,"name":"DUP8"},{"begin":14042,"end":14060,"name":"PUSH","value":"80"},{"begin":14042,"end":14060,"name":"ADD"},{"begin":14042,"end":14060,"name":"MLOAD"},{"begin":14083,"end":14095,"name":"DUP5"},{"begin":13916,"end":13945,"name":"PUSH [tag]","value":"227"},{"begin":13916,"end":14114,"name":"JUMP","value":"[in]"},{"begin":13916,"end":14114,"name":"tag","value":"238"},{"begin":13916,"end":14114,"name":"JUMPDEST"},{"begin":13908,"end":14115,"name":"ISZERO"},{"begin":13908,"end":14115,"name":"ISZERO"},{"begin":13908,"end":14115,"name":"PUSH [tag]","value":"239"},{"begin":13908,"end":14115,"name":"JUMPI"},{"begin":13908,"end":14115,"name":"PUSH","value":"0"},{"begin":13908,"end":14115,"name":"DUP1"},{"begin":13908,"end":14115,"name":"REVERT"},{"begin":13908,"end":14115,"name":"tag","value":"239"},{"begin":13908,"end":14115,"name":"JUMPDEST"},{"begin":13751,"end":14131,"name":"tag","value":"236"},{"begin":13751,"end":14131,"name":"JUMPDEST"},{"begin":13303,"end":14142,"name":"tag","value":"231"},{"begin":13303,"end":14142,"name":"JUMPDEST"},{"begin":14460,"end":14465,"name":"DUP5"},{"begin":14460,"end":14476,"name":"PUSH","value":"40"},{"begin":14460,"end":14476,"name":"ADD"},{"begin":14460,"end":14476,"name":"MLOAD"},{"begin":14478,"end":14483,"name":"DUP6"},{"begin":14478,"end":14494,"name":"PUSH","value":"60"},{"begin":14478,"end":14494,"name":"ADD"},{"begin":14478,"end":14494,"name":"MLOAD"},{"begin":14450,"end":14495,"name":"PUSH","value":"40"},{"begin":14450,"end":14495,"name":"MLOAD"},{"begin":14450,"end":14495,"name":"DUP1"},{"begin":14450,"end":14495,"name":"DUP4"},{"begin":14450,"end":14495,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14450,"end":14495,"name":"AND"},{"begin":14450,"end":14495,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14450,"end":14495,"name":"AND"},{"begin":14450,"end":14495,"name":"PUSH","value":"1000000000000000000000000"},{"begin":14450,"end":14495,"name":"MUL"},{"begin":14450,"end":14495,"name":"DUP2"},{"begin":14450,"end":14495,"name":"MSTORE"},{"begin":14450,"end":14495,"name":"PUSH","value":"14"},{"begin":14450,"end":14495,"name":"ADD"},{"begin":14450,"end":14495,"name":"DUP3"},{"begin":14450,"end":14495,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14450,"end":14495,"name":"AND"},{"begin":14450,"end":14495,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14450,"end":14495,"name":"AND"},{"begin":14450,"end":14495,"name":"PUSH","value":"1000000000000000000000000"},{"begin":14450,"end":14495,"name":"MUL"},{"begin":14450,"end":14495,"name":"DUP2"},{"begin":14450,"end":14495,"name":"MSTORE"},{"begin":14450,"end":14495,"name":"PUSH","value":"14"},{"begin":14450,"end":14495,"name":"ADD"},{"begin":14450,"end":14495,"name":"SWAP3"},{"begin":14450,"end":14495,"name":"POP"},{"begin":14450,"end":14495,"name":"POP"},{"begin":14450,"end":14495,"name":"POP"},{"begin":14450,"end":14495,"name":"PUSH","value":"40"},{"begin":14450,"end":14495,"name":"MLOAD"},{"begin":14450,"end":14495,"name":"DUP1"},{"begin":14450,"end":14495,"name":"SWAP2"},{"begin":14450,"end":14495,"name":"SUB"},{"begin":14450,"end":14495,"name":"SWAP1"},{"begin":14450,"end":14495,"name":"KECCAK256"},{"begin":14154,"end":14536,"name":"PUSH","value":"0"},{"begin":14154,"end":14536,"name":"NOT"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14227,"end":14232,"name":"DUP6"},{"begin":14227,"end":14245,"name":"PUSH","value":"80"},{"begin":14227,"end":14245,"name":"ADD"},{"begin":14227,"end":14245,"name":"MLOAD"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14176,"end":14181,"name":"DUP7"},{"begin":14176,"end":14187,"name":"PUSH","value":"0"},{"begin":14176,"end":14187,"name":"ADD"},{"begin":14176,"end":14187,"name":"MLOAD"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"PUSH","value":"D0B9391970D9A25552F37D436D2AAE2925E2BFE1B2A923754BADA030C498CB3"},{"begin":14202,"end":14212,"name":"CALLER"},{"begin":14260,"end":14265,"name":"DUP10"},{"begin":14260,"end":14276,"name":"PUSH","value":"40"},{"begin":14260,"end":14276,"name":"ADD"},{"begin":14260,"end":14276,"name":"MLOAD"},{"begin":14291,"end":14296,"name":"DUP11"},{"begin":14291,"end":14307,"name":"PUSH","value":"60"},{"begin":14291,"end":14307,"name":"ADD"},{"begin":14291,"end":14307,"name":"MLOAD"},{"begin":14322,"end":14344,"name":"DUP10"},{"begin":14359,"end":14381,"name":"DUP14"},{"begin":14396,"end":14408,"name":"DUP11"},{"begin":14423,"end":14435,"name":"DUP11"},{"begin":14510,"end":14515,"name":"DUP16"},{"begin":14510,"end":14525,"name":"PUSH","value":"140"},{"begin":14510,"end":14525,"name":"ADD"},{"begin":14510,"end":14525,"name":"MLOAD"},{"begin":14154,"end":14536,"name":"PUSH","value":"40"},{"begin":14154,"end":14536,"name":"MLOAD"},{"begin":14154,"end":14536,"name":"DUP1"},{"begin":14154,"end":14536,"name":"DUP10"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"DUP9"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"DUP8"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"DUP7"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"DUP6"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"DUP5"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"DUP4"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"DUP3"},{"begin":14154,"end":14536,"name":"PUSH","value":"0"},{"begin":14154,"end":14536,"name":"NOT"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"PUSH","value":"0"},{"begin":14154,"end":14536,"name":"NOT"},{"begin":14154,"end":14536,"name":"AND"},{"begin":14154,"end":14536,"name":"DUP2"},{"begin":14154,"end":14536,"name":"MSTORE"},{"begin":14154,"end":14536,"name":"PUSH","value":"20"},{"begin":14154,"end":14536,"name":"ADD"},{"begin":14154,"end":14536,"name":"SWAP9"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"POP"},{"begin":14154,"end":14536,"name":"PUSH","value":"40"},{"begin":14154,"end":14536,"name":"MLOAD"},{"begin":14154,"end":14536,"name":"DUP1"},{"begin":14154,"end":14536,"name":"SWAP2"},{"begin":14154,"end":14536,"name":"SUB"},{"begin":14154,"end":14536,"name":"SWAP1"},{"begin":14154,"end":14536,"name":"LOG4"},{"begin":14554,"end":14576,"name":"DUP6"},{"begin":14547,"end":14576,"name":"SWAP6"},{"begin":14547,"end":14576,"name":"POP"},{"begin":10433,"end":14584,"name":"tag","value":"190"},{"begin":10433,"end":14584,"name":"JUMPDEST"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"SWAP8"},{"begin":10433,"end":14584,"name":"SWAP7"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"POP"},{"begin":10433,"end":14584,"name":"JUMP","value":"[out]"},{"begin":23364,"end":24089,"name":"tag","value":"83"},{"begin":23364,"end":24089,"name":"JUMPDEST"},{"begin":23486,"end":23493,"name":"PUSH","value":"0"},{"begin":23550,"end":23554,"name":"ADDRESS"},{"begin":23570,"end":23584,"name":"DUP4"},{"begin":23585,"end":23586,"name":"PUSH","value":"0"},{"begin":23570,"end":23587,"name":"PUSH","value":"5"},{"begin":23570,"end":23587,"name":"DUP2"},{"begin":23570,"end":23587,"name":"LT"},{"begin":23570,"end":23587,"name":"ISZERO"},{"begin":23570,"end":23587,"name":"ISZERO"},{"begin":23570,"end":23587,"name":"PUSH [tag]","value":"241"},{"begin":23570,"end":23587,"name":"JUMPI"},{"begin":23570,"end":23587,"name":"INVALID"},{"begin":23570,"end":23587,"name":"tag","value":"241"},{"begin":23570,"end":23587,"name":"JUMPDEST"},{"begin":23570,"end":23587,"name":"PUSH","value":"20"},{"begin":23570,"end":23587,"name":"MUL"},{"begin":23570,"end":23587,"name":"ADD"},{"begin":23570,"end":23587,"name":"MLOAD"},{"begin":23611,"end":23625,"name":"DUP5"},{"begin":23626,"end":23627,"name":"PUSH","value":"1"},{"begin":23611,"end":23628,"name":"PUSH","value":"5"},{"begin":23611,"end":23628,"name":"DUP2"},{"begin":23611,"end":23628,"name":"LT"},{"begin":23611,"end":23628,"name":"ISZERO"},{"begin":23611,"end":23628,"name":"ISZERO"},{"begin":23611,"end":23628,"name":"PUSH [tag]","value":"242"},{"begin":23611,"end":23628,"name":"JUMPI"},{"begin":23611,"end":23628,"name":"INVALID"},{"begin":23611,"end":23628,"name":"tag","value":"242"},{"begin":23611,"end":23628,"name":"JUMPDEST"},{"begin":23611,"end":23628,"name":"PUSH","value":"20"},{"begin":23611,"end":23628,"name":"MUL"},{"begin":23611,"end":23628,"name":"ADD"},{"begin":23611,"end":23628,"name":"MLOAD"},{"begin":23652,"end":23666,"name":"DUP6"},{"begin":23667,"end":23668,"name":"PUSH","value":"2"},{"begin":23652,"end":23669,"name":"PUSH","value":"5"},{"begin":23652,"end":23669,"name":"DUP2"},{"begin":23652,"end":23669,"name":"LT"},{"begin":23652,"end":23669,"name":"ISZERO"},{"begin":23652,"end":23669,"name":"ISZERO"},{"begin":23652,"end":23669,"name":"PUSH [tag]","value":"243"},{"begin":23652,"end":23669,"name":"JUMPI"},{"begin":23652,"end":23669,"name":"INVALID"},{"begin":23652,"end":23669,"name":"tag","value":"243"},{"begin":23652,"end":23669,"name":"JUMPDEST"},{"begin":23652,"end":23669,"name":"PUSH","value":"20"},{"begin":23652,"end":23669,"name":"MUL"},{"begin":23652,"end":23669,"name":"ADD"},{"begin":23652,"end":23669,"name":"MLOAD"},{"begin":23698,"end":23712,"name":"DUP7"},{"begin":23713,"end":23714,"name":"PUSH","value":"3"},{"begin":23698,"end":23715,"name":"PUSH","value":"5"},{"begin":23698,"end":23715,"name":"DUP2"},{"begin":23698,"end":23715,"name":"LT"},{"begin":23698,"end":23715,"name":"ISZERO"},{"begin":23698,"end":23715,"name":"ISZERO"},{"begin":23698,"end":23715,"name":"PUSH [tag]","value":"244"},{"begin":23698,"end":23715,"name":"JUMPI"},{"begin":23698,"end":23715,"name":"INVALID"},{"begin":23698,"end":23715,"name":"tag","value":"244"},{"begin":23698,"end":23715,"name":"JUMPDEST"},{"begin":23698,"end":23715,"name":"PUSH","value":"20"},{"begin":23698,"end":23715,"name":"MUL"},{"begin":23698,"end":23715,"name":"ADD"},{"begin":23698,"end":23715,"name":"MLOAD"},{"begin":23744,"end":23758,"name":"DUP8"},{"begin":23759,"end":23760,"name":"PUSH","value":"4"},{"begin":23744,"end":23761,"name":"PUSH","value":"5"},{"begin":23744,"end":23761,"name":"DUP2"},{"begin":23744,"end":23761,"name":"LT"},{"begin":23744,"end":23761,"name":"ISZERO"},{"begin":23744,"end":23761,"name":"ISZERO"},{"begin":23744,"end":23761,"name":"PUSH [tag]","value":"245"},{"begin":23744,"end":23761,"name":"JUMPI"},{"begin":23744,"end":23761,"name":"INVALID"},{"begin":23744,"end":23761,"name":"tag","value":"245"},{"begin":23744,"end":23761,"name":"JUMPDEST"},{"begin":23744,"end":23761,"name":"PUSH","value":"20"},{"begin":23744,"end":23761,"name":"MUL"},{"begin":23744,"end":23761,"name":"ADD"},{"begin":23744,"end":23761,"name":"MLOAD"},{"begin":23792,"end":23803,"name":"DUP8"},{"begin":23804,"end":23805,"name":"PUSH","value":"0"},{"begin":23792,"end":23806,"name":"PUSH","value":"6"},{"begin":23792,"end":23806,"name":"DUP2"},{"begin":23792,"end":23806,"name":"LT"},{"begin":23792,"end":23806,"name":"ISZERO"},{"begin":23792,"end":23806,"name":"ISZERO"},{"begin":23792,"end":23806,"name":"PUSH [tag]","value":"246"},{"begin":23792,"end":23806,"name":"JUMPI"},{"begin":23792,"end":23806,"name":"INVALID"},{"begin":23792,"end":23806,"name":"tag","value":"246"},{"begin":23792,"end":23806,"name":"JUMPDEST"},{"begin":23792,"end":23806,"name":"PUSH","value":"20"},{"begin":23792,"end":23806,"name":"MUL"},{"begin":23792,"end":23806,"name":"ADD"},{"begin":23792,"end":23806,"name":"MLOAD"},{"begin":23844,"end":23855,"name":"DUP9"},{"begin":23856,"end":23857,"name":"PUSH","value":"1"},{"begin":23844,"end":23858,"name":"PUSH","value":"6"},{"begin":23844,"end":23858,"name":"DUP2"},{"begin":23844,"end":23858,"name":"LT"},{"begin":23844,"end":23858,"name":"ISZERO"},{"begin":23844,"end":23858,"name":"ISZERO"},{"begin":23844,"end":23858,"name":"PUSH [tag]","value":"247"},{"begin":23844,"end":23858,"name":"JUMPI"},{"begin":23844,"end":23858,"name":"INVALID"},{"begin":23844,"end":23858,"name":"tag","value":"247"},{"begin":23844,"end":23858,"name":"JUMPDEST"},{"begin":23844,"end":23858,"name":"PUSH","value":"20"},{"begin":23844,"end":23858,"name":"MUL"},{"begin":23844,"end":23858,"name":"ADD"},{"begin":23844,"end":23858,"name":"MLOAD"},{"begin":23896,"end":23907,"name":"DUP10"},{"begin":23908,"end":23909,"name":"PUSH","value":"2"},{"begin":23896,"end":23910,"name":"PUSH","value":"6"},{"begin":23896,"end":23910,"name":"DUP2"},{"begin":23896,"end":23910,"name":"LT"},{"begin":23896,"end":23910,"name":"ISZERO"},{"begin":23896,"end":23910,"name":"ISZERO"},{"begin":23896,"end":23910,"name":"PUSH [tag]","value":"248"},{"begin":23896,"end":23910,"name":"JUMPI"},{"begin":23896,"end":23910,"name":"INVALID"},{"begin":23896,"end":23910,"name":"tag","value":"248"},{"begin":23896,"end":23910,"name":"JUMPDEST"},{"begin":23896,"end":23910,"name":"PUSH","value":"20"},{"begin":23896,"end":23910,"name":"MUL"},{"begin":23896,"end":23910,"name":"ADD"},{"begin":23896,"end":23910,"name":"MLOAD"},{"begin":23940,"end":23951,"name":"DUP11"},{"begin":23952,"end":23953,"name":"PUSH","value":"3"},{"begin":23940,"end":23954,"name":"PUSH","value":"6"},{"begin":23940,"end":23954,"name":"DUP2"},{"begin":23940,"end":23954,"name":"LT"},{"begin":23940,"end":23954,"name":"ISZERO"},{"begin":23940,"end":23954,"name":"ISZERO"},{"begin":23940,"end":23954,"name":"PUSH [tag]","value":"249"},{"begin":23940,"end":23954,"name":"JUMPI"},{"begin":23940,"end":23954,"name":"INVALID"},{"begin":23940,"end":23954,"name":"tag","value":"249"},{"begin":23940,"end":23954,"name":"JUMPDEST"},{"begin":23940,"end":23954,"name":"PUSH","value":"20"},{"begin":23940,"end":23954,"name":"MUL"},{"begin":23940,"end":23954,"name":"ADD"},{"begin":23940,"end":23954,"name":"MLOAD"},{"begin":23984,"end":23995,"name":"DUP12"},{"begin":23996,"end":23997,"name":"PUSH","value":"4"},{"begin":23984,"end":23998,"name":"PUSH","value":"6"},{"begin":23984,"end":23998,"name":"DUP2"},{"begin":23984,"end":23998,"name":"LT"},{"begin":23984,"end":23998,"name":"ISZERO"},{"begin":23984,"end":23998,"name":"ISZERO"},{"begin":23984,"end":23998,"name":"PUSH [tag]","value":"250"},{"begin":23984,"end":23998,"name":"JUMPI"},{"begin":23984,"end":23998,"name":"INVALID"},{"begin":23984,"end":23998,"name":"tag","value":"250"},{"begin":23984,"end":23998,"name":"JUMPDEST"},{"begin":23984,"end":23998,"name":"PUSH","value":"20"},{"begin":23984,"end":23998,"name":"MUL"},{"begin":23984,"end":23998,"name":"ADD"},{"begin":23984,"end":23998,"name":"MLOAD"},{"begin":24044,"end":24055,"name":"DUP13"},{"begin":24056,"end":24057,"name":"PUSH","value":"5"},{"begin":24044,"end":24058,"name":"PUSH","value":"6"},{"begin":24044,"end":24058,"name":"DUP2"},{"begin":24044,"end":24058,"name":"LT"},{"begin":24044,"end":24058,"name":"ISZERO"},{"begin":24044,"end":24058,"name":"ISZERO"},{"begin":24044,"end":24058,"name":"PUSH [tag]","value":"251"},{"begin":24044,"end":24058,"name":"JUMPI"},{"begin":24044,"end":24058,"name":"INVALID"},{"begin":24044,"end":24058,"name":"tag","value":"251"},{"begin":24044,"end":24058,"name":"JUMPDEST"},{"begin":24044,"end":24058,"name":"PUSH","value":"20"},{"begin":24044,"end":24058,"name":"MUL"},{"begin":24044,"end":24058,"name":"ADD"},{"begin":24044,"end":24058,"name":"MLOAD"},{"begin":23518,"end":24081,"name":"PUSH","value":"40"},{"begin":23518,"end":24081,"name":"MLOAD"},{"begin":23518,"end":24081,"name":"DUP1"},{"begin":23518,"end":24081,"name":"DUP14"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"1000000000000000000000000"},{"begin":23518,"end":24081,"name":"MUL"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"14"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP13"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"1000000000000000000000000"},{"begin":23518,"end":24081,"name":"MUL"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"14"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP12"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"1000000000000000000000000"},{"begin":23518,"end":24081,"name":"MUL"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"14"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP11"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"1000000000000000000000000"},{"begin":23518,"end":24081,"name":"MUL"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"14"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP10"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"1000000000000000000000000"},{"begin":23518,"end":24081,"name":"MUL"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"14"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP9"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":23518,"end":24081,"name":"AND"},{"begin":23518,"end":24081,"name":"PUSH","value":"1000000000000000000000000"},{"begin":23518,"end":24081,"name":"MUL"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"14"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP8"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"20"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP7"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"20"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP6"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"20"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP5"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"20"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP4"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"20"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"DUP3"},{"begin":23518,"end":24081,"name":"DUP2"},{"begin":23518,"end":24081,"name":"MSTORE"},{"begin":23518,"end":24081,"name":"PUSH","value":"20"},{"begin":23518,"end":24081,"name":"ADD"},{"begin":23518,"end":24081,"name":"SWAP13"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"POP"},{"begin":23518,"end":24081,"name":"PUSH","value":"40"},{"begin":23518,"end":24081,"name":"MLOAD"},{"begin":23518,"end":24081,"name":"DUP1"},{"begin":23518,"end":24081,"name":"SWAP2"},{"begin":23518,"end":24081,"name":"SUB"},{"begin":23518,"end":24081,"name":"SWAP1"},{"begin":23518,"end":24081,"name":"KECCAK256"},{"begin":23511,"end":24081,"name":"SWAP1"},{"begin":23511,"end":24081,"name":"POP"},{"begin":23364,"end":24089,"name":"tag","value":"240"},{"begin":23364,"end":24089,"name":"JUMPDEST"},{"begin":23364,"end":24089,"name":"SWAP3"},{"begin":23364,"end":24089,"name":"SWAP2"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"POP"},{"begin":23364,"end":24089,"name":"JUMP","value":"[out]"},{"begin":7982,"end":8036,"name":"tag","value":"86"},{"begin":7982,"end":8036,"name":"JUMPDEST"},{"begin":8032,"end":8036,"name":"PUSH","value":"1387"},{"begin":7982,"end":8036,"name":"DUP2"},{"begin":7982,"end":8036,"name":"JUMP","value":"[out]"},{"begin":7935,"end":7975,"name":"tag","value":"89"},{"begin":7935,"end":7975,"name":"JUMPDEST"},{"begin":7935,"end":7975,"name":"PUSH","value":"40"},{"begin":7935,"end":7975,"name":"DUP1"},{"begin":7935,"end":7975,"name":"MLOAD"},{"begin":7935,"end":7975,"name":"SWAP1"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"ADD"},{"begin":7935,"end":7975,"name":"PUSH","value":"40"},{"begin":7935,"end":7975,"name":"MSTORE"},{"begin":7935,"end":7975,"name":"DUP1"},{"begin":7935,"end":7975,"name":"PUSH","value":"5"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"MSTORE"},{"begin":7935,"end":7975,"name":"PUSH","value":"20"},{"begin":7935,"end":7975,"name":"ADD"},{"begin":7935,"end":7975,"name":"PUSH","value":"312E302E30000000000000000000000000000000000000000000000000000000"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"MSTORE"},{"begin":7935,"end":7975,"name":"POP"},{"begin":7935,"end":7975,"name":"DUP2"},{"begin":7935,"end":7975,"name":"JUMP","value":"[out]"},{"begin":6065,"end":6225,"name":"tag","value":"98"},{"begin":6065,"end":6225,"name":"JUMPDEST"},{"begin":6125,"end":6132,"name":"PUSH","value":"0"},{"begin":6145,"end":6151,"name":"DUP1"},{"begin":6158,"end":6159,"name":"DUP3"},{"begin":6154,"end":6155,"name":"DUP5"},{"begin":6154,"end":6159,"name":"MUL"},{"begin":6145,"end":6159,"name":"SWAP1"},{"begin":6145,"end":6159,"name":"POP"},{"begin":6182,"end":6183,"name":"PUSH","value":"0"},{"begin":6177,"end":6178,"name":"DUP5"},{"begin":6177,"end":6183,"name":"EQ"},{"begin":6177,"end":6197,"name":"DUP1"},{"begin":6177,"end":6197,"name":"PUSH [tag]","value":"253"},{"begin":6177,"end":6197,"name":"JUMPI"},{"begin":6177,"end":6197,"name":"POP"},{"begin":6196,"end":6197,"name":"DUP3"},{"begin":6191,"end":6192,"name":"DUP5"},{"begin":6187,"end":6188,"name":"DUP3"},{"begin":6187,"end":6192,"name":"DUP2"},{"begin":6187,"end":6192,"name":"ISZERO"},{"begin":6187,"end":6192,"name":"ISZERO"},{"begin":6187,"end":6192,"name":"PUSH [tag]","value":"254"},{"begin":6187,"end":6192,"name":"JUMPI"},{"begin":6187,"end":6192,"name":"INVALID"},{"begin":6187,"end":6192,"name":"tag","value":"254"},{"begin":6187,"end":6192,"name":"JUMPDEST"},{"begin":6187,"end":6192,"name":"DIV"},{"begin":6187,"end":6197,"name":"EQ"},{"begin":6177,"end":6197,"name":"tag","value":"253"},{"begin":6177,"end":6197,"name":"JUMPDEST"},{"begin":6170,"end":6198,"name":"ISZERO"},{"begin":6170,"end":6198,"name":"ISZERO"},{"begin":6170,"end":6198,"name":"PUSH [tag]","value":"255"},{"begin":6170,"end":6198,"name":"JUMPI"},{"begin":6170,"end":6198,"name":"INVALID"},{"begin":6170,"end":6198,"name":"tag","value":"255"},{"begin":6170,"end":6198,"name":"JUMPDEST"},{"begin":6216,"end":6217,"name":"DUP1"},{"begin":6209,"end":6217,"name":"SWAP2"},{"begin":6209,"end":6217,"name":"POP"},{"begin":6065,"end":6225,"name":"tag","value":"252"},{"begin":6065,"end":6225,"name":"JUMPDEST"},{"begin":6065,"end":6225,"name":"POP"},{"begin":6065,"end":6225,"name":"SWAP3"},{"begin":6065,"end":6225,"name":"SWAP2"},{"begin":6065,"end":6225,"name":"POP"},{"begin":6065,"end":6225,"name":"POP"},{"begin":6065,"end":6225,"name":"JUMP","value":"[out]"},{"begin":6233,"end":6354,"name":"tag","value":"100"},{"begin":6233,"end":6354,"name":"JUMPDEST"},{"begin":6293,"end":6300,"name":"PUSH","value":"0"},{"begin":6313,"end":6319,"name":"DUP1"},{"begin":6326,"end":6327,"name":"DUP3"},{"begin":6322,"end":6323,"name":"DUP5"},{"begin":6322,"end":6327,"name":"DUP2"},{"begin":6322,"end":6327,"name":"ISZERO"},{"begin":6322,"end":6327,"name":"ISZERO"},{"begin":6322,"end":6327,"name":"PUSH [tag]","value":"257"},{"begin":6322,"end":6327,"name":"JUMPI"},{"begin":6322,"end":6327,"name":"INVALID"},{"begin":6322,"end":6327,"name":"tag","value":"257"},{"begin":6322,"end":6327,"name":"JUMPDEST"},{"begin":6322,"end":6327,"name":"DIV"},{"begin":6313,"end":6327,"name":"SWAP1"},{"begin":6313,"end":6327,"name":"POP"},{"begin":6345,"end":6346,"name":"DUP1"},{"begin":6338,"end":6346,"name":"SWAP2"},{"begin":6338,"end":6346,"name":"POP"},{"begin":6233,"end":6354,"name":"tag","value":"256"},{"begin":6233,"end":6354,"name":"JUMPDEST"},{"begin":6233,"end":6354,"name":"POP"},{"begin":6233,"end":6354,"name":"SWAP3"},{"begin":6233,"end":6354,"name":"SWAP2"},{"begin":6233,"end":6354,"name":"POP"},{"begin":6233,"end":6354,"name":"POP"},{"begin":6233,"end":6354,"name":"JUMP","value":"[out]"},{"begin":6362,"end":6487,"name":"tag","value":"115"},{"begin":6362,"end":6487,"name":"JUMPDEST"},{"begin":6422,"end":6429,"name":"PUSH","value":"0"},{"begin":6454,"end":6455,"name":"DUP3"},{"begin":6449,"end":6450,"name":"DUP3"},{"begin":6449,"end":6455,"name":"GT"},{"begin":6449,"end":6455,"name":"ISZERO"},{"begin":6442,"end":6456,"name":"ISZERO"},{"begin":6442,"end":6456,"name":"ISZERO"},{"begin":6442,"end":6456,"name":"PUSH [tag]","value":"259"},{"begin":6442,"end":6456,"name":"JUMPI"},{"begin":6442,"end":6456,"name":"INVALID"},{"begin":6442,"end":6456,"name":"tag","value":"259"},{"begin":6442,"end":6456,"name":"JUMPDEST"},{"begin":6478,"end":6479,"name":"DUP2"},{"begin":6474,"end":6475,"name":"DUP4"},{"begin":6474,"end":6479,"name":"SUB"},{"begin":6467,"end":6479,"name":"SWAP1"},{"begin":6467,"end":6479,"name":"POP"},{"begin":6362,"end":6487,"name":"tag","value":"258"},{"begin":6362,"end":6487,"name":"JUMPDEST"},{"begin":6362,"end":6487,"name":"SWAP3"},{"begin":6362,"end":6487,"name":"SWAP2"},{"begin":6362,"end":6487,"name":"POP"},{"begin":6362,"end":6487,"name":"POP"},{"begin":6362,"end":6487,"name":"JUMP","value":"[out]"},{"begin":6495,"end":6641,"name":"tag","value":"119"},{"begin":6495,"end":6641,"name":"JUMPDEST"},{"begin":6555,"end":6562,"name":"PUSH","value":"0"},{"begin":6575,"end":6581,"name":"DUP1"},{"begin":6588,"end":6589,"name":"DUP3"},{"begin":6584,"end":6585,"name":"DUP5"},{"begin":6584,"end":6589,"name":"ADD"},{"begin":6575,"end":6589,"name":"SWAP1"},{"begin":6575,"end":6589,"name":"POP"},{"begin":6612,"end":6613,"name":"DUP4"},{"begin":6607,"end":6608,"name":"DUP2"},{"begin":6607,"end":6613,"name":"LT"},{"begin":6607,"end":6613,"name":"ISZERO"},{"begin":6600,"end":6614,"name":"ISZERO"},{"begin":6600,"end":6614,"name":"ISZERO"},{"begin":6600,"end":6614,"name":"PUSH [tag]","value":"261"},{"begin":6600,"end":6614,"name":"JUMPI"},{"begin":6600,"end":6614,"name":"INVALID"},{"begin":6600,"end":6614,"name":"tag","value":"261"},{"begin":6600,"end":6614,"name":"JUMPDEST"},{"begin":6632,"end":6633,"name":"DUP1"},{"begin":6625,"end":6633,"name":"SWAP2"},{"begin":6625,"end":6633,"name":"POP"},{"begin":6495,"end":6641,"name":"tag","value":"260"},{"begin":6495,"end":6641,"name":"JUMPDEST"},{"begin":6495,"end":6641,"name":"POP"},{"begin":6495,"end":6641,"name":"SWAP3"},{"begin":6495,"end":6641,"name":"SWAP2"},{"begin":6495,"end":6641,"name":"POP"},{"begin":6495,"end":6641,"name":"POP"},{"begin":6495,"end":6641,"name":"JUMP","value":"[out]"},{"begin":7006,"end":7119,"name":"tag","value":"144"},{"begin":7006,"end":7119,"name":"JUMPDEST"},{"begin":7071,"end":7078,"name":"PUSH","value":"0"},{"begin":7102,"end":7103,"name":"DUP2"},{"begin":7098,"end":7099,"name":"DUP4"},{"begin":7098,"end":7103,"name":"LT"},{"begin":7098,"end":7111,"name":"PUSH [tag]","value":"263"},{"begin":7098,"end":7111,"name":"JUMPI"},{"begin":7110,"end":7111,"name":"DUP2"},{"begin":7098,"end":7111,"name":"PUSH [tag]","value":"264"},{"begin":7098,"end":7111,"name":"JUMP"},{"begin":7098,"end":7111,"name":"tag","value":"263"},{"begin":7098,"end":7111,"name":"JUMPDEST"},{"begin":7106,"end":7107,"name":"DUP3"},{"begin":7098,"end":7111,"name":"tag","value":"264"},{"begin":7098,"end":7111,"name":"JUMPDEST"},{"begin":7091,"end":7111,"name":"SWAP1"},{"begin":7091,"end":7111,"name":"POP"},{"begin":7006,"end":7119,"name":"tag","value":"262"},{"begin":7006,"end":7119,"name":"JUMPDEST"},{"begin":7006,"end":7119,"name":"SWAP3"},{"begin":7006,"end":7119,"name":"SWAP2"},{"begin":7006,"end":7119,"name":"POP"},{"begin":7006,"end":7119,"name":"POP"},{"begin":7006,"end":7119,"name":"JUMP","value":"[out]"},{"begin":27319,"end":29717,"name":"tag","value":"221"},{"begin":27319,"end":29717,"name":"JUMPDEST"},{"begin":27571,"end":27575,"name":"PUSH","value":"0"},{"begin":27593,"end":27606,"name":"DUP1"},{"begin":27630,"end":27655,"name":"PUSH","value":"0"},{"begin":27810,"end":27830,"name":"DUP1"},{"begin":27886,"end":27906,"name":"PUSH","value":"0"},{"begin":27962,"end":27979,"name":"DUP1"},{"begin":28075,"end":28092,"name":"PUSH","value":"0"},{"begin":28188,"end":28209,"name":"DUP1"},{"begin":28303,"end":28324,"name":"PUSH","value":"0"},{"begin":27609,"end":27619,"name":"CALLER"},{"begin":27593,"end":27619,"name":"SWAP8"},{"begin":27593,"end":27619,"name":"POP"},{"begin":27658,"end":27744,"name":"PUSH [tag]","value":"266"},{"begin":27675,"end":27695,"name":"DUP11"},{"begin":27697,"end":27702,"name":"DUP13"},{"begin":27697,"end":27719,"name":"PUSH","value":"C0"},{"begin":27697,"end":27719,"name":"ADD"},{"begin":27697,"end":27719,"name":"MLOAD"},{"begin":27721,"end":27726,"name":"DUP14"},{"begin":27721,"end":27743,"name":"PUSH","value":"A0"},{"begin":27721,"end":27743,"name":"ADD"},{"begin":27721,"end":27743,"name":"MLOAD"},{"begin":27658,"end":27674,"name":"PUSH [tag]","value":"60"},{"begin":27658,"end":27744,"name":"JUMP","value":"[in]"},{"begin":27658,"end":27744,"name":"tag","value":"266"},{"begin":27658,"end":27744,"name":"JUMPDEST"},{"begin":27630,"end":27744,"name":"SWAP7"},{"begin":27630,"end":27744,"name":"POP"},{"begin":27791,"end":27792,"name":"PUSH","value":"0"},{"begin":27761,"end":27793,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27761,"end":27793,"name":"AND"},{"begin":27761,"end":27766,"name":"DUP12"},{"begin":27761,"end":27779,"name":"PUSH","value":"80"},{"begin":27761,"end":27779,"name":"ADD"},{"begin":27761,"end":27779,"name":"MLOAD"},{"begin":27761,"end":27793,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27761,"end":27793,"name":"AND"},{"begin":27761,"end":27793,"name":"EQ"},{"begin":27761,"end":27793,"name":"ISZERO"},{"begin":27757,"end":29685,"name":"ISZERO"},{"begin":27757,"end":29685,"name":"PUSH [tag]","value":"267"},{"begin":27757,"end":29685,"name":"JUMPI"},{"begin":27853,"end":27871,"name":"PUSH","value":"0"},{"begin":27853,"end":27871,"name":"DUP1"},{"begin":27853,"end":27871,"name":"SWAP1"},{"begin":27853,"end":27871,"name":"SLOAD"},{"begin":27853,"end":27871,"name":"SWAP1"},{"begin":27853,"end":27871,"name":"PUSH","value":"100"},{"begin":27853,"end":27871,"name":"EXP"},{"begin":27853,"end":27871,"name":"SWAP1"},{"begin":27853,"end":27871,"name":"DIV"},{"begin":27853,"end":27871,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27853,"end":27871,"name":"AND"},{"begin":27833,"end":27871,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27833,"end":27871,"name":"AND"},{"begin":27833,"end":27838,"name":"DUP12"},{"begin":27833,"end":27849,"name":"PUSH","value":"40"},{"begin":27833,"end":27849,"name":"ADD"},{"begin":27833,"end":27849,"name":"MLOAD"},{"begin":27833,"end":27871,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27833,"end":27871,"name":"AND"},{"begin":27833,"end":27871,"name":"EQ"},{"begin":27810,"end":27871,"name":"SWAP6"},{"begin":27810,"end":27871,"name":"POP"},{"begin":27929,"end":27947,"name":"PUSH","value":"0"},{"begin":27929,"end":27947,"name":"DUP1"},{"begin":27929,"end":27947,"name":"SWAP1"},{"begin":27929,"end":27947,"name":"SLOAD"},{"begin":27929,"end":27947,"name":"SWAP1"},{"begin":27929,"end":27947,"name":"PUSH","value":"100"},{"begin":27929,"end":27947,"name":"EXP"},{"begin":27929,"end":27947,"name":"SWAP1"},{"begin":27929,"end":27947,"name":"DIV"},{"begin":27929,"end":27947,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27929,"end":27947,"name":"AND"},{"begin":27909,"end":27947,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27909,"end":27947,"name":"AND"},{"begin":27909,"end":27914,"name":"DUP12"},{"begin":27909,"end":27925,"name":"PUSH","value":"60"},{"begin":27909,"end":27925,"name":"ADD"},{"begin":27909,"end":27925,"name":"MLOAD"},{"begin":27909,"end":27947,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":27909,"end":27947,"name":"AND"},{"begin":27909,"end":27947,"name":"EQ"},{"begin":27886,"end":27947,"name":"SWAP5"},{"begin":27886,"end":27947,"name":"POP"},{"begin":27982,"end":28060,"name":"PUSH [tag]","value":"268"},{"begin":27999,"end":28019,"name":"DUP11"},{"begin":28021,"end":28026,"name":"DUP13"},{"begin":28021,"end":28043,"name":"PUSH","value":"C0"},{"begin":28021,"end":28043,"name":"ADD"},{"begin":28021,"end":28043,"name":"MLOAD"},{"begin":28045,"end":28050,"name":"DUP14"},{"begin":28045,"end":28059,"name":"PUSH","value":"E0"},{"begin":28045,"end":28059,"name":"ADD"},{"begin":28045,"end":28059,"name":"MLOAD"},{"begin":27982,"end":27998,"name":"PUSH [tag]","value":"60"},{"begin":27982,"end":28060,"name":"JUMP","value":"[in]"},{"begin":27982,"end":28060,"name":"tag","value":"268"},{"begin":27982,"end":28060,"name":"JUMPDEST"},{"begin":27962,"end":28060,"name":"SWAP4"},{"begin":27962,"end":28060,"name":"POP"},{"begin":28095,"end":28173,"name":"PUSH [tag]","value":"269"},{"begin":28112,"end":28132,"name":"DUP11"},{"begin":28134,"end":28139,"name":"DUP13"},{"begin":28134,"end":28156,"name":"PUSH","value":"C0"},{"begin":28134,"end":28156,"name":"ADD"},{"begin":28134,"end":28156,"name":"MLOAD"},{"begin":28158,"end":28163,"name":"DUP14"},{"begin":28158,"end":28172,"name":"PUSH","value":"100"},{"begin":28158,"end":28172,"name":"ADD"},{"begin":28158,"end":28172,"name":"MLOAD"},{"begin":28095,"end":28111,"name":"PUSH [tag]","value":"60"},{"begin":28095,"end":28173,"name":"JUMP","value":"[in]"},{"begin":28095,"end":28173,"name":"tag","value":"269"},{"begin":28095,"end":28173,"name":"JUMPDEST"},{"begin":28075,"end":28173,"name":"SWAP3"},{"begin":28075,"end":28173,"name":"POP"},{"begin":28212,"end":28227,"name":"DUP6"},{"begin":28212,"end":28288,"name":"PUSH [tag]","value":"270"},{"begin":28212,"end":28288,"name":"JUMPI"},{"begin":28276,"end":28288,"name":"DUP4"},{"begin":28212,"end":28288,"name":"PUSH [tag]","value":"271"},{"begin":28212,"end":28288,"name":"JUMP"},{"begin":28212,"end":28288,"name":"tag","value":"270"},{"begin":28212,"end":28288,"name":"JUMPDEST"},{"begin":28230,"end":28273,"name":"PUSH [tag]","value":"272"},{"begin":28238,"end":28258,"name":"DUP8"},{"begin":28260,"end":28272,"name":"DUP6"},{"begin":28230,"end":28237,"name":"PUSH [tag]","value":"119"},{"begin":28230,"end":28273,"name":"JUMP","value":"[in]"},{"begin":28230,"end":28273,"name":"tag","value":"272"},{"begin":28230,"end":28273,"name":"JUMPDEST"},{"begin":28212,"end":28288,"name":"tag","value":"271"},{"begin":28212,"end":28288,"name":"JUMPDEST"},{"begin":28188,"end":28288,"name":"SWAP2"},{"begin":28188,"end":28288,"name":"POP"},{"begin":28327,"end":28342,"name":"DUP5"},{"begin":28327,"end":28403,"name":"PUSH [tag]","value":"273"},{"begin":28327,"end":28403,"name":"JUMPI"},{"begin":28391,"end":28403,"name":"DUP3"},{"begin":28327,"end":28403,"name":"PUSH [tag]","value":"274"},{"begin":28327,"end":28403,"name":"JUMP"},{"begin":28327,"end":28403,"name":"tag","value":"273"},{"begin":28327,"end":28403,"name":"JUMPDEST"},{"begin":28345,"end":28388,"name":"PUSH [tag]","value":"275"},{"begin":28353,"end":28373,"name":"DUP11"},{"begin":28375,"end":28387,"name":"DUP5"},{"begin":28345,"end":28352,"name":"PUSH [tag]","value":"119"},{"begin":28345,"end":28388,"name":"JUMP","value":"[in]"},{"begin":28345,"end":28388,"name":"tag","value":"275"},{"begin":28345,"end":28388,"name":"JUMPDEST"},{"begin":28327,"end":28403,"name":"tag","value":"274"},{"begin":28327,"end":28403,"name":"JUMPDEST"},{"begin":28303,"end":28403,"name":"SWAP1"},{"begin":28303,"end":28403,"name":"POP"},{"begin":28473,"end":28489,"name":"DUP2"},{"begin":28427,"end":28470,"name":"PUSH [tag]","value":"276"},{"begin":28438,"end":28456,"name":"PUSH","value":"0"},{"begin":28438,"end":28456,"name":"DUP1"},{"begin":28438,"end":28456,"name":"SWAP1"},{"begin":28438,"end":28456,"name":"SLOAD"},{"begin":28438,"end":28456,"name":"SWAP1"},{"begin":28438,"end":28456,"name":"PUSH","value":"100"},{"begin":28438,"end":28456,"name":"EXP"},{"begin":28438,"end":28456,"name":"SWAP1"},{"begin":28438,"end":28456,"name":"DIV"},{"begin":28438,"end":28456,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":28438,"end":28456,"name":"AND"},{"begin":28458,"end":28463,"name":"DUP14"},{"begin":28458,"end":28469,"name":"PUSH","value":"0"},{"begin":28458,"end":28469,"name":"ADD"},{"begin":28458,"end":28469,"name":"MLOAD"},{"begin":28427,"end":28437,"name":"PUSH [tag]","value":"277"},{"begin":28427,"end":28470,"name":"JUMP","value":"[in]"},{"begin":28427,"end":28470,"name":"tag","value":"276"},{"begin":28427,"end":28470,"name":"JUMPDEST"},{"begin":28427,"end":28489,"name":"LT"},{"begin":28427,"end":28574,"name":"DUP1"},{"begin":28427,"end":28574,"name":"PUSH [tag]","value":"278"},{"begin":28427,"end":28574,"name":"JUMPI"},{"begin":28427,"end":28574,"name":"POP"},{"begin":28558,"end":28574,"name":"DUP2"},{"begin":28510,"end":28555,"name":"PUSH [tag]","value":"279"},{"begin":28523,"end":28541,"name":"PUSH","value":"0"},{"begin":28523,"end":28541,"name":"DUP1"},{"begin":28523,"end":28541,"name":"SWAP1"},{"begin":28523,"end":28541,"name":"SLOAD"},{"begin":28523,"end":28541,"name":"SWAP1"},{"begin":28523,"end":28541,"name":"PUSH","value":"100"},{"begin":28523,"end":28541,"name":"EXP"},{"begin":28523,"end":28541,"name":"SWAP1"},{"begin":28523,"end":28541,"name":"DIV"},{"begin":28523,"end":28541,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":28523,"end":28541,"name":"AND"},{"begin":28543,"end":28548,"name":"DUP14"},{"begin":28543,"end":28554,"name":"PUSH","value":"0"},{"begin":28543,"end":28554,"name":"ADD"},{"begin":28543,"end":28554,"name":"MLOAD"},{"begin":28510,"end":28522,"name":"PUSH [tag]","value":"280"},{"begin":28510,"end":28555,"name":"JUMP","value":"[in]"},{"begin":28510,"end":28555,"name":"tag","value":"279"},{"begin":28510,"end":28555,"name":"JUMPDEST"},{"begin":28510,"end":28574,"name":"LT"},{"begin":28427,"end":28574,"name":"tag","value":"278"},{"begin":28427,"end":28574,"name":"JUMPDEST"},{"begin":28427,"end":28651,"name":"DUP1"},{"begin":28427,"end":28651,"name":"PUSH [tag]","value":"281"},{"begin":28427,"end":28651,"name":"JUMPI"},{"begin":28427,"end":28651,"name":"POP"},{"begin":28635,"end":28651,"name":"DUP1"},{"begin":28595,"end":28632,"name":"PUSH [tag]","value":"282"},{"begin":28606,"end":28624,"name":"PUSH","value":"0"},{"begin":28606,"end":28624,"name":"DUP1"},{"begin":28606,"end":28624,"name":"SWAP1"},{"begin":28606,"end":28624,"name":"SLOAD"},{"begin":28606,"end":28624,"name":"SWAP1"},{"begin":28606,"end":28624,"name":"PUSH","value":"100"},{"begin":28606,"end":28624,"name":"EXP"},{"begin":28606,"end":28624,"name":"SWAP1"},{"begin":28606,"end":28624,"name":"DIV"},{"begin":28606,"end":28624,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":28606,"end":28624,"name":"AND"},{"begin":28626,"end":28631,"name":"DUP11"},{"begin":28595,"end":28605,"name":"PUSH [tag]","value":"277"},{"begin":28595,"end":28632,"name":"JUMP","value":"[in]"},{"begin":28595,"end":28632,"name":"tag","value":"282"},{"begin":28595,"end":28632,"name":"JUMPDEST"},{"begin":28595,"end":28651,"name":"LT"},{"begin":28427,"end":28651,"name":"tag","value":"281"},{"begin":28427,"end":28651,"name":"JUMPDEST"},{"begin":28427,"end":28730,"name":"DUP1"},{"begin":28427,"end":28730,"name":"PUSH [tag]","value":"283"},{"begin":28427,"end":28730,"name":"JUMPI"},{"begin":28427,"end":28730,"name":"POP"},{"begin":28714,"end":28730,"name":"DUP1"},{"begin":28672,"end":28711,"name":"PUSH [tag]","value":"284"},{"begin":28685,"end":28703,"name":"PUSH","value":"0"},{"begin":28685,"end":28703,"name":"DUP1"},{"begin":28685,"end":28703,"name":"SWAP1"},{"begin":28685,"end":28703,"name":"SLOAD"},{"begin":28685,"end":28703,"name":"SWAP1"},{"begin":28685,"end":28703,"name":"PUSH","value":"100"},{"begin":28685,"end":28703,"name":"EXP"},{"begin":28685,"end":28703,"name":"SWAP1"},{"begin":28685,"end":28703,"name":"DIV"},{"begin":28685,"end":28703,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":28685,"end":28703,"name":"AND"},{"begin":28705,"end":28710,"name":"DUP11"},{"begin":28672,"end":28684,"name":"PUSH [tag]","value":"280"},{"begin":28672,"end":28711,"name":"JUMP","value":"[in]"},{"begin":28672,"end":28711,"name":"tag","value":"284"},{"begin":28672,"end":28711,"name":"JUMPDEST"},{"begin":28672,"end":28730,"name":"LT"},{"begin":28427,"end":28730,"name":"tag","value":"283"},{"begin":28427,"end":28730,"name":"JUMPDEST"},{"begin":28420,"end":28758,"name":"ISZERO"},{"begin":28420,"end":28758,"name":"PUSH [tag]","value":"285"},{"begin":28420,"end":28758,"name":"JUMPI"},{"begin":28753,"end":28758,"name":"PUSH","value":"0"},{"begin":28746,"end":28758,"name":"SWAP9"},{"begin":28746,"end":28758,"name":"POP"},{"begin":28746,"end":28758,"name":"PUSH [tag]","value":"265"},{"begin":28746,"end":28758,"name":"JUMP"},{"begin":28420,"end":28758,"name":"tag","value":"285"},{"begin":28420,"end":28758,"name":"JUMPDEST"},{"begin":28780,"end":28795,"name":"DUP6"},{"begin":28779,"end":28795,"name":"ISZERO"},{"begin":28779,"end":29016,"name":"DUP1"},{"begin":28779,"end":29016,"name":"ISZERO"},{"begin":28779,"end":29016,"name":"PUSH [tag]","value":"286"},{"begin":28779,"end":29016,"name":"JUMPI"},{"begin":28779,"end":29016,"name":"POP"},{"begin":28847,"end":28867,"name":"DUP7"},{"begin":28803,"end":28844,"name":"PUSH [tag]","value":"287"},{"begin":28814,"end":28819,"name":"DUP13"},{"begin":28814,"end":28830,"name":"PUSH","value":"40"},{"begin":28814,"end":28830,"name":"ADD"},{"begin":28814,"end":28830,"name":"MLOAD"},{"begin":28832,"end":28837,"name":"DUP14"},{"begin":28832,"end":28843,"name":"PUSH","value":"0"},{"begin":28832,"end":28843,"name":"ADD"},{"begin":28832,"end":28843,"name":"MLOAD"},{"begin":28803,"end":28813,"name":"PUSH [tag]","value":"277"},{"begin":28803,"end":28844,"name":"JUMP","value":"[in]"},{"begin":28803,"end":28844,"name":"tag","value":"287"},{"begin":28803,"end":28844,"name":"JUMPDEST"},{"begin":28803,"end":28867,"name":"LT"},{"begin":28803,"end":29015,"name":"DUP1"},{"begin":28803,"end":29015,"name":"PUSH [tag]","value":"288"},{"begin":28803,"end":29015,"name":"JUMPI"},{"begin":28803,"end":29015,"name":"POP"},{"begin":28995,"end":29015,"name":"DUP7"},{"begin":28949,"end":28992,"name":"PUSH [tag]","value":"289"},{"begin":28962,"end":28967,"name":"DUP13"},{"begin":28962,"end":28978,"name":"PUSH","value":"40"},{"begin":28962,"end":28978,"name":"ADD"},{"begin":28962,"end":28978,"name":"MLOAD"},{"begin":28980,"end":28985,"name":"DUP14"},{"begin":28980,"end":28991,"name":"PUSH","value":"0"},{"begin":28980,"end":28991,"name":"ADD"},{"begin":28980,"end":28991,"name":"MLOAD"},{"begin":28949,"end":28961,"name":"PUSH [tag]","value":"280"},{"begin":28949,"end":28992,"name":"JUMP","value":"[in]"},{"begin":28949,"end":28992,"name":"tag","value":"289"},{"begin":28949,"end":28992,"name":"JUMPDEST"},{"begin":28949,"end":29015,"name":"LT"},{"begin":28803,"end":29015,"name":"tag","value":"288"},{"begin":28803,"end":29015,"name":"JUMPDEST"},{"begin":28779,"end":29016,"name":"tag","value":"286"},{"begin":28779,"end":29016,"name":"JUMPDEST"},{"begin":28775,"end":29044,"name":"ISZERO"},{"begin":28775,"end":29044,"name":"PUSH [tag]","value":"290"},{"begin":28775,"end":29044,"name":"JUMPI"},{"begin":29039,"end":29044,"name":"PUSH","value":"0"},{"begin":29032,"end":29044,"name":"SWAP9"},{"begin":29032,"end":29044,"name":"POP"},{"begin":29032,"end":29044,"name":"PUSH [tag]","value":"265"},{"begin":29032,"end":29044,"name":"JUMP"},{"begin":28775,"end":29044,"name":"tag","value":"290"},{"begin":28775,"end":29044,"name":"JUMPDEST"},{"begin":29064,"end":29079,"name":"DUP5"},{"begin":29063,"end":29079,"name":"ISZERO"},{"begin":29063,"end":29288,"name":"DUP1"},{"begin":29063,"end":29288,"name":"ISZERO"},{"begin":29063,"end":29288,"name":"PUSH [tag]","value":"291"},{"begin":29063,"end":29288,"name":"JUMPI"},{"begin":29063,"end":29288,"name":"POP"},{"begin":29125,"end":29145,"name":"DUP10"},{"begin":29087,"end":29122,"name":"PUSH [tag]","value":"292"},{"begin":29098,"end":29103,"name":"DUP13"},{"begin":29098,"end":29114,"name":"PUSH","value":"60"},{"begin":29098,"end":29114,"name":"ADD"},{"begin":29098,"end":29114,"name":"MLOAD"},{"begin":29116,"end":29121,"name":"DUP11"},{"begin":29087,"end":29097,"name":"PUSH [tag]","value":"277"},{"begin":29087,"end":29122,"name":"JUMP","value":"[in]"},{"begin":29087,"end":29122,"name":"tag","value":"292"},{"begin":29087,"end":29122,"name":"JUMPDEST"},{"begin":29087,"end":29145,"name":"LT"},{"begin":29087,"end":29287,"name":"DUP1"},{"begin":29087,"end":29287,"name":"PUSH [tag]","value":"293"},{"begin":29087,"end":29287,"name":"JUMPI"},{"begin":29087,"end":29287,"name":"POP"},{"begin":29267,"end":29287,"name":"DUP10"},{"begin":29227,"end":29264,"name":"PUSH [tag]","value":"294"},{"begin":29240,"end":29245,"name":"DUP13"},{"begin":29240,"end":29256,"name":"PUSH","value":"60"},{"begin":29240,"end":29256,"name":"ADD"},{"begin":29240,"end":29256,"name":"MLOAD"},{"begin":29258,"end":29263,"name":"DUP11"},{"begin":29227,"end":29239,"name":"PUSH [tag]","value":"280"},{"begin":29227,"end":29264,"name":"JUMP","value":"[in]"},{"begin":29227,"end":29264,"name":"tag","value":"294"},{"begin":29227,"end":29264,"name":"JUMPDEST"},{"begin":29227,"end":29287,"name":"LT"},{"begin":29087,"end":29287,"name":"tag","value":"293"},{"begin":29087,"end":29287,"name":"JUMPDEST"},{"begin":29063,"end":29288,"name":"tag","value":"291"},{"begin":29063,"end":29288,"name":"JUMPDEST"},{"begin":29059,"end":29316,"name":"ISZERO"},{"begin":29059,"end":29316,"name":"PUSH [tag]","value":"295"},{"begin":29059,"end":29316,"name":"JUMPI"},{"begin":29311,"end":29316,"name":"PUSH","value":"0"},{"begin":29304,"end":29316,"name":"SWAP9"},{"begin":29304,"end":29316,"name":"POP"},{"begin":29304,"end":29316,"name":"PUSH [tag]","value":"265"},{"begin":29304,"end":29316,"name":"JUMP"},{"begin":29059,"end":29316,"name":"tag","value":"295"},{"begin":29059,"end":29316,"name":"JUMPDEST"},{"begin":27757,"end":29685,"name":"PUSH [tag]","value":"296"},{"begin":27757,"end":29685,"name":"JUMP"},{"begin":27757,"end":29685,"name":"tag","value":"267"},{"begin":27757,"end":29685,"name":"JUMPDEST"},{"begin":29385,"end":29405,"name":"DUP7"},{"begin":29341,"end":29382,"name":"PUSH [tag]","value":"297"},{"begin":29352,"end":29357,"name":"DUP13"},{"begin":29352,"end":29368,"name":"PUSH","value":"40"},{"begin":29352,"end":29368,"name":"ADD"},{"begin":29352,"end":29368,"name":"MLOAD"},{"begin":29370,"end":29375,"name":"DUP14"},{"begin":29370,"end":29381,"name":"PUSH","value":"0"},{"begin":29370,"end":29381,"name":"ADD"},{"begin":29370,"end":29381,"name":"MLOAD"},{"begin":29341,"end":29351,"name":"PUSH [tag]","value":"277"},{"begin":29341,"end":29382,"name":"JUMP","value":"[in]"},{"begin":29341,"end":29382,"name":"tag","value":"297"},{"begin":29341,"end":29382,"name":"JUMPDEST"},{"begin":29341,"end":29405,"name":"LT"},{"begin":29341,"end":29495,"name":"DUP1"},{"begin":29341,"end":29495,"name":"PUSH [tag]","value":"298"},{"begin":29341,"end":29495,"name":"JUMPI"},{"begin":29341,"end":29495,"name":"POP"},{"begin":29475,"end":29495,"name":"DUP7"},{"begin":29429,"end":29472,"name":"PUSH [tag]","value":"299"},{"begin":29442,"end":29447,"name":"DUP13"},{"begin":29442,"end":29458,"name":"PUSH","value":"40"},{"begin":29442,"end":29458,"name":"ADD"},{"begin":29442,"end":29458,"name":"MLOAD"},{"begin":29460,"end":29465,"name":"DUP14"},{"begin":29460,"end":29471,"name":"PUSH","value":"0"},{"begin":29460,"end":29471,"name":"ADD"},{"begin":29460,"end":29471,"name":"MLOAD"},{"begin":29429,"end":29441,"name":"PUSH [tag]","value":"280"},{"begin":29429,"end":29472,"name":"JUMP","value":"[in]"},{"begin":29429,"end":29472,"name":"tag","value":"299"},{"begin":29429,"end":29472,"name":"JUMPDEST"},{"begin":29429,"end":29495,"name":"LT"},{"begin":29341,"end":29495,"name":"tag","value":"298"},{"begin":29341,"end":29495,"name":"JUMPDEST"},{"begin":29341,"end":29577,"name":"DUP1"},{"begin":29341,"end":29577,"name":"PUSH [tag]","value":"300"},{"begin":29341,"end":29577,"name":"JUMPI"},{"begin":29341,"end":29577,"name":"POP"},{"begin":29557,"end":29577,"name":"DUP10"},{"begin":29519,"end":29554,"name":"PUSH [tag]","value":"301"},{"begin":29530,"end":29535,"name":"DUP13"},{"begin":29530,"end":29546,"name":"PUSH","value":"60"},{"begin":29530,"end":29546,"name":"ADD"},{"begin":29530,"end":29546,"name":"MLOAD"},{"begin":29548,"end":29553,"name":"DUP11"},{"begin":29519,"end":29529,"name":"PUSH [tag]","value":"277"},{"begin":29519,"end":29554,"name":"JUMP","value":"[in]"},{"begin":29519,"end":29554,"name":"tag","value":"301"},{"begin":29519,"end":29554,"name":"JUMPDEST"},{"begin":29519,"end":29577,"name":"LT"},{"begin":29341,"end":29577,"name":"tag","value":"300"},{"begin":29341,"end":29577,"name":"JUMPDEST"},{"begin":29341,"end":29661,"name":"DUP1"},{"begin":29341,"end":29661,"name":"PUSH [tag]","value":"302"},{"begin":29341,"end":29661,"name":"JUMPI"},{"begin":29341,"end":29661,"name":"POP"},{"begin":29641,"end":29661,"name":"DUP10"},{"begin":29601,"end":29638,"name":"PUSH [tag]","value":"303"},{"begin":29614,"end":29619,"name":"DUP13"},{"begin":29614,"end":29630,"name":"PUSH","value":"60"},{"begin":29614,"end":29630,"name":"ADD"},{"begin":29614,"end":29630,"name":"MLOAD"},{"begin":29632,"end":29637,"name":"DUP11"},{"begin":29601,"end":29613,"name":"PUSH [tag]","value":"280"},{"begin":29601,"end":29638,"name":"JUMP","value":"[in]"},{"begin":29601,"end":29638,"name":"tag","value":"303"},{"begin":29601,"end":29638,"name":"JUMPDEST"},{"begin":29601,"end":29661,"name":"LT"},{"begin":29341,"end":29661,"name":"tag","value":"302"},{"begin":29341,"end":29661,"name":"JUMPDEST"},{"begin":29334,"end":29685,"name":"ISZERO"},{"begin":29334,"end":29685,"name":"PUSH [tag]","value":"304"},{"begin":29334,"end":29685,"name":"JUMPI"},{"begin":29680,"end":29685,"name":"PUSH","value":"0"},{"begin":29673,"end":29685,"name":"SWAP9"},{"begin":29673,"end":29685,"name":"POP"},{"begin":29673,"end":29685,"name":"PUSH [tag]","value":"265"},{"begin":29673,"end":29685,"name":"JUMP"},{"begin":29334,"end":29685,"name":"tag","value":"304"},{"begin":29334,"end":29685,"name":"JUMPDEST"},{"begin":27757,"end":29685,"name":"tag","value":"296"},{"begin":27757,"end":29685,"name":"JUMPDEST"},{"begin":29705,"end":29709,"name":"PUSH","value":"1"},{"begin":29698,"end":29709,"name":"SWAP9"},{"begin":29698,"end":29709,"name":"POP"},{"begin":27319,"end":29717,"name":"tag","value":"265"},{"begin":27319,"end":29717,"name":"JUMPDEST"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"SWAP3"},{"begin":27319,"end":29717,"name":"SWAP2"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"POP"},{"begin":27319,"end":29717,"name":"JUMP","value":"[out]"},{"begin":26778,"end":27066,"name":"tag","value":"227"},{"begin":26778,"end":27066,"name":"JUMPDEST"},{"begin":26943,"end":26947,"name":"PUSH","value":"0"},{"begin":26991,"end":27020,"name":"PUSH","value":"1"},{"begin":26991,"end":27020,"name":"PUSH","value":"0"},{"begin":26991,"end":27020,"name":"SWAP1"},{"begin":26991,"end":27020,"name":"SLOAD"},{"begin":26991,"end":27020,"name":"SWAP1"},{"begin":26991,"end":27020,"name":"PUSH","value":"100"},{"begin":26991,"end":27020,"name":"EXP"},{"begin":26991,"end":27020,"name":"SWAP1"},{"begin":26991,"end":27020,"name":"DIV"},{"begin":26991,"end":27020,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26991,"end":27020,"name":"AND"},{"begin":26972,"end":27034,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26972,"end":27034,"name":"AND"},{"begin":26972,"end":27034,"name":"PUSH","value":"15DACBEA"},{"begin":27035,"end":27040,"name":"DUP7"},{"begin":27042,"end":27046,"name":"DUP7"},{"begin":27048,"end":27050,"name":"DUP7"},{"begin":27052,"end":27057,"name":"DUP7"},{"begin":26972,"end":27058,"name":"PUSH","value":"0"},{"begin":26972,"end":27058,"name":"PUSH","value":"40"},{"begin":26972,"end":27058,"name":"MLOAD"},{"begin":26972,"end":27058,"name":"PUSH","value":"20"},{"begin":26972,"end":27058,"name":"ADD"},{"begin":26972,"end":27058,"name":"MSTORE"},{"begin":26972,"end":27058,"name":"PUSH","value":"40"},{"begin":26972,"end":27058,"name":"MLOAD"},{"begin":26972,"end":27058,"name":"DUP6"},{"begin":26972,"end":27058,"name":"PUSH","value":"FFFFFFFF"},{"begin":26972,"end":27058,"name":"AND"},{"begin":26972,"end":27058,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":26972,"end":27058,"name":"MUL"},{"begin":26972,"end":27058,"name":"DUP2"},{"begin":26972,"end":27058,"name":"MSTORE"},{"begin":26972,"end":27058,"name":"PUSH","value":"4"},{"begin":26972,"end":27058,"name":"ADD"},{"begin":26972,"end":27058,"name":"DUP1"},{"begin":26972,"end":27058,"name":"DUP6"},{"begin":26972,"end":27058,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26972,"end":27058,"name":"AND"},{"begin":26972,"end":27058,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26972,"end":27058,"name":"AND"},{"begin":26972,"end":27058,"name":"DUP2"},{"begin":26972,"end":27058,"name":"MSTORE"},{"begin":26972,"end":27058,"name":"PUSH","value":"20"},{"begin":26972,"end":27058,"name":"ADD"},{"begin":26972,"end":27058,"name":"DUP5"},{"begin":26972,"end":27058,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26972,"end":27058,"name":"AND"},{"begin":26972,"end":27058,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26972,"end":27058,"name":"AND"},{"begin":26972,"end":27058,"name":"DUP2"},{"begin":26972,"end":27058,"name":"MSTORE"},{"begin":26972,"end":27058,"name":"PUSH","value":"20"},{"begin":26972,"end":27058,"name":"ADD"},{"begin":26972,"end":27058,"name":"DUP4"},{"begin":26972,"end":27058,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26972,"end":27058,"name":"AND"},{"begin":26972,"end":27058,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":26972,"end":27058,"name":"AND"},{"begin":26972,"end":27058,"name":"DUP2"},{"begin":26972,"end":27058,"name":"MSTORE"},{"begin":26972,"end":27058,"name":"PUSH","value":"20"},{"begin":26972,"end":27058,"name":"ADD"},{"begin":26972,"end":27058,"name":"DUP3"},{"begin":26972,"end":27058,"name":"DUP2"},{"begin":26972,"end":27058,"name":"MSTORE"},{"begin":26972,"end":27058,"name":"PUSH","value":"20"},{"begin":26972,"end":27058,"name":"ADD"},{"begin":26972,"end":27058,"name":"SWAP5"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"PUSH","value":"20"},{"begin":26972,"end":27058,"name":"PUSH","value":"40"},{"begin":26972,"end":27058,"name":"MLOAD"},{"begin":26972,"end":27058,"name":"DUP1"},{"begin":26972,"end":27058,"name":"DUP4"},{"begin":26972,"end":27058,"name":"SUB"},{"begin":26972,"end":27058,"name":"DUP2"},{"begin":26972,"end":27058,"name":"PUSH","value":"0"},{"begin":26972,"end":27058,"name":"DUP8"},{"begin":26972,"end":27058,"name":"DUP1"},{"begin":26972,"end":27058,"name":"EXTCODESIZE"},{"begin":26972,"end":27058,"name":"ISZERO"},{"begin":26972,"end":27058,"name":"ISZERO"},{"begin":26972,"end":27058,"name":"PUSH [tag]","value":"306"},{"begin":26972,"end":27058,"name":"JUMPI"},{"begin":26972,"end":27058,"name":"PUSH","value":"0"},{"begin":26972,"end":27058,"name":"DUP1"},{"begin":26972,"end":27058,"name":"REVERT"},{"begin":26972,"end":27058,"name":"tag","value":"306"},{"begin":26972,"end":27058,"name":"JUMPDEST"},{"begin":26972,"end":27058,"name":"PUSH","value":"2C6"},{"begin":26972,"end":27058,"name":"GAS"},{"begin":26972,"end":27058,"name":"SUB"},{"begin":26972,"end":27058,"name":"CALL"},{"begin":26972,"end":27058,"name":"ISZERO"},{"begin":26972,"end":27058,"name":"ISZERO"},{"begin":26972,"end":27058,"name":"PUSH [tag]","value":"307"},{"begin":26972,"end":27058,"name":"JUMPI"},{"begin":26972,"end":27058,"name":"PUSH","value":"0"},{"begin":26972,"end":27058,"name":"DUP1"},{"begin":26972,"end":27058,"name":"REVERT"},{"begin":26972,"end":27058,"name":"tag","value":"307"},{"begin":26972,"end":27058,"name":"JUMPDEST"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26972,"end":27058,"name":"PUSH","value":"40"},{"begin":26972,"end":27058,"name":"MLOAD"},{"begin":26972,"end":27058,"name":"DUP1"},{"begin":26972,"end":27058,"name":"MLOAD"},{"begin":26972,"end":27058,"name":"SWAP1"},{"begin":26972,"end":27058,"name":"POP"},{"begin":26965,"end":27058,"name":"SWAP1"},{"begin":26965,"end":27058,"name":"POP"},{"begin":26778,"end":27066,"name":"tag","value":"305"},{"begin":26778,"end":27066,"name":"JUMPDEST"},{"begin":26778,"end":27066,"name":"SWAP5"},{"begin":26778,"end":27066,"name":"SWAP4"},{"begin":26778,"end":27066,"name":"POP"},{"begin":26778,"end":27066,"name":"POP"},{"begin":26778,"end":27066,"name":"POP"},{"begin":26778,"end":27066,"name":"POP"},{"begin":26778,"end":27066,"name":"JUMP","value":"[out]"},{"begin":29893,"end":30238,"name":"tag","value":"277"},{"begin":29893,"end":30238,"name":"JUMPDEST"},{"begin":30107,"end":30111,"name":"PUSH","value":"0"},{"begin":30142,"end":30147,"name":"DUP3"},{"begin":30136,"end":30158,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30136,"end":30158,"name":"AND"},{"begin":30136,"end":30158,"name":"PUSH","value":"70A08231"},{"begin":8032,"end":8036,"name":"PUSH","value":"1387"},{"begin":30136,"end":30188,"name":"PUSH","value":"FFFF"},{"begin":30136,"end":30188,"name":"AND"},{"begin":30189,"end":30194,"name":"DUP5"},{"begin":30136,"end":30195,"name":"PUSH","value":"40"},{"begin":30136,"end":30195,"name":"MLOAD"},{"begin":30136,"end":30195,"name":"DUP4"},{"begin":30136,"end":30195,"name":"PUSH","value":"FFFFFFFF"},{"begin":30136,"end":30195,"name":"AND"},{"begin":30136,"end":30195,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":30136,"end":30195,"name":"MUL"},{"begin":30136,"end":30195,"name":"DUP2"},{"begin":30136,"end":30195,"name":"MSTORE"},{"begin":30136,"end":30195,"name":"PUSH","value":"4"},{"begin":30136,"end":30195,"name":"ADD"},{"begin":30136,"end":30195,"name":"DUP1"},{"begin":30136,"end":30195,"name":"DUP3"},{"begin":30136,"end":30195,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30136,"end":30195,"name":"AND"},{"begin":30136,"end":30195,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30136,"end":30195,"name":"AND"},{"begin":30136,"end":30195,"name":"DUP2"},{"begin":30136,"end":30195,"name":"MSTORE"},{"begin":30136,"end":30195,"name":"PUSH","value":"20"},{"begin":30136,"end":30195,"name":"ADD"},{"begin":30136,"end":30195,"name":"SWAP2"},{"begin":30136,"end":30195,"name":"POP"},{"begin":30136,"end":30195,"name":"POP"},{"begin":30136,"end":30195,"name":"PUSH","value":"20"},{"begin":30136,"end":30195,"name":"PUSH","value":"40"},{"begin":30136,"end":30195,"name":"MLOAD"},{"begin":30136,"end":30195,"name":"DUP1"},{"begin":30136,"end":30195,"name":"DUP4"},{"begin":30136,"end":30195,"name":"SUB"},{"begin":30136,"end":30195,"name":"DUP2"},{"begin":30136,"end":30195,"name":"PUSH","value":"0"},{"begin":30136,"end":30195,"name":"DUP9"},{"begin":30136,"end":30195,"name":"DUP1"},{"begin":30136,"end":30195,"name":"EXTCODESIZE"},{"begin":30136,"end":30195,"name":"ISZERO"},{"begin":30136,"end":30195,"name":"ISZERO"},{"begin":30136,"end":30195,"name":"PUSH [tag]","value":"309"},{"begin":30136,"end":30195,"name":"JUMPI"},{"begin":30136,"end":30195,"name":"PUSH","value":"0"},{"begin":30136,"end":30195,"name":"DUP1"},{"begin":30136,"end":30195,"name":"REVERT"},{"begin":30136,"end":30195,"name":"tag","value":"309"},{"begin":30136,"end":30195,"name":"JUMPDEST"},{"begin":30136,"end":30195,"name":"DUP8"},{"begin":30136,"end":30195,"name":"CALL"},{"begin":30136,"end":30195,"name":"ISZERO"},{"begin":30136,"end":30195,"name":"ISZERO"},{"begin":30136,"end":30195,"name":"PUSH [tag]","value":"310"},{"begin":30136,"end":30195,"name":"JUMPI"},{"begin":30136,"end":30195,"name":"PUSH","value":"0"},{"begin":30136,"end":30195,"name":"DUP1"},{"begin":30136,"end":30195,"name":"REVERT"},{"begin":30136,"end":30195,"name":"tag","value":"310"},{"begin":30136,"end":30195,"name":"JUMPDEST"},{"begin":30136,"end":30195,"name":"POP"},{"begin":30136,"end":30195,"name":"POP"},{"begin":30136,"end":30195,"name":"POP"},{"begin":30136,"end":30195,"name":"POP"},{"begin":30136,"end":30195,"name":"PUSH","value":"40"},{"begin":30136,"end":30195,"name":"MLOAD"},{"begin":30136,"end":30195,"name":"DUP1"},{"begin":30136,"end":30195,"name":"MLOAD"},{"begin":30136,"end":30195,"name":"SWAP1"},{"begin":30136,"end":30195,"name":"POP"},{"begin":30129,"end":30195,"name":"SWAP1"},{"begin":30129,"end":30195,"name":"POP"},{"begin":29893,"end":30238,"name":"tag","value":"308"},{"begin":29893,"end":30238,"name":"JUMPDEST"},{"begin":29893,"end":30238,"name":"SWAP3"},{"begin":29893,"end":30238,"name":"SWAP2"},{"begin":29893,"end":30238,"name":"POP"},{"begin":29893,"end":30238,"name":"POP"},{"begin":29893,"end":30238,"name":"JUMP","value":"[out]"},{"begin":30480,"end":30858,"name":"tag","value":"280"},{"begin":30480,"end":30858,"name":"JUMPDEST"},{"begin":30696,"end":30700,"name":"PUSH","value":"0"},{"begin":30731,"end":30736,"name":"DUP3"},{"begin":30725,"end":30747,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30725,"end":30747,"name":"AND"},{"begin":30725,"end":30747,"name":"PUSH","value":"DD62ED3E"},{"begin":8032,"end":8036,"name":"PUSH","value":"1387"},{"begin":30725,"end":30777,"name":"PUSH","value":"FFFF"},{"begin":30725,"end":30777,"name":"AND"},{"begin":30778,"end":30783,"name":"DUP5"},{"begin":30785,"end":30814,"name":"PUSH","value":"1"},{"begin":30785,"end":30814,"name":"PUSH","value":"0"},{"begin":30785,"end":30814,"name":"SWAP1"},{"begin":30785,"end":30814,"name":"SLOAD"},{"begin":30785,"end":30814,"name":"SWAP1"},{"begin":30785,"end":30814,"name":"PUSH","value":"100"},{"begin":30785,"end":30814,"name":"EXP"},{"begin":30785,"end":30814,"name":"SWAP1"},{"begin":30785,"end":30814,"name":"DIV"},{"begin":30785,"end":30814,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30785,"end":30814,"name":"AND"},{"begin":30725,"end":30815,"name":"PUSH","value":"40"},{"begin":30725,"end":30815,"name":"MLOAD"},{"begin":30725,"end":30815,"name":"DUP5"},{"begin":30725,"end":30815,"name":"PUSH","value":"FFFFFFFF"},{"begin":30725,"end":30815,"name":"AND"},{"begin":30725,"end":30815,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":30725,"end":30815,"name":"MUL"},{"begin":30725,"end":30815,"name":"DUP2"},{"begin":30725,"end":30815,"name":"MSTORE"},{"begin":30725,"end":30815,"name":"PUSH","value":"4"},{"begin":30725,"end":30815,"name":"ADD"},{"begin":30725,"end":30815,"name":"DUP1"},{"begin":30725,"end":30815,"name":"DUP4"},{"begin":30725,"end":30815,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30725,"end":30815,"name":"AND"},{"begin":30725,"end":30815,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30725,"end":30815,"name":"AND"},{"begin":30725,"end":30815,"name":"DUP2"},{"begin":30725,"end":30815,"name":"MSTORE"},{"begin":30725,"end":30815,"name":"PUSH","value":"20"},{"begin":30725,"end":30815,"name":"ADD"},{"begin":30725,"end":30815,"name":"DUP3"},{"begin":30725,"end":30815,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30725,"end":30815,"name":"AND"},{"begin":30725,"end":30815,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":30725,"end":30815,"name":"AND"},{"begin":30725,"end":30815,"name":"DUP2"},{"begin":30725,"end":30815,"name":"MSTORE"},{"begin":30725,"end":30815,"name":"PUSH","value":"20"},{"begin":30725,"end":30815,"name":"ADD"},{"begin":30725,"end":30815,"name":"SWAP3"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30725,"end":30815,"name":"PUSH","value":"20"},{"begin":30725,"end":30815,"name":"PUSH","value":"40"},{"begin":30725,"end":30815,"name":"MLOAD"},{"begin":30725,"end":30815,"name":"DUP1"},{"begin":30725,"end":30815,"name":"DUP4"},{"begin":30725,"end":30815,"name":"SUB"},{"begin":30725,"end":30815,"name":"DUP2"},{"begin":30725,"end":30815,"name":"PUSH","value":"0"},{"begin":30725,"end":30815,"name":"DUP9"},{"begin":30725,"end":30815,"name":"DUP1"},{"begin":30725,"end":30815,"name":"EXTCODESIZE"},{"begin":30725,"end":30815,"name":"ISZERO"},{"begin":30725,"end":30815,"name":"ISZERO"},{"begin":30725,"end":30815,"name":"PUSH [tag]","value":"312"},{"begin":30725,"end":30815,"name":"JUMPI"},{"begin":30725,"end":30815,"name":"PUSH","value":"0"},{"begin":30725,"end":30815,"name":"DUP1"},{"begin":30725,"end":30815,"name":"REVERT"},{"begin":30725,"end":30815,"name":"tag","value":"312"},{"begin":30725,"end":30815,"name":"JUMPDEST"},{"begin":30725,"end":30815,"name":"DUP8"},{"begin":30725,"end":30815,"name":"CALL"},{"begin":30725,"end":30815,"name":"ISZERO"},{"begin":30725,"end":30815,"name":"ISZERO"},{"begin":30725,"end":30815,"name":"PUSH [tag]","value":"313"},{"begin":30725,"end":30815,"name":"JUMPI"},{"begin":30725,"end":30815,"name":"PUSH","value":"0"},{"begin":30725,"end":30815,"name":"DUP1"},{"begin":30725,"end":30815,"name":"REVERT"},{"begin":30725,"end":30815,"name":"tag","value":"313"},{"begin":30725,"end":30815,"name":"JUMPDEST"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30725,"end":30815,"name":"PUSH","value":"40"},{"begin":30725,"end":30815,"name":"MLOAD"},{"begin":30725,"end":30815,"name":"DUP1"},{"begin":30725,"end":30815,"name":"MLOAD"},{"begin":30725,"end":30815,"name":"SWAP1"},{"begin":30725,"end":30815,"name":"POP"},{"begin":30718,"end":30815,"name":"SWAP1"},{"begin":30718,"end":30815,"name":"POP"},{"begin":30480,"end":30858,"name":"tag","value":"311"},{"begin":30480,"end":30858,"name":"JUMPDEST"},{"begin":30480,"end":30858,"name":"SWAP3"},{"begin":30480,"end":30858,"name":"SWAP2"},{"begin":30480,"end":30858,"name":"POP"},{"begin":30480,"end":30858,"name":"POP"},{"begin":30480,"end":30858,"name":"JUMP","value":"[out]"},{"begin":7511,"end":30861,"name":"tag","value":"122"},{"begin":7511,"end":30861,"name":"JUMPDEST"},{"begin":7511,"end":30861,"name":"PUSH","value":"160"},{"begin":7511,"end":30861,"name":"PUSH","value":"40"},{"begin":7511,"end":30861,"name":"MLOAD"},{"begin":7511,"end":30861,"name":"SWAP1"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"40"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":7511,"end":30861,"name":"AND"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":7511,"end":30861,"name":"AND"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":7511,"end":30861,"name":"AND"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":7511,"end":30861,"name":"AND"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":7511,"end":30861,"name":"AND"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"PUSH","value":"20"},{"begin":7511,"end":30861,"name":"ADD"},{"begin":7511,"end":30861,"name":"PUSH","value":"0"},{"begin":7511,"end":30861,"name":"DUP1"},{"begin":7511,"end":30861,"name":"NOT"},{"begin":7511,"end":30861,"name":"AND"},{"begin":7511,"end":30861,"name":"DUP2"},{"begin":7511,"end":30861,"name":"MSTORE"},{"begin":7511,"end":30861,"name":"POP"},{"begin":7511,"end":30861,"name":"SWAP1"},{"begin":7511,"end":30861,"name":"JUMP","value":"[out]"}]}}},"methodIdentifiers":{"EXTERNAL_QUERY_GAS_LIMIT()":"f06bbf75","TOKEN_TRANSFER_PROXY_CONTRACT()":"add1cbc5","VERSION()":"ffa1ad74","ZRX_TOKEN_CONTRACT()":"3b30ba59","batchCancelOrders(address[5][],uint256[6][],uint256[])":"baa0181d","batchFillOrKillOrders(address[5][],uint256[6][],uint256[],uint8[],bytes32[],bytes32[])":"4f150787","batchFillOrders(address[5][],uint256[6][],uint256[],bool,uint8[],bytes32[],bytes32[])":"b7b2c7d6","cancelOrder(address[5],uint256[6],uint256)":"394c21e7","cancelled(bytes32)":"2ac12622","fillOrKillOrder(address[5],uint256[6],uint256,uint8,bytes32,bytes32)":"741bcc93","fillOrder(address[5],uint256[6],uint256,bool,uint8,bytes32,bytes32)":"bc61394a","fillOrdersUpTo(address[5][],uint256[6][],uint256,bool,uint8[],bytes32[],bytes32[])":"363349be","filled(bytes32)":"288cdc91","getOrderHash(address[5],uint256[6])":"cfc4d0ec","getPartialAmount(uint256,uint256,uint256)":"98024a8b","getUnavailableTakerTokenAmount(bytes32)":"7e9abb50","isRoundingError(uint256,uint256,uint256)":"14df96ee","isValidSignature(address,bytes32,uint8,bytes32,bytes32)":"8163681e"}},"metadata":"{\"compiler\":{\"version\":\"0.4.14+commit.c2215d46\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"numerator\",\"type\":\"uint256\"},{\"name\":\"denominator\",\"type\":\"uint256\"},{\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"isRoundingError\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"filled\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cancelled\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5][]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6][]\"},{\"name\":\"fillTakerTokenAmount\",\"type\":\"uint256\"},{\"name\":\"shouldThrowOnInsufficientBalanceOrAllowance\",\"type\":\"bool\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"fillOrdersUpTo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6]\"},{\"name\":\"cancelTakerTokenAmount\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZRX_TOKEN_CONTRACT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5][]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6][]\"},{\"name\":\"fillTakerTokenAmounts\",\"type\":\"uint256[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"batchFillOrKillOrders\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6]\"},{\"name\":\"fillTakerTokenAmount\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"fillOrKillOrder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"getUnavailableTakerTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"signer\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"numerator\",\"type\":\"uint256\"},{\"name\":\"denominator\",\"type\":\"uint256\"},{\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"getPartialAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_TRANSFER_PROXY_CONTRACT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5][]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6][]\"},{\"name\":\"fillTakerTokenAmounts\",\"type\":\"uint256[]\"},{\"name\":\"shouldThrowOnInsufficientBalanceOrAllowance\",\"type\":\"bool\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"batchFillOrders\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5][]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6][]\"},{\"name\":\"cancelTakerTokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"batchCancelOrders\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6]\"},{\"name\":\"fillTakerTokenAmount\",\"type\":\"uint256\"},{\"name\":\"shouldThrowOnInsufficientBalanceOrAllowance\",\"type\":\"bool\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"fillOrder\",\"outputs\":[{\"name\":\"filledTakerTokenAmount\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[5]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6]\"}],\"name\":\"getOrderHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXTERNAL_QUERY_GAS_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_zrxToken\",\"type\":\"address\"},{\"name\":\"_tokenTransferProxy\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"feeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"makerToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"takerToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"filledMakerTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"filledTakerTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"paidMakerFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"paidTakerFee\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"tokens\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"LogFill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"feeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"makerToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"takerToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cancelledMakerTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cancelledTakerTokenAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"tokens\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"LogCancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"errorId\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"LogError\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"76171b1f0436460e2604191c1315025815191b\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\\\">[email protected]</a>,>\\r\",\"methods\":{\"batchCancelOrders(address[5][],uint256[6][],uint256[])\":{\"details\":\"Synchronously cancels multiple orders in a single transaction.\\r\",\"params\":{\"cancelTakerTokenAmounts\":\"Array of desired amounts of takerToken to cancel in orders.\\r\",\"orderAddresses\":\"Array of address arrays containing individual order addresses.\\r\",\"orderValues\":\"Array of uint arrays containing individual order values.\\r\"}},\"batchFillOrKillOrders(address[5][],uint256[6][],uint256[],uint8[],bytes32[],bytes32[])\":{\"details\":\"Synchronously executes multiple fillOrKill orders in a single transaction.\\r\",\"params\":{\"fillTakerTokenAmounts\":\"Array of desired amounts of takerToken to fill in orders.\\r\",\"orderAddresses\":\"Array of address arrays containing individual order addresses.\\r\",\"orderValues\":\"Array of uint arrays containing individual order values.\\r\",\"r\":\"Array of ECDSA signature r parameters.\\r\",\"s\":\"Array of ECDSA signature s parameters.\\r\",\"v\":\"Array ECDSA signature v parameters.\\r\"}},\"batchFillOrders(address[5][],uint256[6][],uint256[],bool,uint8[],bytes32[],bytes32[])\":{\"details\":\"Synchronously executes multiple fill orders in a single transaction.\\r\",\"params\":{\"fillTakerTokenAmounts\":\"Array of desired amounts of takerToken to fill in orders.\\r\",\"orderAddresses\":\"Array of address arrays containing individual order addresses.\\r\",\"orderValues\":\"Array of uint arrays containing individual order values.\\r\",\"r\":\"Array of ECDSA signature r parameters.\\r\",\"s\":\"Array of ECDSA signature s parameters.\\r\",\"shouldThrowOnInsufficientBalanceOrAllowance\":\"Test if transfers will fail before attempting.\\r\",\"v\":\"Array ECDSA signature v parameters.\\r\"}},\"cancelOrder(address[5],uint256[6],uint256)\":{\"details\":\"Cancels the input order.\\r\",\"params\":{\"cancelTakerTokenAmount\":\"Desired amount of takerToken to cancel in order.\\r\",\"orderAddresses\":\"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\",\"orderValues\":\"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\"},\"return\":\"Amount of takerToken cancelled.\\r\"},\"fillOrKillOrder(address[5],uint256[6],uint256,uint8,bytes32,bytes32)\":{\"details\":\"Fills an order with specified parameters and ECDSA signature, throws if specified amount not filled entirely.\\r\",\"params\":{\"fillTakerTokenAmount\":\"Desired amount of takerToken to fill.\\r\",\"orderAddresses\":\"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\",\"orderValues\":\"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\",\"r\":\"ECDSA signature parameters r.\\r\",\"s\":\"ECDSA signature parameters s.\\r\",\"v\":\"ECDSA signature parameter v.\\r\"}},\"fillOrder(address[5],uint256[6],uint256,bool,uint8,bytes32,bytes32)\":{\"details\":\"Fills the input order.\\r\",\"params\":{\"fillTakerTokenAmount\":\"Desired amount of takerToken to fill.\\r\",\"orderAddresses\":\"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\",\"orderValues\":\"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\",\"r\":\"ECDSA signature parameters r.\\r\",\"s\":\"ECDSA signature parameters s.\\r\",\"shouldThrowOnInsufficientBalanceOrAllowance\":\"Test if transfer will fail before attempting.\\r\",\"v\":\"ECDSA signature parameter v.\\r\"},\"return\":\"Total amount of takerToken filled in trade.\\r\"},\"fillOrdersUpTo(address[5][],uint256[6][],uint256,bool,uint8[],bytes32[],bytes32[])\":{\"details\":\"Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled.\\r\",\"params\":{\"fillTakerTokenAmount\":\"Desired total amount of takerToken to fill in orders.\\r\",\"orderAddresses\":\"Array of address arrays containing individual order addresses.\\r\",\"orderValues\":\"Array of uint arrays containing individual order values.\\r\",\"r\":\"Array of ECDSA signature r parameters.\\r\",\"s\":\"Array of ECDSA signature s parameters.\\r\",\"shouldThrowOnInsufficientBalanceOrAllowance\":\"Test if transfers will fail before attempting.\\r\",\"v\":\"Array ECDSA signature v parameters.\\r\"},\"return\":\"Total amount of fillTakerTokenAmount filled in orders.\\r\"},\"getOrderHash(address[5],uint256[6])\":{\"details\":\"Calculates Keccak-256 hash of order with specified parameters.\\r\",\"params\":{\"orderAddresses\":\"Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\",\"orderValues\":\"Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\"},\"return\":\"Keccak-256 hash of order.\\r\"},\"getPartialAmount(uint256,uint256,uint256)\":{\"details\":\"Calculates partial value given a numerator and denominator.\\r\",\"params\":{\"denominator\":\"Denominator.\\r\",\"numerator\":\"Numerator.\\r\",\"target\":\"Value to calculate partial of.\\r\"},\"return\":\"Partial value of target.\\r\"},\"getUnavailableTakerTokenAmount(bytes32)\":{\"details\":\"Calculates the sum of values already filled and cancelled for a given order.\\r\",\"params\":{\"orderHash\":\"The Keccak-256 hash of the given order.\\r\"},\"return\":\"Sum of values already filled and cancelled.\\r\"},\"isRoundingError(uint256,uint256,uint256)\":{\"details\":\"Checks if rounding error > 0.1%.\\r\",\"params\":{\"denominator\":\"Denominator.\\r\",\"numerator\":\"Numerator.\\r\",\"target\":\"Value to multiply with numerator/denominator.\\r\"},\"return\":\"Rounding error is present.\\r\"},\"isValidSignature(address,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Verifies that an order signature is valid.\\r\",\"params\":{\"hash\":\"Signed Keccak-256 hash.\\r\",\"r\":\"ECDSA signature parameters r.\\r\",\"s\":\"ECDSA signature parameters s.\\r\",\"signer\":\"address of signer.\\r\",\"v\":\"ECDSA signature parameter v.\\r\"},\"return\":\"Validity of order signature.\\r\"}},\"title\":\"Exchange - Facilitates exchange of ERC20 tokens.\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract\":\"Exchange\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract\":{\"content\":\"/*\\r\\n\\r\\n  Copyright 2017 ZeroEx Intl.\\r\\n\\r\\n  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n  you may not use this file except in compliance with the License.\\r\\n  You may obtain a copy of the License at\\r\\n\\r\\n    http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\n  Unless required by applicable law or agreed to in writing, software\\r\\n  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n  See the License for the specific language governing permissions and\\r\\n  limitations under the License.\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.4.14;\\r\\n\\r\\n/*\\r\\n * Ownable\\r\\n *\\r\\n * Base contract with an owner.\\r\\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\\r\\n */\\r\\ncontract Ownable {\\r\\n    address public owner;\\r\\n\\r\\n    function Ownable() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) onlyOwner {\\r\\n        if (newOwner != address(0)) {\\r\\n            owner = newOwner;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Token {\\r\\n\\r\\n    /// @return total amount of tokens\\r\\n    function totalSupply() constant returns (uint supply) {}\\r\\n\\r\\n    /// @param _owner The address from which the balance will be retrieved\\r\\n    /// @return The balance\\r\\n    function balanceOf(address _owner) constant returns (uint balance) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `msg.sender`\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transfer(address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\r\\n    /// @param _from The address of the sender\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @param _value The amount of wei to be approved for transfer\\r\\n    /// @return Whether the approval was successful or not\\r\\n    function approve(address _spender, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @param _owner The address of the account owning tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @return Amount of remaining tokens allowed to spent\\r\\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\\r\\n\\r\\n    event Transfer(address indexed _from, address indexed _to, uint _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\\r\\n}\\r\\n\\r\\n/// @title TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"5c3d31352e1c6c240c2e3336393f28723f3331\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"35425c595975054d65475a5f5056411b565a58\\\">[email protected]</a>,>\\r\\ncontract TokenTransferProxy is Ownable {\\r\\n\\r\\n    /// @dev Only authorized addresses can invoke functions with this modifier.\\r\\n    modifier onlyAuthorized {\\r\\n        require(authorized[msg.sender]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetAuthorized(address target) {\\r\\n        require(authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetNotAuthorized(address target) {\\r\\n        require(!authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    mapping (address => bool) public authorized;\\r\\n    address[] public authorities;\\r\\n\\r\\n    event LogAuthorizedAddressAdded(address indexed target, address indexed caller);\\r\\n    event LogAuthorizedAddressRemoved(address indexed target, address indexed caller);\\r\\n\\r\\n    /*\\r\\n     * Public functions\\r\\n     */\\r\\n\\r\\n    /// @dev Authorizes an address.\\r\\n    /// @param target Address to authorize.\\r\\n    function addAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetNotAuthorized(target)\\r\\n    {\\r\\n        authorized[target] = true;\\r\\n        authorities.push(target);\\r\\n        LogAuthorizedAddressAdded(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Removes authorizion of an address.\\r\\n    /// @param target Address to remove authorization from.\\r\\n    function removeAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetAuthorized(target)\\r\\n    {\\r\\n        delete authorized[target];\\r\\n        for (uint i = 0; i < authorities.length; i++) {\\r\\n            if (authorities[i] == target) {\\r\\n                authorities[i] = authorities[authorities.length - 1];\\r\\n                authorities.length -= 1;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        LogAuthorizedAddressRemoved(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Calls into ERC20 Token contract, invoking transferFrom.\\r\\n    /// @param token Address of token to transfer.\\r\\n    /// @param from Address to transfer token from.\\r\\n    /// @param to Address to transfer token to.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of transfer.\\r\\n    function transferFrom(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        public\\r\\n        onlyAuthorized\\r\\n        returns (bool)\\r\\n    {\\r\\n        return Token(token).transferFrom(from, to, value);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Public constant functions\\r\\n     */\\r\\n\\r\\n    /// @dev Gets all authorized addresses.\\r\\n    /// @return Array of authorized addresses.\\r\\n    function getAuthorizedAddresses()\\r\\n        public\\r\\n        constant\\r\\n        returns (address[])\\r\\n    {\\r\\n        return authorities;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract SafeMath {\\r\\n    function safeMul(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a * b;\\r\\n        assert(a == 0 || c / a == b);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeDiv(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeSub(uint a, uint b) internal constant returns (uint256) {\\r\\n        assert(b <= a);\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function safeAdd(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a + b;\\r\\n        assert(c >= a);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n\\r\\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @title Exchange - Facilitates exchange of ERC20 tokens.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"76171b1f0436460e2604191c1315025815191b\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\\\">[email protected]</a>,>\\r\\ncontract Exchange is SafeMath {\\r\\n\\r\\n    // Error Codes\\r\\n    enum Errors {\\r\\n        ORDER_EXPIRED,                    // Order has already expired\\r\\n        ORDER_FULLY_FILLED_OR_CANCELLED,  // Order has already been fully filled or cancelled\\r\\n        ROUNDING_ERROR_TOO_LARGE,         // Rounding error too large\\r\\n        INSUFFICIENT_BALANCE_OR_ALLOWANCE // Insufficient balance or allowance for token transfer\\r\\n    }\\r\\n\\r\\n    string constant public VERSION = \\\"1.0.0\\\";\\r\\n    uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999;    // Changes to state require at least 5000 gas\\r\\n\\r\\n    address public ZRX_TOKEN_CONTRACT;\\r\\n    address public TOKEN_TRANSFER_PROXY_CONTRACT;\\r\\n\\r\\n    // Mappings of orderHash => amounts of takerTokenAmount filled or cancelled.\\r\\n    mapping (bytes32 => uint) public filled;\\r\\n    mapping (bytes32 => uint) public cancelled;\\r\\n\\r\\n    event LogFill(\\r\\n        address indexed maker,\\r\\n        address taker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint filledMakerTokenAmount,\\r\\n        uint filledTakerTokenAmount,\\r\\n        uint paidMakerFee,\\r\\n        uint paidTakerFee,\\r\\n        bytes32 indexed tokens, // keccak256(makerToken, takerToken), allows subscribing to a token pair\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogCancel(\\r\\n        address indexed maker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint cancelledMakerTokenAmount,\\r\\n        uint cancelledTakerTokenAmount,\\r\\n        bytes32 indexed tokens,\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogError(uint8 indexed errorId, bytes32 indexed orderHash);\\r\\n\\r\\n    struct Order {\\r\\n        address maker;\\r\\n        address taker;\\r\\n        address makerToken;\\r\\n        address takerToken;\\r\\n        address feeRecipient;\\r\\n        uint makerTokenAmount;\\r\\n        uint takerTokenAmount;\\r\\n        uint makerFee;\\r\\n        uint takerFee;\\r\\n        uint expirationTimestampInSec;\\r\\n        bytes32 orderHash;\\r\\n    }\\r\\n\\r\\n    function Exchange(address _zrxToken, address _tokenTransferProxy) {\\r\\n        ZRX_TOKEN_CONTRACT = _zrxToken;\\r\\n        TOKEN_TRANSFER_PROXY_CONTRACT = _tokenTransferProxy;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Core exchange functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfer will fail before attempting.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Total amount of takerToken filled in trade.\\r\\n    function fillOrder(\\r\\n          address[5] orderAddresses,\\r\\n          uint[6] orderValues,\\r\\n          uint fillTakerTokenAmount,\\r\\n          bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n          uint8 v,\\r\\n          bytes32 r,\\r\\n          bytes32 s)\\r\\n          public\\r\\n          returns (uint filledTakerTokenAmount)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.taker == address(0) || order.taker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0);\\r\\n        require(isValidSignature(\\r\\n            order.maker,\\r\\n            order.orderHash,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ));\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        filledTakerTokenAmount = min256(fillTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (filledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount)) {\\r\\n            LogError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (!shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount)) {\\r\\n            LogError(uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint filledMakerTokenAmount = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n        uint paidMakerFee;\\r\\n        uint paidTakerFee;\\r\\n        filled[order.orderHash] = safeAdd(filled[order.orderHash], filledTakerTokenAmount);\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.makerToken,\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            filledMakerTokenAmount\\r\\n        ));\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.takerToken,\\r\\n            msg.sender,\\r\\n            order.maker,\\r\\n            filledTakerTokenAmount\\r\\n        ));\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            if (order.makerFee > 0) {\\r\\n                paidMakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    order.maker,\\r\\n                    order.feeRecipient,\\r\\n                    paidMakerFee\\r\\n                ));\\r\\n            }\\r\\n            if (order.takerFee > 0) {\\r\\n                paidTakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    msg.sender,\\r\\n                    order.feeRecipient,\\r\\n                    paidTakerFee\\r\\n                ));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        LogFill(\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            filledMakerTokenAmount,\\r\\n            filledTakerTokenAmount,\\r\\n            paidMakerFee,\\r\\n            paidTakerFee,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Cancels the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param cancelTakerTokenAmount Desired amount of takerToken to cancel in order.\\r\\n    /// @return Amount of takerToken cancelled.\\r\\n    function cancelOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint cancelTakerTokenAmount)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.maker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0);\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        uint cancelledTakerTokenAmount = min256(cancelTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (cancelledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        cancelled[order.orderHash] = safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount);\\r\\n\\r\\n        LogCancel(\\r\\n            order.maker,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            getPartialAmount(cancelledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount),\\r\\n            cancelledTakerTokenAmount,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return cancelledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Wrapper functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills an order with specified parameters and ECDSA signature, throws if specified amount not filled entirely.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    function fillOrKillOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n    {\\r\\n        require(fillOrder(\\r\\n            orderAddresses,\\r\\n            orderValues,\\r\\n            fillTakerTokenAmount,\\r\\n            false,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ) == fillTakerTokenAmount);\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fillOrKill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrKillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrKillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmount Desired total amount of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    /// @return Total amount of fillTakerTokenAmount filled in orders.\\r\\n    function fillOrdersUpTo(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint filledTakerTokenAmount = 0;\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            require(orderAddresses[i][3] == orderAddresses[0][3]); // takerToken must be the same for each order\\r\\n            filledTakerTokenAmount = safeAdd(filledTakerTokenAmount, fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                safeSub(fillTakerTokenAmount, filledTakerTokenAmount),\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            ));\\r\\n            if (filledTakerTokenAmount == fillTakerTokenAmount) break;\\r\\n        }\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously cancels multiple orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param cancelTakerTokenAmounts Array of desired amounts of takerToken to cancel in orders.\\r\\n    function batchCancelOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] cancelTakerTokenAmounts)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            cancelOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                cancelTakerTokenAmounts[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Constant public functions\\r\\n    */\\r\\n\\r\\n    /// @dev Calculates Keccak-256 hash of order with specified parameters.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @return Keccak-256 hash of order.\\r\\n    function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\\r\\n        public\\r\\n        constant\\r\\n        returns (bytes32)\\r\\n    {\\r\\n        return keccak256(\\r\\n            address(this),\\r\\n            orderAddresses[0], // maker\\r\\n            orderAddresses[1], // taker\\r\\n            orderAddresses[2], // makerToken\\r\\n            orderAddresses[3], // takerToken\\r\\n            orderAddresses[4], // feeRecipient\\r\\n            orderValues[0],    // makerTokenAmount\\r\\n            orderValues[1],    // takerTokenAmount\\r\\n            orderValues[2],    // makerFee\\r\\n            orderValues[3],    // takerFee\\r\\n            orderValues[4],    // expirationTimestampInSec\\r\\n            orderValues[5]     // salt\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Verifies that an order signature is valid.\\r\\n    /// @param signer address of signer.\\r\\n    /// @param hash Signed Keccak-256 hash.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Validity of order signature.\\r\\n    function isValidSignature(\\r\\n        address signer,\\r\\n        bytes32 hash,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        return signer == ecrecover(\\r\\n            keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash),\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if rounding error > 0.1%.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to multiply with numerator/denominator.\\r\\n    /// @return Rounding error is present.\\r\\n    function isRoundingError(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        uint remainder = mulmod(target, numerator, denominator);\\r\\n        if (remainder == 0) return false; // No rounding error.\\r\\n\\r\\n        uint errPercentageTimes1000000 = safeDiv(\\r\\n            safeMul(remainder, 1000000),\\r\\n            safeMul(numerator, target)\\r\\n        );\\r\\n        return errPercentageTimes1000000 > 1000;\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates partial value given a numerator and denominator.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to calculate partial of.\\r\\n    /// @return Partial value of target.\\r\\n    function getPartialAmount(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeDiv(safeMul(numerator, target), denominator);\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates the sum of values already filled and cancelled for a given order.\\r\\n    /// @param orderHash The Keccak-256 hash of the given order.\\r\\n    /// @return Sum of values already filled and cancelled.\\r\\n    function getUnavailableTakerTokenAmount(bytes32 orderHash)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeAdd(filled[orderHash], cancelled[orderHash]);\\r\\n    }\\r\\n\\r\\n\\r\\n    /*\\r\\n    * Internal functions\\r\\n    */\\r\\n\\r\\n    /// @dev Transfers a token using TokenTransferProxy transferFrom function.\\r\\n    /// @param token Address of token to transferFrom.\\r\\n    /// @param from Address transfering token.\\r\\n    /// @param to Address receiving token.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of token transfer.\\r\\n    function transferViaTokenTransferProxy(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        internal\\r\\n        returns (bool)\\r\\n    {\\r\\n        return TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom(token, from, to, value);\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if any order transfers will fail.\\r\\n    /// @param order Order struct of params that will be checked.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @return Predicted result of transfers.\\r\\n    function isTransferable(Order order, uint fillTakerTokenAmount)\\r\\n        internal\\r\\n        constant  // The called token contracts may attempt to change state, but will not be able to due to gas limits on getBalance and getAllowance.\\r\\n        returns (bool)\\r\\n    {\\r\\n        address taker = msg.sender;\\r\\n        uint fillMakerTokenAmount = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            bool isMakerTokenZRX = order.makerToken == ZRX_TOKEN_CONTRACT;\\r\\n            bool isTakerTokenZRX = order.takerToken == ZRX_TOKEN_CONTRACT;\\r\\n            uint paidMakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n            uint paidTakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n            uint requiredMakerZRX = isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee;\\r\\n            uint requiredTakerZRX = isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee;\\r\\n\\r\\n            if (   getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getBalance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n            ) return false;\\r\\n\\r\\n            if (!isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\\r\\n                                     || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount)\\r\\n            ) return false;\\r\\n            if (!isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\\r\\n                                     || getAllowance(order.takerToken, taker) < fillTakerTokenAmount)\\r\\n            ) return false;\\r\\n        } else if (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getBalance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n                   || getAllowance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n        ) return false;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Get token balance of an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Token balance of owner.\\r\\n    function getBalance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n\\r\\n    /// @dev Get allowance of token given to TokenTransferProxy by an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Allowance of token given to TokenTransferProxy by owner.\\r\\n    function getAllowance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner, TOKEN_TRANSFER_PROXY_CONTRACT); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf60522835e0cfba7dcd772dc909e4589a392543df3bad8f02343dd22188ff228\"}},\"version\":1}","userdoc":{"methods":{}}},"Ownable":{"abi":[{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":false,"type":"constructor"}],"devdoc":{"methods":{}},"evm":{"assembly":"    /* \"contract\":801:1153  contract Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contract\":854:910  function Ownable() {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\ntag_2:\n    /* \"contract\":892:902  msg.sender */\n  caller\n    /* \"contract\":884:889  owner */\n  0x0\n  dup1\n    /* \"contract\":884:902  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract\":854:910  function Ownable() {\r... */\ntag_3:\n    /* \"contract\":801:1153  contract Ownable {\r... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract\":801:1153  contract Ownable {\r... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contract\":825:845  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":1006:1150  function transferOwnership(address newOwner) onlyOwner {\r... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contract\":825:845  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract\":1006:1150  function transferOwnership(address newOwner) onlyOwner {\r... */\n    tag_9:\n        /* \"contract\":972:977  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:968  msg.sender */\n      caller\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":950:978  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contract\":1096:1097  0 */\n      0x0\n        /* \"contract\":1076:1098  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":1076:1084  newOwner */\n      dup2\n        /* \"contract\":1076:1098  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract\":1072:1143  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contract\":1123:1131  newOwner */\n      dup1\n        /* \"contract\":1115:1120  owner */\n      0x0\n      dup1\n        /* \"contract\":1115:1131  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract\":1072:1143  if (newOwner != address(0)) {\r... */\n    tag_13:\n        /* \"contract\":989:990  _ */\n    tag_12:\n        /* \"contract\":1006:1150  function transferOwnership(address newOwner) onlyOwner {\r... */\n    tag_10:\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058207848be34634c27c3f107bdb6ac7deb7dd8c6295d3e3abf88bfe866dd07197cfa0029\n}\n","bytecode":{"linkReferences":{},"object":"6060604052341561000f57600080fd5b5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b6101ff806100616000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610049578063f2fde38b1461009e575b600080fd5b341561005457600080fd5b61005c6100d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a957600080fd5b6100d5600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fc565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101ce57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b505600a165627a7a723058207848be34634c27c3f107bdb6ac7deb7dd8c6295d3e3abf88bfe866dd07197cfa0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 0x1FF DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CE JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH25 0x48BE34634C27C3F107BDB6AC7DEB7DD8C6295D3E3ABF88BFE8 PUSH7 0xDD07197CFA0029 ","sourceMap":"801:352:0:-;;;854:56;;;;;;;;;892:10;884:5;;:18;;;;;;;;;;;;;;;;;;854:56;801:352;;;;;;;"},"deployedBytecode":{"linkReferences":{},"object":"60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610049578063f2fde38b1461009e575b600080fd5b341561005457600080fd5b61005c6100d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a957600080fd5b6100d5600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fc565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101ce57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b505600a165627a7a723058207848be34634c27c3f107bdb6ac7deb7dd8c6295d3e3abf88bfe866dd07197cfa0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CE JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH25 0x48BE34634C27C3F107BDB6AC7DEB7DD8C6295D3E3ABF88BFE8 PUSH7 0xDD07197CFA0029 ","sourceMap":"801:352:0:-;;;;;;;;;;;;;;;;;;;;;;;;825:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:20;;;;;;;;;;;;;:::o;1006:144::-;972:5;;;;;;;;;;;958:19;;:10;:19;;;950:28;;;;;;;;1096:1;1076:22;;:8;:22;;;;1072:71;;;1123:8;1115:5;;:16;;;;;;;;;;;;;;;;;;1072:71;989:1;1006:144;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"102200","executionCost":"20411","totalCost":"122611"},"external":{"owner()":"413","transferOwnership(address)":"20757"}},"legacyAssembly":{".code":[{"begin":801,"end":1153,"name":"PUSH","value":"60"},{"begin":801,"end":1153,"name":"PUSH","value":"40"},{"begin":801,"end":1153,"name":"MSTORE"},{"begin":854,"end":910,"name":"CALLVALUE"},{"begin":854,"end":910,"name":"ISZERO"},{"begin":854,"end":910,"name":"PUSH [tag]","value":"1"},{"begin":854,"end":910,"name":"JUMPI"},{"begin":854,"end":910,"name":"PUSH","value":"0"},{"begin":854,"end":910,"name":"DUP1"},{"begin":854,"end":910,"name":"REVERT"},{"begin":854,"end":910,"name":"tag","value":"1"},{"begin":854,"end":910,"name":"JUMPDEST"},{"begin":854,"end":910,"name":"tag","value":"2"},{"begin":854,"end":910,"name":"JUMPDEST"},{"begin":892,"end":902,"name":"CALLER"},{"begin":884,"end":889,"name":"PUSH","value":"0"},{"begin":884,"end":889,"name":"DUP1"},{"begin":884,"end":902,"name":"PUSH","value":"100"},{"begin":884,"end":902,"name":"EXP"},{"begin":884,"end":902,"name":"DUP2"},{"begin":884,"end":902,"name":"SLOAD"},{"begin":884,"end":902,"name":"DUP2"},{"begin":884,"end":902,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":884,"end":902,"name":"MUL"},{"begin":884,"end":902,"name":"NOT"},{"begin":884,"end":902,"name":"AND"},{"begin":884,"end":902,"name":"SWAP1"},{"begin":884,"end":902,"name":"DUP4"},{"begin":884,"end":902,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":884,"end":902,"name":"AND"},{"begin":884,"end":902,"name":"MUL"},{"begin":884,"end":902,"name":"OR"},{"begin":884,"end":902,"name":"SWAP1"},{"begin":884,"end":902,"name":"SSTORE"},{"begin":884,"end":902,"name":"POP"},{"begin":854,"end":910,"name":"tag","value":"3"},{"begin":854,"end":910,"name":"JUMPDEST"},{"begin":801,"end":1153,"name":"tag","value":"4"},{"begin":801,"end":1153,"name":"JUMPDEST"},{"begin":801,"end":1153,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":801,"end":1153,"name":"DUP1"},{"begin":801,"end":1153,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":801,"end":1153,"name":"PUSH","value":"0"},{"begin":801,"end":1153,"name":"CODECOPY"},{"begin":801,"end":1153,"name":"PUSH","value":"0"},{"begin":801,"end":1153,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a723058207848be34634c27c3f107bdb6ac7deb7dd8c6295d3e3abf88bfe866dd07197cfa0029",".code":[{"begin":801,"end":1153,"name":"PUSH","value":"60"},{"begin":801,"end":1153,"name":"PUSH","value":"40"},{"begin":801,"end":1153,"name":"MSTORE"},{"begin":801,"end":1153,"name":"PUSH","value":"0"},{"begin":801,"end":1153,"name":"CALLDATALOAD"},{"begin":801,"end":1153,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":801,"end":1153,"name":"SWAP1"},{"begin":801,"end":1153,"name":"DIV"},{"begin":801,"end":1153,"name":"PUSH","value":"FFFFFFFF"},{"begin":801,"end":1153,"name":"AND"},{"begin":801,"end":1153,"name":"DUP1"},{"begin":801,"end":1153,"name":"PUSH","value":"8DA5CB5B"},{"begin":801,"end":1153,"name":"EQ"},{"begin":801,"end":1153,"name":"PUSH [tag]","value":"2"},{"begin":801,"end":1153,"name":"JUMPI"},{"begin":801,"end":1153,"name":"DUP1"},{"begin":801,"end":1153,"name":"PUSH","value":"F2FDE38B"},{"begin":801,"end":1153,"name":"EQ"},{"begin":801,"end":1153,"name":"PUSH [tag]","value":"3"},{"begin":801,"end":1153,"name":"JUMPI"},{"begin":801,"end":1153,"name":"tag","value":"1"},{"begin":801,"end":1153,"name":"JUMPDEST"},{"begin":801,"end":1153,"name":"PUSH","value":"0"},{"begin":801,"end":1153,"name":"DUP1"},{"begin":801,"end":1153,"name":"REVERT"},{"begin":825,"end":845,"name":"tag","value":"2"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"CALLVALUE"},{"begin":825,"end":845,"name":"ISZERO"},{"begin":825,"end":845,"name":"PUSH [tag]","value":"4"},{"begin":825,"end":845,"name":"JUMPI"},{"begin":825,"end":845,"name":"PUSH","value":"0"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"REVERT"},{"begin":825,"end":845,"name":"tag","value":"4"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"PUSH [tag]","value":"5"},{"begin":825,"end":845,"name":"PUSH [tag]","value":"6"},{"begin":825,"end":845,"name":"JUMP"},{"begin":825,"end":845,"name":"tag","value":"5"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"PUSH","value":"40"},{"begin":825,"end":845,"name":"MLOAD"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"DUP3"},{"begin":825,"end":845,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":825,"end":845,"name":"AND"},{"begin":825,"end":845,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":825,"end":845,"name":"AND"},{"begin":825,"end":845,"name":"DUP2"},{"begin":825,"end":845,"name":"MSTORE"},{"begin":825,"end":845,"name":"PUSH","value":"20"},{"begin":825,"end":845,"name":"ADD"},{"begin":825,"end":845,"name":"SWAP2"},{"begin":825,"end":845,"name":"POP"},{"begin":825,"end":845,"name":"POP"},{"begin":825,"end":845,"name":"PUSH","value":"40"},{"begin":825,"end":845,"name":"MLOAD"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"SWAP2"},{"begin":825,"end":845,"name":"SUB"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"RETURN"},{"begin":1006,"end":1150,"name":"tag","value":"3"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"CALLVALUE"},{"begin":1006,"end":1150,"name":"ISZERO"},{"begin":1006,"end":1150,"name":"PUSH [tag]","value":"7"},{"begin":1006,"end":1150,"name":"JUMPI"},{"begin":1006,"end":1150,"name":"PUSH","value":"0"},{"begin":1006,"end":1150,"name":"DUP1"},{"begin":1006,"end":1150,"name":"REVERT"},{"begin":1006,"end":1150,"name":"tag","value":"7"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"PUSH [tag]","value":"8"},{"begin":1006,"end":1150,"name":"PUSH","value":"4"},{"begin":1006,"end":1150,"name":"DUP1"},{"begin":1006,"end":1150,"name":"DUP1"},{"begin":1006,"end":1150,"name":"CALLDATALOAD"},{"begin":1006,"end":1150,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1006,"end":1150,"name":"AND"},{"begin":1006,"end":1150,"name":"SWAP1"},{"begin":1006,"end":1150,"name":"PUSH","value":"20"},{"begin":1006,"end":1150,"name":"ADD"},{"begin":1006,"end":1150,"name":"SWAP1"},{"begin":1006,"end":1150,"name":"SWAP2"},{"begin":1006,"end":1150,"name":"SWAP1"},{"begin":1006,"end":1150,"name":"POP"},{"begin":1006,"end":1150,"name":"POP"},{"begin":1006,"end":1150,"name":"PUSH [tag]","value":"9"},{"begin":1006,"end":1150,"name":"JUMP"},{"begin":1006,"end":1150,"name":"tag","value":"8"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"STOP"},{"begin":825,"end":845,"name":"tag","value":"6"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"PUSH","value":"0"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"SLOAD"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"PUSH","value":"100"},{"begin":825,"end":845,"name":"EXP"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"DIV"},{"begin":825,"end":845,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":825,"end":845,"name":"AND"},{"begin":825,"end":845,"name":"DUP2"},{"begin":825,"end":845,"name":"JUMP","value":"[out]"},{"begin":1006,"end":1150,"name":"tag","value":"9"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":972,"end":977,"name":"PUSH","value":"0"},{"begin":972,"end":977,"name":"DUP1"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"SLOAD"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"PUSH","value":"100"},{"begin":972,"end":977,"name":"EXP"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"DIV"},{"begin":972,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":972,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":968,"name":"CALLER"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"EQ"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"PUSH [tag]","value":"11"},{"begin":950,"end":978,"name":"JUMPI"},{"begin":950,"end":978,"name":"PUSH","value":"0"},{"begin":950,"end":978,"name":"DUP1"},{"begin":950,"end":978,"name":"REVERT"},{"begin":950,"end":978,"name":"tag","value":"11"},{"begin":950,"end":978,"name":"JUMPDEST"},{"begin":1096,"end":1097,"name":"PUSH","value":"0"},{"begin":1076,"end":1098,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1076,"end":1098,"name":"AND"},{"begin":1076,"end":1084,"name":"DUP2"},{"begin":1076,"end":1098,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1076,"end":1098,"name":"AND"},{"begin":1076,"end":1098,"name":"EQ"},{"begin":1076,"end":1098,"name":"ISZERO"},{"begin":1072,"end":1143,"name":"ISZERO"},{"begin":1072,"end":1143,"name":"PUSH [tag]","value":"13"},{"begin":1072,"end":1143,"name":"JUMPI"},{"begin":1123,"end":1131,"name":"DUP1"},{"begin":1115,"end":1120,"name":"PUSH","value":"0"},{"begin":1115,"end":1120,"name":"DUP1"},{"begin":1115,"end":1131,"name":"PUSH","value":"100"},{"begin":1115,"end":1131,"name":"EXP"},{"begin":1115,"end":1131,"name":"DUP2"},{"begin":1115,"end":1131,"name":"SLOAD"},{"begin":1115,"end":1131,"name":"DUP2"},{"begin":1115,"end":1131,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1115,"end":1131,"name":"MUL"},{"begin":1115,"end":1131,"name":"NOT"},{"begin":1115,"end":1131,"name":"AND"},{"begin":1115,"end":1131,"name":"SWAP1"},{"begin":1115,"end":1131,"name":"DUP4"},{"begin":1115,"end":1131,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1115,"end":1131,"name":"AND"},{"begin":1115,"end":1131,"name":"MUL"},{"begin":1115,"end":1131,"name":"OR"},{"begin":1115,"end":1131,"name":"SWAP1"},{"begin":1115,"end":1131,"name":"SSTORE"},{"begin":1115,"end":1131,"name":"POP"},{"begin":1072,"end":1143,"name":"tag","value":"13"},{"begin":1072,"end":1143,"name":"JUMPDEST"},{"begin":989,"end":990,"name":"tag","value":"12"},{"begin":989,"end":990,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"tag","value":"10"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"POP"},{"begin":1006,"end":1150,"name":"JUMP","value":"[out]"}]}}},"methodIdentifiers":{"owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.4.14+commit.c2215d46\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract\":{\"content\":\"/*\\r\\n\\r\\n  Copyright 2017 ZeroEx Intl.\\r\\n\\r\\n  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n  you may not use this file except in compliance with the License.\\r\\n  You may obtain a copy of the License at\\r\\n\\r\\n    http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\n  Unless required by applicable law or agreed to in writing, software\\r\\n  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n  See the License for the specific language governing permissions and\\r\\n  limitations under the License.\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.4.14;\\r\\n\\r\\n/*\\r\\n * Ownable\\r\\n *\\r\\n * Base contract with an owner.\\r\\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\\r\\n */\\r\\ncontract Ownable {\\r\\n    address public owner;\\r\\n\\r\\n    function Ownable() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) onlyOwner {\\r\\n        if (newOwner != address(0)) {\\r\\n            owner = newOwner;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Token {\\r\\n\\r\\n    /// @return total amount of tokens\\r\\n    function totalSupply() constant returns (uint supply) {}\\r\\n\\r\\n    /// @param _owner The address from which the balance will be retrieved\\r\\n    /// @return The balance\\r\\n    function balanceOf(address _owner) constant returns (uint balance) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `msg.sender`\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transfer(address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\r\\n    /// @param _from The address of the sender\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @param _value The amount of wei to be approved for transfer\\r\\n    /// @return Whether the approval was successful or not\\r\\n    function approve(address _spender, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @param _owner The address of the account owning tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @return Amount of remaining tokens allowed to spent\\r\\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\\r\\n\\r\\n    event Transfer(address indexed _from, address indexed _to, uint _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\\r\\n}\\r\\n\\r\\n/// @title TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"5c3d31352e1c6c240c2e3336393f28723f3331\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"35425c595975054d65475a5f5056411b565a58\\\">[email protected]</a>,>\\r\\ncontract TokenTransferProxy is Ownable {\\r\\n\\r\\n    /// @dev Only authorized addresses can invoke functions with this modifier.\\r\\n    modifier onlyAuthorized {\\r\\n        require(authorized[msg.sender]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetAuthorized(address target) {\\r\\n        require(authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetNotAuthorized(address target) {\\r\\n        require(!authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    mapping (address => bool) public authorized;\\r\\n    address[] public authorities;\\r\\n\\r\\n    event LogAuthorizedAddressAdded(address indexed target, address indexed caller);\\r\\n    event LogAuthorizedAddressRemoved(address indexed target, address indexed caller);\\r\\n\\r\\n    /*\\r\\n     * Public functions\\r\\n     */\\r\\n\\r\\n    /// @dev Authorizes an address.\\r\\n    /// @param target Address to authorize.\\r\\n    function addAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetNotAuthorized(target)\\r\\n    {\\r\\n        authorized[target] = true;\\r\\n        authorities.push(target);\\r\\n        LogAuthorizedAddressAdded(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Removes authorizion of an address.\\r\\n    /// @param target Address to remove authorization from.\\r\\n    function removeAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetAuthorized(target)\\r\\n    {\\r\\n        delete authorized[target];\\r\\n        for (uint i = 0; i < authorities.length; i++) {\\r\\n            if (authorities[i] == target) {\\r\\n                authorities[i] = authorities[authorities.length - 1];\\r\\n                authorities.length -= 1;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        LogAuthorizedAddressRemoved(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Calls into ERC20 Token contract, invoking transferFrom.\\r\\n    /// @param token Address of token to transfer.\\r\\n    /// @param from Address to transfer token from.\\r\\n    /// @param to Address to transfer token to.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of transfer.\\r\\n    function transferFrom(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        public\\r\\n        onlyAuthorized\\r\\n        returns (bool)\\r\\n    {\\r\\n        return Token(token).transferFrom(from, to, value);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Public constant functions\\r\\n     */\\r\\n\\r\\n    /// @dev Gets all authorized addresses.\\r\\n    /// @return Array of authorized addresses.\\r\\n    function getAuthorizedAddresses()\\r\\n        public\\r\\n        constant\\r\\n        returns (address[])\\r\\n    {\\r\\n        return authorities;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract SafeMath {\\r\\n    function safeMul(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a * b;\\r\\n        assert(a == 0 || c / a == b);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeDiv(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeSub(uint a, uint b) internal constant returns (uint256) {\\r\\n        assert(b <= a);\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function safeAdd(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a + b;\\r\\n        assert(c >= a);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n\\r\\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @title Exchange - Facilitates exchange of ERC20 tokens.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"76171b1f0436460e2604191c1315025815191b\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\\\">[email protected]</a>,>\\r\\ncontract Exchange is SafeMath {\\r\\n\\r\\n    // Error Codes\\r\\n    enum Errors {\\r\\n        ORDER_EXPIRED,                    // Order has already expired\\r\\n        ORDER_FULLY_FILLED_OR_CANCELLED,  // Order has already been fully filled or cancelled\\r\\n        ROUNDING_ERROR_TOO_LARGE,         // Rounding error too large\\r\\n        INSUFFICIENT_BALANCE_OR_ALLOWANCE // Insufficient balance or allowance for token transfer\\r\\n    }\\r\\n\\r\\n    string constant public VERSION = \\\"1.0.0\\\";\\r\\n    uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999;    // Changes to state require at least 5000 gas\\r\\n\\r\\n    address public ZRX_TOKEN_CONTRACT;\\r\\n    address public TOKEN_TRANSFER_PROXY_CONTRACT;\\r\\n\\r\\n    // Mappings of orderHash => amounts of takerTokenAmount filled or cancelled.\\r\\n    mapping (bytes32 => uint) public filled;\\r\\n    mapping (bytes32 => uint) public cancelled;\\r\\n\\r\\n    event LogFill(\\r\\n        address indexed maker,\\r\\n        address taker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint filledMakerTokenAmount,\\r\\n        uint filledTakerTokenAmount,\\r\\n        uint paidMakerFee,\\r\\n        uint paidTakerFee,\\r\\n        bytes32 indexed tokens, // keccak256(makerToken, takerToken), allows subscribing to a token pair\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogCancel(\\r\\n        address indexed maker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint cancelledMakerTokenAmount,\\r\\n        uint cancelledTakerTokenAmount,\\r\\n        bytes32 indexed tokens,\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogError(uint8 indexed errorId, bytes32 indexed orderHash);\\r\\n\\r\\n    struct Order {\\r\\n        address maker;\\r\\n        address taker;\\r\\n        address makerToken;\\r\\n        address takerToken;\\r\\n        address feeRecipient;\\r\\n        uint makerTokenAmount;\\r\\n        uint takerTokenAmount;\\r\\n        uint makerFee;\\r\\n        uint takerFee;\\r\\n        uint expirationTimestampInSec;\\r\\n        bytes32 orderHash;\\r\\n    }\\r\\n\\r\\n    function Exchange(address _zrxToken, address _tokenTransferProxy) {\\r\\n        ZRX_TOKEN_CONTRACT = _zrxToken;\\r\\n        TOKEN_TRANSFER_PROXY_CONTRACT = _tokenTransferProxy;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Core exchange functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfer will fail before attempting.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Total amount of takerToken filled in trade.\\r\\n    function fillOrder(\\r\\n          address[5] orderAddresses,\\r\\n          uint[6] orderValues,\\r\\n          uint fillTakerTokenAmount,\\r\\n          bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n          uint8 v,\\r\\n          bytes32 r,\\r\\n          bytes32 s)\\r\\n          public\\r\\n          returns (uint filledTakerTokenAmount)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.taker == address(0) || order.taker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0);\\r\\n        require(isValidSignature(\\r\\n            order.maker,\\r\\n            order.orderHash,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ));\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        filledTakerTokenAmount = min256(fillTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (filledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount)) {\\r\\n            LogError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (!shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount)) {\\r\\n            LogError(uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint filledMakerTokenAmount = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n        uint paidMakerFee;\\r\\n        uint paidTakerFee;\\r\\n        filled[order.orderHash] = safeAdd(filled[order.orderHash], filledTakerTokenAmount);\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.makerToken,\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            filledMakerTokenAmount\\r\\n        ));\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.takerToken,\\r\\n            msg.sender,\\r\\n            order.maker,\\r\\n            filledTakerTokenAmount\\r\\n        ));\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            if (order.makerFee > 0) {\\r\\n                paidMakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    order.maker,\\r\\n                    order.feeRecipient,\\r\\n                    paidMakerFee\\r\\n                ));\\r\\n            }\\r\\n            if (order.takerFee > 0) {\\r\\n                paidTakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    msg.sender,\\r\\n                    order.feeRecipient,\\r\\n                    paidTakerFee\\r\\n                ));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        LogFill(\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            filledMakerTokenAmount,\\r\\n            filledTakerTokenAmount,\\r\\n            paidMakerFee,\\r\\n            paidTakerFee,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Cancels the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param cancelTakerTokenAmount Desired amount of takerToken to cancel in order.\\r\\n    /// @return Amount of takerToken cancelled.\\r\\n    function cancelOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint cancelTakerTokenAmount)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.maker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0);\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        uint cancelledTakerTokenAmount = min256(cancelTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (cancelledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        cancelled[order.orderHash] = safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount);\\r\\n\\r\\n        LogCancel(\\r\\n            order.maker,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            getPartialAmount(cancelledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount),\\r\\n            cancelledTakerTokenAmount,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return cancelledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Wrapper functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills an order with specified parameters and ECDSA signature, throws if specified amount not filled entirely.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    function fillOrKillOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n    {\\r\\n        require(fillOrder(\\r\\n            orderAddresses,\\r\\n            orderValues,\\r\\n            fillTakerTokenAmount,\\r\\n            false,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ) == fillTakerTokenAmount);\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fillOrKill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrKillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrKillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmount Desired total amount of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    /// @return Total amount of fillTakerTokenAmount filled in orders.\\r\\n    function fillOrdersUpTo(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint filledTakerTokenAmount = 0;\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            require(orderAddresses[i][3] == orderAddresses[0][3]); // takerToken must be the same for each order\\r\\n            filledTakerTokenAmount = safeAdd(filledTakerTokenAmount, fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                safeSub(fillTakerTokenAmount, filledTakerTokenAmount),\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            ));\\r\\n            if (filledTakerTokenAmount == fillTakerTokenAmount) break;\\r\\n        }\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously cancels multiple orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param cancelTakerTokenAmounts Array of desired amounts of takerToken to cancel in orders.\\r\\n    function batchCancelOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] cancelTakerTokenAmounts)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            cancelOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                cancelTakerTokenAmounts[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Constant public functions\\r\\n    */\\r\\n\\r\\n    /// @dev Calculates Keccak-256 hash of order with specified parameters.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @return Keccak-256 hash of order.\\r\\n    function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\\r\\n        public\\r\\n        constant\\r\\n        returns (bytes32)\\r\\n    {\\r\\n        return keccak256(\\r\\n            address(this),\\r\\n            orderAddresses[0], // maker\\r\\n            orderAddresses[1], // taker\\r\\n            orderAddresses[2], // makerToken\\r\\n            orderAddresses[3], // takerToken\\r\\n            orderAddresses[4], // feeRecipient\\r\\n            orderValues[0],    // makerTokenAmount\\r\\n            orderValues[1],    // takerTokenAmount\\r\\n            orderValues[2],    // makerFee\\r\\n            orderValues[3],    // takerFee\\r\\n            orderValues[4],    // expirationTimestampInSec\\r\\n            orderValues[5]     // salt\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Verifies that an order signature is valid.\\r\\n    /// @param signer address of signer.\\r\\n    /// @param hash Signed Keccak-256 hash.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Validity of order signature.\\r\\n    function isValidSignature(\\r\\n        address signer,\\r\\n        bytes32 hash,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        return signer == ecrecover(\\r\\n            keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash),\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if rounding error > 0.1%.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to multiply with numerator/denominator.\\r\\n    /// @return Rounding error is present.\\r\\n    function isRoundingError(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        uint remainder = mulmod(target, numerator, denominator);\\r\\n        if (remainder == 0) return false; // No rounding error.\\r\\n\\r\\n        uint errPercentageTimes1000000 = safeDiv(\\r\\n            safeMul(remainder, 1000000),\\r\\n            safeMul(numerator, target)\\r\\n        );\\r\\n        return errPercentageTimes1000000 > 1000;\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates partial value given a numerator and denominator.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to calculate partial of.\\r\\n    /// @return Partial value of target.\\r\\n    function getPartialAmount(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeDiv(safeMul(numerator, target), denominator);\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates the sum of values already filled and cancelled for a given order.\\r\\n    /// @param orderHash The Keccak-256 hash of the given order.\\r\\n    /// @return Sum of values already filled and cancelled.\\r\\n    function getUnavailableTakerTokenAmount(bytes32 orderHash)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeAdd(filled[orderHash], cancelled[orderHash]);\\r\\n    }\\r\\n\\r\\n\\r\\n    /*\\r\\n    * Internal functions\\r\\n    */\\r\\n\\r\\n    /// @dev Transfers a token using TokenTransferProxy transferFrom function.\\r\\n    /// @param token Address of token to transferFrom.\\r\\n    /// @param from Address transfering token.\\r\\n    /// @param to Address receiving token.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of token transfer.\\r\\n    function transferViaTokenTransferProxy(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        internal\\r\\n        returns (bool)\\r\\n    {\\r\\n        return TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom(token, from, to, value);\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if any order transfers will fail.\\r\\n    /// @param order Order struct of params that will be checked.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @return Predicted result of transfers.\\r\\n    function isTransferable(Order order, uint fillTakerTokenAmount)\\r\\n        internal\\r\\n        constant  // The called token contracts may attempt to change state, but will not be able to due to gas limits on getBalance and getAllowance.\\r\\n        returns (bool)\\r\\n    {\\r\\n        address taker = msg.sender;\\r\\n        uint fillMakerTokenAmount = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            bool isMakerTokenZRX = order.makerToken == ZRX_TOKEN_CONTRACT;\\r\\n            bool isTakerTokenZRX = order.takerToken == ZRX_TOKEN_CONTRACT;\\r\\n            uint paidMakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n            uint paidTakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n            uint requiredMakerZRX = isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee;\\r\\n            uint requiredTakerZRX = isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee;\\r\\n\\r\\n            if (   getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getBalance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n            ) return false;\\r\\n\\r\\n            if (!isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\\r\\n                                     || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount)\\r\\n            ) return false;\\r\\n            if (!isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\\r\\n                                     || getAllowance(order.takerToken, taker) < fillTakerTokenAmount)\\r\\n            ) return false;\\r\\n        } else if (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getBalance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n                   || getAllowance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n        ) return false;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Get token balance of an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Token balance of owner.\\r\\n    function getBalance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n\\r\\n    /// @dev Get allowance of token given to TokenTransferProxy by an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Allowance of token given to TokenTransferProxy by owner.\\r\\n    function getAllowance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner, TOKEN_TRANSFER_PROXY_CONTRACT); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf60522835e0cfba7dcd772dc909e4589a392543df3bad8f02343dd22188ff228\"}},\"version\":1}","userdoc":{"methods":{}}},"SafeMath":{"abi":[],"devdoc":{"methods":{}},"evm":{"assembly":"    /* \"contract\":6040:7122  contract SafeMath {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\ntag_2:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract\":6040:7122  contract SafeMath {\r... */\n      mstore(0x40, 0x60)\n    tag_1:\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582092173c292661af4a5bce6339ef4e2eb0f86d055298ea8b8b76edeedf91649c950029\n}\n","bytecode":{"linkReferences":{},"object":"60606040523415600e57600080fd5b5b603680601c6000396000f30060606040525b600080fd00a165627a7a7230582092173c292661af4a5bce6339ef4e2eb0f86d055298ea8b8b76edeedf91649c950029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x36 DUP1 PUSH1 0x1C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP3 OR EXTCODECOPY 0x29 0x26 PUSH2 0xAF4A JUMPDEST 0xce PUSH4 0x39EF4E2E 0xb0 0xf8 PUSH14 0x55298EA8B8B76EDEEDF91649C95 STOP 0x29 ","sourceMap":"6040:1082:0:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"linkReferences":{},"object":"60606040525b600080fd00a165627a7a7230582092173c292661af4a5bce6339ef4e2eb0f86d055298ea8b8b76edeedf91649c950029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP3 OR EXTCODECOPY 0x29 0x26 PUSH2 0xAF4A JUMPDEST 0xce PUSH4 0x39EF4E2E 0xb0 0xf8 PUSH14 0x55298EA8B8B76EDEEDF91649C95 STOP 0x29 ","sourceMap":"6040:1082:0:-;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"10800","executionCost":"62","totalCost":"10862"},"internal":{"max256(uint256,uint256)":"infinite","max64(uint64,uint64)":"infinite","min256(uint256,uint256)":"infinite","min64(uint64,uint64)":"infinite","safeAdd(uint256,uint256)":"infinite","safeDiv(uint256,uint256)":"infinite","safeMul(uint256,uint256)":"infinite","safeSub(uint256,uint256)":"infinite"}},"legacyAssembly":{".code":[{"begin":6040,"end":7122,"name":"PUSH","value":"60"},{"begin":6040,"end":7122,"name":"PUSH","value":"40"},{"begin":6040,"end":7122,"name":"MSTORE"},{"begin":6040,"end":7122,"name":"CALLVALUE"},{"begin":6040,"end":7122,"name":"ISZERO"},{"begin":6040,"end":7122,"name":"PUSH [tag]","value":"1"},{"begin":6040,"end":7122,"name":"JUMPI"},{"begin":6040,"end":7122,"name":"PUSH","value":"0"},{"begin":6040,"end":7122,"name":"DUP1"},{"begin":6040,"end":7122,"name":"REVERT"},{"begin":6040,"end":7122,"name":"tag","value":"1"},{"begin":6040,"end":7122,"name":"JUMPDEST"},{"begin":6040,"end":7122,"name":"tag","value":"2"},{"begin":6040,"end":7122,"name":"JUMPDEST"},{"begin":6040,"end":7122,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":6040,"end":7122,"name":"DUP1"},{"begin":6040,"end":7122,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":6040,"end":7122,"name":"PUSH","value":"0"},{"begin":6040,"end":7122,"name":"CODECOPY"},{"begin":6040,"end":7122,"name":"PUSH","value":"0"},{"begin":6040,"end":7122,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a7230582092173c292661af4a5bce6339ef4e2eb0f86d055298ea8b8b76edeedf91649c950029",".code":[{"begin":6040,"end":7122,"name":"PUSH","value":"60"},{"begin":6040,"end":7122,"name":"PUSH","value":"40"},{"begin":6040,"end":7122,"name":"MSTORE"},{"begin":6040,"end":7122,"name":"tag","value":"1"},{"begin":6040,"end":7122,"name":"JUMPDEST"},{"begin":6040,"end":7122,"name":"PUSH","value":"0"},{"begin":6040,"end":7122,"name":"DUP1"},{"begin":6040,"end":7122,"name":"REVERT"}]}}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.4.14+commit.c2215d46\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract\":{\"content\":\"/*\\r\\n\\r\\n  Copyright 2017 ZeroEx Intl.\\r\\n\\r\\n  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n  you may not use this file except in compliance with the License.\\r\\n  You may obtain a copy of the License at\\r\\n\\r\\n    http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\n  Unless required by applicable law or agreed to in writing, software\\r\\n  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n  See the License for the specific language governing permissions and\\r\\n  limitations under the License.\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.4.14;\\r\\n\\r\\n/*\\r\\n * Ownable\\r\\n *\\r\\n * Base contract with an owner.\\r\\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\\r\\n */\\r\\ncontract Ownable {\\r\\n    address public owner;\\r\\n\\r\\n    function Ownable() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) onlyOwner {\\r\\n        if (newOwner != address(0)) {\\r\\n            owner = newOwner;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Token {\\r\\n\\r\\n    /// @return total amount of tokens\\r\\n    function totalSupply() constant returns (uint supply) {}\\r\\n\\r\\n    /// @param _owner The address from which the balance will be retrieved\\r\\n    /// @return The balance\\r\\n    function balanceOf(address _owner) constant returns (uint balance) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `msg.sender`\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transfer(address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\r\\n    /// @param _from The address of the sender\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @param _value The amount of wei to be approved for transfer\\r\\n    /// @return Whether the approval was successful or not\\r\\n    function approve(address _spender, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @param _owner The address of the account owning tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @return Amount of remaining tokens allowed to spent\\r\\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\\r\\n\\r\\n    event Transfer(address indexed _from, address indexed _to, uint _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\\r\\n}\\r\\n\\r\\n/// @title TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"5c3d31352e1c6c240c2e3336393f28723f3331\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"35425c595975054d65475a5f5056411b565a58\\\">[email protected]</a>,>\\r\\ncontract TokenTransferProxy is Ownable {\\r\\n\\r\\n    /// @dev Only authorized addresses can invoke functions with this modifier.\\r\\n    modifier onlyAuthorized {\\r\\n        require(authorized[msg.sender]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetAuthorized(address target) {\\r\\n        require(authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetNotAuthorized(address target) {\\r\\n        require(!authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    mapping (address => bool) public authorized;\\r\\n    address[] public authorities;\\r\\n\\r\\n    event LogAuthorizedAddressAdded(address indexed target, address indexed caller);\\r\\n    event LogAuthorizedAddressRemoved(address indexed target, address indexed caller);\\r\\n\\r\\n    /*\\r\\n     * Public functions\\r\\n     */\\r\\n\\r\\n    /// @dev Authorizes an address.\\r\\n    /// @param target Address to authorize.\\r\\n    function addAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetNotAuthorized(target)\\r\\n    {\\r\\n        authorized[target] = true;\\r\\n        authorities.push(target);\\r\\n        LogAuthorizedAddressAdded(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Removes authorizion of an address.\\r\\n    /// @param target Address to remove authorization from.\\r\\n    function removeAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetAuthorized(target)\\r\\n    {\\r\\n        delete authorized[target];\\r\\n        for (uint i = 0; i < authorities.length; i++) {\\r\\n            if (authorities[i] == target) {\\r\\n                authorities[i] = authorities[authorities.length - 1];\\r\\n                authorities.length -= 1;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        LogAuthorizedAddressRemoved(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Calls into ERC20 Token contract, invoking transferFrom.\\r\\n    /// @param token Address of token to transfer.\\r\\n    /// @param from Address to transfer token from.\\r\\n    /// @param to Address to transfer token to.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of transfer.\\r\\n    function transferFrom(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        public\\r\\n        onlyAuthorized\\r\\n        returns (bool)\\r\\n    {\\r\\n        return Token(token).transferFrom(from, to, value);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Public constant functions\\r\\n     */\\r\\n\\r\\n    /// @dev Gets all authorized addresses.\\r\\n    /// @return Array of authorized addresses.\\r\\n    function getAuthorizedAddresses()\\r\\n        public\\r\\n        constant\\r\\n        returns (address[])\\r\\n    {\\r\\n        return authorities;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract SafeMath {\\r\\n    function safeMul(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a * b;\\r\\n        assert(a == 0 || c / a == b);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeDiv(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeSub(uint a, uint b) internal constant returns (uint256) {\\r\\n        assert(b <= a);\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function safeAdd(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a + b;\\r\\n        assert(c >= a);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n\\r\\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @title Exchange - Facilitates exchange of ERC20 tokens.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"76171b1f0436460e2604191c1315025815191b\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\\\">[email protected]</a>,>\\r\\ncontract Exchange is SafeMath {\\r\\n\\r\\n    // Error Codes\\r\\n    enum Errors {\\r\\n        ORDER_EXPIRED,                    // Order has already expired\\r\\n        ORDER_FULLY_FILLED_OR_CANCELLED,  // Order has already been fully filled or cancelled\\r\\n        ROUNDING_ERROR_TOO_LARGE,         // Rounding error too large\\r\\n        INSUFFICIENT_BALANCE_OR_ALLOWANCE // Insufficient balance or allowance for token transfer\\r\\n    }\\r\\n\\r\\n    string constant public VERSION = \\\"1.0.0\\\";\\r\\n    uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999;    // Changes to state require at least 5000 gas\\r\\n\\r\\n    address public ZRX_TOKEN_CONTRACT;\\r\\n    address public TOKEN_TRANSFER_PROXY_CONTRACT;\\r\\n\\r\\n    // Mappings of orderHash => amounts of takerTokenAmount filled or cancelled.\\r\\n    mapping (bytes32 => uint) public filled;\\r\\n    mapping (bytes32 => uint) public cancelled;\\r\\n\\r\\n    event LogFill(\\r\\n        address indexed maker,\\r\\n        address taker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint filledMakerTokenAmount,\\r\\n        uint filledTakerTokenAmount,\\r\\n        uint paidMakerFee,\\r\\n        uint paidTakerFee,\\r\\n        bytes32 indexed tokens, // keccak256(makerToken, takerToken), allows subscribing to a token pair\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogCancel(\\r\\n        address indexed maker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint cancelledMakerTokenAmount,\\r\\n        uint cancelledTakerTokenAmount,\\r\\n        bytes32 indexed tokens,\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogError(uint8 indexed errorId, bytes32 indexed orderHash);\\r\\n\\r\\n    struct Order {\\r\\n        address maker;\\r\\n        address taker;\\r\\n        address makerToken;\\r\\n        address takerToken;\\r\\n        address feeRecipient;\\r\\n        uint makerTokenAmount;\\r\\n        uint takerTokenAmount;\\r\\n        uint makerFee;\\r\\n        uint takerFee;\\r\\n        uint expirationTimestampInSec;\\r\\n        bytes32 orderHash;\\r\\n    }\\r\\n\\r\\n    function Exchange(address _zrxToken, address _tokenTransferProxy) {\\r\\n        ZRX_TOKEN_CONTRACT = _zrxToken;\\r\\n        TOKEN_TRANSFER_PROXY_CONTRACT = _tokenTransferProxy;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Core exchange functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfer will fail before attempting.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Total amount of takerToken filled in trade.\\r\\n    function fillOrder(\\r\\n          address[5] orderAddresses,\\r\\n          uint[6] orderValues,\\r\\n          uint fillTakerTokenAmount,\\r\\n          bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n          uint8 v,\\r\\n          bytes32 r,\\r\\n          bytes32 s)\\r\\n          public\\r\\n          returns (uint filledTakerTokenAmount)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.taker == address(0) || order.taker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0);\\r\\n        require(isValidSignature(\\r\\n            order.maker,\\r\\n            order.orderHash,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ));\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        filledTakerTokenAmount = min256(fillTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (filledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount)) {\\r\\n            LogError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (!shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount)) {\\r\\n            LogError(uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint filledMakerTokenAmount = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n        uint paidMakerFee;\\r\\n        uint paidTakerFee;\\r\\n        filled[order.orderHash] = safeAdd(filled[order.orderHash], filledTakerTokenAmount);\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.makerToken,\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            filledMakerTokenAmount\\r\\n        ));\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.takerToken,\\r\\n            msg.sender,\\r\\n            order.maker,\\r\\n            filledTakerTokenAmount\\r\\n        ));\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            if (order.makerFee > 0) {\\r\\n                paidMakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    order.maker,\\r\\n                    order.feeRecipient,\\r\\n                    paidMakerFee\\r\\n                ));\\r\\n            }\\r\\n            if (order.takerFee > 0) {\\r\\n                paidTakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    msg.sender,\\r\\n                    order.feeRecipient,\\r\\n                    paidTakerFee\\r\\n                ));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        LogFill(\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            filledMakerTokenAmount,\\r\\n            filledTakerTokenAmount,\\r\\n            paidMakerFee,\\r\\n            paidTakerFee,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Cancels the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param cancelTakerTokenAmount Desired amount of takerToken to cancel in order.\\r\\n    /// @return Amount of takerToken cancelled.\\r\\n    function cancelOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint cancelTakerTokenAmount)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.maker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0);\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        uint cancelledTakerTokenAmount = min256(cancelTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (cancelledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        cancelled[order.orderHash] = safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount);\\r\\n\\r\\n        LogCancel(\\r\\n            order.maker,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            getPartialAmount(cancelledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount),\\r\\n            cancelledTakerTokenAmount,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return cancelledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Wrapper functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills an order with specified parameters and ECDSA signature, throws if specified amount not filled entirely.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    function fillOrKillOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n    {\\r\\n        require(fillOrder(\\r\\n            orderAddresses,\\r\\n            orderValues,\\r\\n            fillTakerTokenAmount,\\r\\n            false,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ) == fillTakerTokenAmount);\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fillOrKill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrKillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrKillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmount Desired total amount of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    /// @return Total amount of fillTakerTokenAmount filled in orders.\\r\\n    function fillOrdersUpTo(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint filledTakerTokenAmount = 0;\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            require(orderAddresses[i][3] == orderAddresses[0][3]); // takerToken must be the same for each order\\r\\n            filledTakerTokenAmount = safeAdd(filledTakerTokenAmount, fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                safeSub(fillTakerTokenAmount, filledTakerTokenAmount),\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            ));\\r\\n            if (filledTakerTokenAmount == fillTakerTokenAmount) break;\\r\\n        }\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously cancels multiple orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param cancelTakerTokenAmounts Array of desired amounts of takerToken to cancel in orders.\\r\\n    function batchCancelOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] cancelTakerTokenAmounts)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            cancelOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                cancelTakerTokenAmounts[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Constant public functions\\r\\n    */\\r\\n\\r\\n    /// @dev Calculates Keccak-256 hash of order with specified parameters.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @return Keccak-256 hash of order.\\r\\n    function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\\r\\n        public\\r\\n        constant\\r\\n        returns (bytes32)\\r\\n    {\\r\\n        return keccak256(\\r\\n            address(this),\\r\\n            orderAddresses[0], // maker\\r\\n            orderAddresses[1], // taker\\r\\n            orderAddresses[2], // makerToken\\r\\n            orderAddresses[3], // takerToken\\r\\n            orderAddresses[4], // feeRecipient\\r\\n            orderValues[0],    // makerTokenAmount\\r\\n            orderValues[1],    // takerTokenAmount\\r\\n            orderValues[2],    // makerFee\\r\\n            orderValues[3],    // takerFee\\r\\n            orderValues[4],    // expirationTimestampInSec\\r\\n            orderValues[5]     // salt\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Verifies that an order signature is valid.\\r\\n    /// @param signer address of signer.\\r\\n    /// @param hash Signed Keccak-256 hash.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Validity of order signature.\\r\\n    function isValidSignature(\\r\\n        address signer,\\r\\n        bytes32 hash,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        return signer == ecrecover(\\r\\n            keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash),\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if rounding error > 0.1%.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to multiply with numerator/denominator.\\r\\n    /// @return Rounding error is present.\\r\\n    function isRoundingError(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        uint remainder = mulmod(target, numerator, denominator);\\r\\n        if (remainder == 0) return false; // No rounding error.\\r\\n\\r\\n        uint errPercentageTimes1000000 = safeDiv(\\r\\n            safeMul(remainder, 1000000),\\r\\n            safeMul(numerator, target)\\r\\n        );\\r\\n        return errPercentageTimes1000000 > 1000;\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates partial value given a numerator and denominator.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to calculate partial of.\\r\\n    /// @return Partial value of target.\\r\\n    function getPartialAmount(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeDiv(safeMul(numerator, target), denominator);\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates the sum of values already filled and cancelled for a given order.\\r\\n    /// @param orderHash The Keccak-256 hash of the given order.\\r\\n    /// @return Sum of values already filled and cancelled.\\r\\n    function getUnavailableTakerTokenAmount(bytes32 orderHash)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeAdd(filled[orderHash], cancelled[orderHash]);\\r\\n    }\\r\\n\\r\\n\\r\\n    /*\\r\\n    * Internal functions\\r\\n    */\\r\\n\\r\\n    /// @dev Transfers a token using TokenTransferProxy transferFrom function.\\r\\n    /// @param token Address of token to transferFrom.\\r\\n    /// @param from Address transfering token.\\r\\n    /// @param to Address receiving token.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of token transfer.\\r\\n    function transferViaTokenTransferProxy(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        internal\\r\\n        returns (bool)\\r\\n    {\\r\\n        return TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom(token, from, to, value);\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if any order transfers will fail.\\r\\n    /// @param order Order struct of params that will be checked.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @return Predicted result of transfers.\\r\\n    function isTransferable(Order order, uint fillTakerTokenAmount)\\r\\n        internal\\r\\n        constant  // The called token contracts may attempt to change state, but will not be able to due to gas limits on getBalance and getAllowance.\\r\\n        returns (bool)\\r\\n    {\\r\\n        address taker = msg.sender;\\r\\n        uint fillMakerTokenAmount = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            bool isMakerTokenZRX = order.makerToken == ZRX_TOKEN_CONTRACT;\\r\\n            bool isTakerTokenZRX = order.takerToken == ZRX_TOKEN_CONTRACT;\\r\\n            uint paidMakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n            uint paidTakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n            uint requiredMakerZRX = isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee;\\r\\n            uint requiredTakerZRX = isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee;\\r\\n\\r\\n            if (   getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getBalance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n            ) return false;\\r\\n\\r\\n            if (!isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\\r\\n                                     || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount)\\r\\n            ) return false;\\r\\n            if (!isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\\r\\n                                     || getAllowance(order.takerToken, taker) < fillTakerTokenAmount)\\r\\n            ) return false;\\r\\n        } else if (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getBalance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n                   || getAllowance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n        ) return false;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Get token balance of an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Token balance of owner.\\r\\n    function getBalance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n\\r\\n    /// @dev Get allowance of token given to TokenTransferProxy by an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Allowance of token given to TokenTransferProxy by owner.\\r\\n    function getAllowance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner, TOKEN_TRANSFER_PROXY_CONTRACT); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf60522835e0cfba7dcd772dc909e4589a392543df3bad8f02343dd22188ff228\"}},\"version\":1}","userdoc":{"methods":{}}},"Token":{"abi":[{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"supply","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_owner","type":"address"},{"indexed":true,"name":"_spender","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Approval","type":"event"}],"devdoc":{"methods":{"allowance(address,address)":{"params":{"_owner":"The address of the account owning tokens\r","_spender":"The address of the account able to transfer the tokens\r"},"return":"Amount of remaining tokens allowed to spent\r"},"approve(address,uint256)":{"params":{"_spender":"The address of the account able to transfer the tokens\r","_value":"The amount of wei to be approved for transfer\r"},"return":"Whether the approval was successful or not\r"},"balanceOf(address)":{"params":{"_owner":"The address from which the balance will be retrieved\r"},"return":"The balance\r"},"totalSupply()":{"return":"total amount of tokens\r"},"transfer(address,uint256)":{"params":{"_to":"The address of the recipient\r","_value":"The amount of token to be transferred\r"},"return":"Whether the transfer was successful or not\r"},"transferFrom(address,address,uint256)":{"params":{"_from":"The address of the sender\r","_to":"The address of the recipient\r","_value":"The amount of token to be transferred\r"},"return":"Whether the transfer was successful or not\r"}}},"evm":{"assembly":"    /* \"contract\":1157:3017  contract Token {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\ntag_2:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract\":1157:3017  contract Token {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x95ea7b3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contract\":2475:2548  function approve(address _spender, uint _value) returns (bool success) {} */\n    tag_2:\n      jumpi(tag_8, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_8:\n      tag_9\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":1221:1277  function totalSupply() constant returns (uint supply) {} */\n    tag_3:\n      jumpi(tag_11, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_11:\n      tag_12\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":2098:2186  function transferFrom(address _from, address _to, uint _value) returns (bool success) {} */\n    tag_4:\n      jumpi(tag_14, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_14:\n      tag_15\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":1390:1459  function balanceOf(address _owner) constant returns (uint balance) {} */\n    tag_5:\n      jumpi(tag_17, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_17:\n      tag_18\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":1701:1770  function transfer(address _to, uint _value) returns (bool success) {} */\n    tag_6:\n      jumpi(tag_20, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_20:\n      tag_21\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":2761:2850  function allowance(address _owner, address _spender) constant returns (uint remaining) {} */\n    tag_7:\n      jumpi(tag_23, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_23:\n      tag_24\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":2475:2548  function approve(address _spender, uint _value) returns (bool success) {} */\n    tag_10:\n        /* \"contract\":2532:2544  bool success */\n      0x0\n        /* \"contract\":2475:2548  function approve(address _spender, uint _value) returns (bool success) {} */\n    tag_26:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":1221:1277  function totalSupply() constant returns (uint supply) {} */\n    tag_13:\n        /* \"contract\":1262:1273  uint supply */\n      0x0\n        /* \"contract\":1221:1277  function totalSupply() constant returns (uint supply) {} */\n    tag_27:\n      swap1\n      jump\t// out\n        /* \"contract\":2098:2186  function transferFrom(address _from, address _to, uint _value) returns (bool success) {} */\n    tag_16:\n        /* \"contract\":2170:2182  bool success */\n      0x0\n        /* \"contract\":2098:2186  function transferFrom(address _from, address _to, uint _value) returns (bool success) {} */\n    tag_28:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":1390:1459  function balanceOf(address _owner) constant returns (uint balance) {} */\n    tag_19:\n        /* \"contract\":1443:1455  uint balance */\n      0x0\n        /* \"contract\":1390:1459  function balanceOf(address _owner) constant returns (uint balance) {} */\n    tag_29:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract\":1701:1770  function transfer(address _to, uint _value) returns (bool success) {} */\n    tag_22:\n        /* \"contract\":1754:1766  bool success */\n      0x0\n        /* \"contract\":1701:1770  function transfer(address _to, uint _value) returns (bool success) {} */\n    tag_30:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":2761:2850  function allowance(address _owner, address _spender) constant returns (uint remaining) {} */\n    tag_25:\n        /* \"contract\":2832:2846  uint remaining */\n      0x0\n        /* \"contract\":2761:2850  function allowance(address _owner, address _spender) constant returns (uint remaining) {} */\n    tag_31:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820cca9ef98066cc697390051f000c205fe3719f4c8261dda2b4eb3aeda576e1f250029\n}\n","bytecode":{"linkReferences":{},"object":"6060604052341561000f57600080fd5b5b6102e98061001f6000396000f30060606040523615610076576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461007b57806318160ddd146100d557806323b872dd146100fe57806370a0823114610177578063a9059cbb146101c4578063dd62ed3e1461021e575b600080fd5b341561008657600080fd5b6100bb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061028a565b604051808215151515815260200191505060405180910390f35b34156100e057600080fd5b6100e8610293565b6040518082815260200191505060405180910390f35b341561010957600080fd5b61015d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610299565b604051808215151515815260200191505060405180910390f35b341561018257600080fd5b6101ae600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102a3565b6040518082815260200191505060405180910390f35b34156101cf57600080fd5b610204600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506102ab565b604051808215151515815260200191505060405180910390f35b341561022957600080fd5b610274600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102b4565b6040518082815260200191505060405180910390f35b60005b92915050565b60005b90565b60005b9392505050565b60005b919050565b60005b92915050565b60005b929150505600a165627a7a72305820cca9ef98066cc697390051f000c205fe3719f4c8261dda2b4eb3aeda576e1f250029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH2 0x2E9 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcc 0xa9 0xef SWAP9 MOD PUSH13 0xC697390051F000C205FE3719F4 0xc8 0x26 0x1d 0xda 0x2b 0x4e 0xb3 0xae 0xda JUMPI PUSH15 0x1F2500290000000000000000000000 ","sourceMap":"1157:1860:0:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"linkReferences":{},"object":"60606040523615610076576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461007b57806318160ddd146100d557806323b872dd146100fe57806370a0823114610177578063a9059cbb146101c4578063dd62ed3e1461021e575b600080fd5b341561008657600080fd5b6100bb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061028a565b604051808215151515815260200191505060405180910390f35b34156100e057600080fd5b6100e8610293565b6040518082815260200191505060405180910390f35b341561010957600080fd5b61015d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610299565b604051808215151515815260200191505060405180910390f35b341561018257600080fd5b6101ae600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102a3565b6040518082815260200191505060405180910390f35b34156101cf57600080fd5b610204600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506102ab565b604051808215151515815260200191505060405180910390f35b341561022957600080fd5b610274600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102b4565b6040518082815260200191505060405180910390f35b60005b92915050565b60005b90565b60005b9392505050565b60005b919050565b60005b92915050565b60005b929150505600a165627a7a72305820cca9ef98066cc697390051f000c205fe3719f4c8261dda2b4eb3aeda576e1f250029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcc 0xa9 0xef SWAP9 MOD PUSH13 0xC697390051F000C205FE3719F4 0xc8 0x26 0x1d 0xda 0x2b 0x4e 0xb3 0xae 0xda JUMPI PUSH15 0x1F2500290000000000000000000000 ","sourceMap":"1157:1860:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2761:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:73;2532:12;2475:73;;;;;:::o;1221:56::-;1262:11;1221:56;;:::o;2098:88::-;2170:12;2098:88;;;;;;:::o;1390:69::-;1443:12;1390:69;;;;:::o;1701:::-;1754:12;1701:69;;;;;:::o;2761:89::-;2832:14;2761:89;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"149000","executionCost":"192","totalCost":"149192"},"external":{"allowance(address,address)":"371","approve(address,uint256)":"267","balanceOf(address)":"295","totalSupply()":"206","transfer(address,uint256)":"355","transferFrom(address,address,uint256)":"343"}},"legacyAssembly":{".code":[{"begin":1157,"end":3017,"name":"PUSH","value":"60"},{"begin":1157,"end":3017,"name":"PUSH","value":"40"},{"begin":1157,"end":3017,"name":"MSTORE"},{"begin":1157,"end":3017,"name":"CALLVALUE"},{"begin":1157,"end":3017,"name":"ISZERO"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"1"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"PUSH","value":"0"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"REVERT"},{"begin":1157,"end":3017,"name":"tag","value":"1"},{"begin":1157,"end":3017,"name":"JUMPDEST"},{"begin":1157,"end":3017,"name":"tag","value":"2"},{"begin":1157,"end":3017,"name":"JUMPDEST"},{"begin":1157,"end":3017,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":1157,"end":3017,"name":"PUSH","value":"0"},{"begin":1157,"end":3017,"name":"CODECOPY"},{"begin":1157,"end":3017,"name":"PUSH","value":"0"},{"begin":1157,"end":3017,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a72305820cca9ef98066cc697390051f000c205fe3719f4c8261dda2b4eb3aeda576e1f250029",".code":[{"begin":1157,"end":3017,"name":"PUSH","value":"60"},{"begin":1157,"end":3017,"name":"PUSH","value":"40"},{"begin":1157,"end":3017,"name":"MSTORE"},{"begin":1157,"end":3017,"name":"CALLDATASIZE"},{"begin":1157,"end":3017,"name":"ISZERO"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"1"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"PUSH","value":"0"},{"begin":1157,"end":3017,"name":"CALLDATALOAD"},{"begin":1157,"end":3017,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":1157,"end":3017,"name":"SWAP1"},{"begin":1157,"end":3017,"name":"DIV"},{"begin":1157,"end":3017,"name":"PUSH","value":"FFFFFFFF"},{"begin":1157,"end":3017,"name":"AND"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"PUSH","value":"95EA7B3"},{"begin":1157,"end":3017,"name":"EQ"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"2"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"PUSH","value":"18160DDD"},{"begin":1157,"end":3017,"name":"EQ"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"3"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"PUSH","value":"23B872DD"},{"begin":1157,"end":3017,"name":"EQ"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"4"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"PUSH","value":"70A08231"},{"begin":1157,"end":3017,"name":"EQ"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"5"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"PUSH","value":"A9059CBB"},{"begin":1157,"end":3017,"name":"EQ"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"6"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"PUSH","value":"DD62ED3E"},{"begin":1157,"end":3017,"name":"EQ"},{"begin":1157,"end":3017,"name":"PUSH [tag]","value":"7"},{"begin":1157,"end":3017,"name":"JUMPI"},{"begin":1157,"end":3017,"name":"tag","value":"1"},{"begin":1157,"end":3017,"name":"JUMPDEST"},{"begin":1157,"end":3017,"name":"PUSH","value":"0"},{"begin":1157,"end":3017,"name":"DUP1"},{"begin":1157,"end":3017,"name":"REVERT"},{"begin":2475,"end":2548,"name":"tag","value":"2"},{"begin":2475,"end":2548,"name":"JUMPDEST"},{"begin":2475,"end":2548,"name":"CALLVALUE"},{"begin":2475,"end":2548,"name":"ISZERO"},{"begin":2475,"end":2548,"name":"PUSH [tag]","value":"8"},{"begin":2475,"end":2548,"name":"JUMPI"},{"begin":2475,"end":2548,"name":"PUSH","value":"0"},{"begin":2475,"end":2548,"name":"DUP1"},{"begin":2475,"end":2548,"name":"REVERT"},{"begin":2475,"end":2548,"name":"tag","value":"8"},{"begin":2475,"end":2548,"name":"JUMPDEST"},{"begin":2475,"end":2548,"name":"PUSH [tag]","value":"9"},{"begin":2475,"end":2548,"name":"PUSH","value":"4"},{"begin":2475,"end":2548,"name":"DUP1"},{"begin":2475,"end":2548,"name":"DUP1"},{"begin":2475,"end":2548,"name":"CALLDATALOAD"},{"begin":2475,"end":2548,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2475,"end":2548,"name":"AND"},{"begin":2475,"end":2548,"name":"SWAP1"},{"begin":2475,"end":2548,"name":"PUSH","value":"20"},{"begin":2475,"end":2548,"name":"ADD"},{"begin":2475,"end":2548,"name":"SWAP1"},{"begin":2475,"end":2548,"name":"SWAP2"},{"begin":2475,"end":2548,"name":"SWAP1"},{"begin":2475,"end":2548,"name":"DUP1"},{"begin":2475,"end":2548,"name":"CALLDATALOAD"},{"begin":2475,"end":2548,"name":"SWAP1"},{"begin":2475,"end":2548,"name":"PUSH","value":"20"},{"begin":2475,"end":2548,"name":"ADD"},{"begin":2475,"end":2548,"name":"SWAP1"},{"begin":2475,"end":2548,"name":"SWAP2"},{"begin":2475,"end":2548,"name":"SWAP1"},{"begin":2475,"end":2548,"name":"POP"},{"begin":2475,"end":2548,"name":"POP"},{"begin":2475,"end":2548,"name":"PUSH [tag]","value":"10"},{"begin":2475,"end":2548,"name":"JUMP"},{"begin":2475,"end":2548,"name":"tag","value":"9"},{"begin":2475,"end":2548,"name":"JUMPDEST"},{"begin":2475,"end":2548,"name":"PUSH","value":"40"},{"begin":2475,"end":2548,"name":"MLOAD"},{"begin":2475,"end":2548,"name":"DUP1"},{"begin":2475,"end":2548,"name":"DUP3"},{"begin":2475,"end":2548,"name":"ISZERO"},{"begin":2475,"end":2548,"name":"ISZERO"},{"begin":2475,"end":2548,"name":"ISZERO"},{"begin":2475,"end":2548,"name":"ISZERO"},{"begin":2475,"end":2548,"name":"DUP2"},{"begin":2475,"end":2548,"name":"MSTORE"},{"begin":2475,"end":2548,"name":"PUSH","value":"20"},{"begin":2475,"end":2548,"name":"ADD"},{"begin":2475,"end":2548,"name":"SWAP2"},{"begin":2475,"end":2548,"name":"POP"},{"begin":2475,"end":2548,"name":"POP"},{"begin":2475,"end":2548,"name":"PUSH","value":"40"},{"begin":2475,"end":2548,"name":"MLOAD"},{"begin":2475,"end":2548,"name":"DUP1"},{"begin":2475,"end":2548,"name":"SWAP2"},{"begin":2475,"end":2548,"name":"SUB"},{"begin":2475,"end":2548,"name":"SWAP1"},{"begin":2475,"end":2548,"name":"RETURN"},{"begin":1221,"end":1277,"name":"tag","value":"3"},{"begin":1221,"end":1277,"name":"JUMPDEST"},{"begin":1221,"end":1277,"name":"CALLVALUE"},{"begin":1221,"end":1277,"name":"ISZERO"},{"begin":1221,"end":1277,"name":"PUSH [tag]","value":"11"},{"begin":1221,"end":1277,"name":"JUMPI"},{"begin":1221,"end":1277,"name":"PUSH","value":"0"},{"begin":1221,"end":1277,"name":"DUP1"},{"begin":1221,"end":1277,"name":"REVERT"},{"begin":1221,"end":1277,"name":"tag","value":"11"},{"begin":1221,"end":1277,"name":"JUMPDEST"},{"begin":1221,"end":1277,"name":"PUSH [tag]","value":"12"},{"begin":1221,"end":1277,"name":"PUSH [tag]","value":"13"},{"begin":1221,"end":1277,"name":"JUMP"},{"begin":1221,"end":1277,"name":"tag","value":"12"},{"begin":1221,"end":1277,"name":"JUMPDEST"},{"begin":1221,"end":1277,"name":"PUSH","value":"40"},{"begin":1221,"end":1277,"name":"MLOAD"},{"begin":1221,"end":1277,"name":"DUP1"},{"begin":1221,"end":1277,"name":"DUP3"},{"begin":1221,"end":1277,"name":"DUP2"},{"begin":1221,"end":1277,"name":"MSTORE"},{"begin":1221,"end":1277,"name":"PUSH","value":"20"},{"begin":1221,"end":1277,"name":"ADD"},{"begin":1221,"end":1277,"name":"SWAP2"},{"begin":1221,"end":1277,"name":"POP"},{"begin":1221,"end":1277,"name":"POP"},{"begin":1221,"end":1277,"name":"PUSH","value":"40"},{"begin":1221,"end":1277,"name":"MLOAD"},{"begin":1221,"end":1277,"name":"DUP1"},{"begin":1221,"end":1277,"name":"SWAP2"},{"begin":1221,"end":1277,"name":"SUB"},{"begin":1221,"end":1277,"name":"SWAP1"},{"begin":1221,"end":1277,"name":"RETURN"},{"begin":2098,"end":2186,"name":"tag","value":"4"},{"begin":2098,"end":2186,"name":"JUMPDEST"},{"begin":2098,"end":2186,"name":"CALLVALUE"},{"begin":2098,"end":2186,"name":"ISZERO"},{"begin":2098,"end":2186,"name":"PUSH [tag]","value":"14"},{"begin":2098,"end":2186,"name":"JUMPI"},{"begin":2098,"end":2186,"name":"PUSH","value":"0"},{"begin":2098,"end":2186,"name":"DUP1"},{"begin":2098,"end":2186,"name":"REVERT"},{"begin":2098,"end":2186,"name":"tag","value":"14"},{"begin":2098,"end":2186,"name":"JUMPDEST"},{"begin":2098,"end":2186,"name":"PUSH [tag]","value":"15"},{"begin":2098,"end":2186,"name":"PUSH","value":"4"},{"begin":2098,"end":2186,"name":"DUP1"},{"begin":2098,"end":2186,"name":"DUP1"},{"begin":2098,"end":2186,"name":"CALLDATALOAD"},{"begin":2098,"end":2186,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2098,"end":2186,"name":"AND"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"PUSH","value":"20"},{"begin":2098,"end":2186,"name":"ADD"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"SWAP2"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"DUP1"},{"begin":2098,"end":2186,"name":"CALLDATALOAD"},{"begin":2098,"end":2186,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2098,"end":2186,"name":"AND"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"PUSH","value":"20"},{"begin":2098,"end":2186,"name":"ADD"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"SWAP2"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"DUP1"},{"begin":2098,"end":2186,"name":"CALLDATALOAD"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"PUSH","value":"20"},{"begin":2098,"end":2186,"name":"ADD"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"SWAP2"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"POP"},{"begin":2098,"end":2186,"name":"POP"},{"begin":2098,"end":2186,"name":"PUSH [tag]","value":"16"},{"begin":2098,"end":2186,"name":"JUMP"},{"begin":2098,"end":2186,"name":"tag","value":"15"},{"begin":2098,"end":2186,"name":"JUMPDEST"},{"begin":2098,"end":2186,"name":"PUSH","value":"40"},{"begin":2098,"end":2186,"name":"MLOAD"},{"begin":2098,"end":2186,"name":"DUP1"},{"begin":2098,"end":2186,"name":"DUP3"},{"begin":2098,"end":2186,"name":"ISZERO"},{"begin":2098,"end":2186,"name":"ISZERO"},{"begin":2098,"end":2186,"name":"ISZERO"},{"begin":2098,"end":2186,"name":"ISZERO"},{"begin":2098,"end":2186,"name":"DUP2"},{"begin":2098,"end":2186,"name":"MSTORE"},{"begin":2098,"end":2186,"name":"PUSH","value":"20"},{"begin":2098,"end":2186,"name":"ADD"},{"begin":2098,"end":2186,"name":"SWAP2"},{"begin":2098,"end":2186,"name":"POP"},{"begin":2098,"end":2186,"name":"POP"},{"begin":2098,"end":2186,"name":"PUSH","value":"40"},{"begin":2098,"end":2186,"name":"MLOAD"},{"begin":2098,"end":2186,"name":"DUP1"},{"begin":2098,"end":2186,"name":"SWAP2"},{"begin":2098,"end":2186,"name":"SUB"},{"begin":2098,"end":2186,"name":"SWAP1"},{"begin":2098,"end":2186,"name":"RETURN"},{"begin":1390,"end":1459,"name":"tag","value":"5"},{"begin":1390,"end":1459,"name":"JUMPDEST"},{"begin":1390,"end":1459,"name":"CALLVALUE"},{"begin":1390,"end":1459,"name":"ISZERO"},{"begin":1390,"end":1459,"name":"PUSH [tag]","value":"17"},{"begin":1390,"end":1459,"name":"JUMPI"},{"begin":1390,"end":1459,"name":"PUSH","value":"0"},{"begin":1390,"end":1459,"name":"DUP1"},{"begin":1390,"end":1459,"name":"REVERT"},{"begin":1390,"end":1459,"name":"tag","value":"17"},{"begin":1390,"end":1459,"name":"JUMPDEST"},{"begin":1390,"end":1459,"name":"PUSH [tag]","value":"18"},{"begin":1390,"end":1459,"name":"PUSH","value":"4"},{"begin":1390,"end":1459,"name":"DUP1"},{"begin":1390,"end":1459,"name":"DUP1"},{"begin":1390,"end":1459,"name":"CALLDATALOAD"},{"begin":1390,"end":1459,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1390,"end":1459,"name":"AND"},{"begin":1390,"end":1459,"name":"SWAP1"},{"begin":1390,"end":1459,"name":"PUSH","value":"20"},{"begin":1390,"end":1459,"name":"ADD"},{"begin":1390,"end":1459,"name":"SWAP1"},{"begin":1390,"end":1459,"name":"SWAP2"},{"begin":1390,"end":1459,"name":"SWAP1"},{"begin":1390,"end":1459,"name":"POP"},{"begin":1390,"end":1459,"name":"POP"},{"begin":1390,"end":1459,"name":"PUSH [tag]","value":"19"},{"begin":1390,"end":1459,"name":"JUMP"},{"begin":1390,"end":1459,"name":"tag","value":"18"},{"begin":1390,"end":1459,"name":"JUMPDEST"},{"begin":1390,"end":1459,"name":"PUSH","value":"40"},{"begin":1390,"end":1459,"name":"MLOAD"},{"begin":1390,"end":1459,"name":"DUP1"},{"begin":1390,"end":1459,"name":"DUP3"},{"begin":1390,"end":1459,"name":"DUP2"},{"begin":1390,"end":1459,"name":"MSTORE"},{"begin":1390,"end":1459,"name":"PUSH","value":"20"},{"begin":1390,"end":1459,"name":"ADD"},{"begin":1390,"end":1459,"name":"SWAP2"},{"begin":1390,"end":1459,"name":"POP"},{"begin":1390,"end":1459,"name":"POP"},{"begin":1390,"end":1459,"name":"PUSH","value":"40"},{"begin":1390,"end":1459,"name":"MLOAD"},{"begin":1390,"end":1459,"name":"DUP1"},{"begin":1390,"end":1459,"name":"SWAP2"},{"begin":1390,"end":1459,"name":"SUB"},{"begin":1390,"end":1459,"name":"SWAP1"},{"begin":1390,"end":1459,"name":"RETURN"},{"begin":1701,"end":1770,"name":"tag","value":"6"},{"begin":1701,"end":1770,"name":"JUMPDEST"},{"begin":1701,"end":1770,"name":"CALLVALUE"},{"begin":1701,"end":1770,"name":"ISZERO"},{"begin":1701,"end":1770,"name":"PUSH [tag]","value":"20"},{"begin":1701,"end":1770,"name":"JUMPI"},{"begin":1701,"end":1770,"name":"PUSH","value":"0"},{"begin":1701,"end":1770,"name":"DUP1"},{"begin":1701,"end":1770,"name":"REVERT"},{"begin":1701,"end":1770,"name":"tag","value":"20"},{"begin":1701,"end":1770,"name":"JUMPDEST"},{"begin":1701,"end":1770,"name":"PUSH [tag]","value":"21"},{"begin":1701,"end":1770,"name":"PUSH","value":"4"},{"begin":1701,"end":1770,"name":"DUP1"},{"begin":1701,"end":1770,"name":"DUP1"},{"begin":1701,"end":1770,"name":"CALLDATALOAD"},{"begin":1701,"end":1770,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1701,"end":1770,"name":"AND"},{"begin":1701,"end":1770,"name":"SWAP1"},{"begin":1701,"end":1770,"name":"PUSH","value":"20"},{"begin":1701,"end":1770,"name":"ADD"},{"begin":1701,"end":1770,"name":"SWAP1"},{"begin":1701,"end":1770,"name":"SWAP2"},{"begin":1701,"end":1770,"name":"SWAP1"},{"begin":1701,"end":1770,"name":"DUP1"},{"begin":1701,"end":1770,"name":"CALLDATALOAD"},{"begin":1701,"end":1770,"name":"SWAP1"},{"begin":1701,"end":1770,"name":"PUSH","value":"20"},{"begin":1701,"end":1770,"name":"ADD"},{"begin":1701,"end":1770,"name":"SWAP1"},{"begin":1701,"end":1770,"name":"SWAP2"},{"begin":1701,"end":1770,"name":"SWAP1"},{"begin":1701,"end":1770,"name":"POP"},{"begin":1701,"end":1770,"name":"POP"},{"begin":1701,"end":1770,"name":"PUSH [tag]","value":"22"},{"begin":1701,"end":1770,"name":"JUMP"},{"begin":1701,"end":1770,"name":"tag","value":"21"},{"begin":1701,"end":1770,"name":"JUMPDEST"},{"begin":1701,"end":1770,"name":"PUSH","value":"40"},{"begin":1701,"end":1770,"name":"MLOAD"},{"begin":1701,"end":1770,"name":"DUP1"},{"begin":1701,"end":1770,"name":"DUP3"},{"begin":1701,"end":1770,"name":"ISZERO"},{"begin":1701,"end":1770,"name":"ISZERO"},{"begin":1701,"end":1770,"name":"ISZERO"},{"begin":1701,"end":1770,"name":"ISZERO"},{"begin":1701,"end":1770,"name":"DUP2"},{"begin":1701,"end":1770,"name":"MSTORE"},{"begin":1701,"end":1770,"name":"PUSH","value":"20"},{"begin":1701,"end":1770,"name":"ADD"},{"begin":1701,"end":1770,"name":"SWAP2"},{"begin":1701,"end":1770,"name":"POP"},{"begin":1701,"end":1770,"name":"POP"},{"begin":1701,"end":1770,"name":"PUSH","value":"40"},{"begin":1701,"end":1770,"name":"MLOAD"},{"begin":1701,"end":1770,"name":"DUP1"},{"begin":1701,"end":1770,"name":"SWAP2"},{"begin":1701,"end":1770,"name":"SUB"},{"begin":1701,"end":1770,"name":"SWAP1"},{"begin":1701,"end":1770,"name":"RETURN"},{"begin":2761,"end":2850,"name":"tag","value":"7"},{"begin":2761,"end":2850,"name":"JUMPDEST"},{"begin":2761,"end":2850,"name":"CALLVALUE"},{"begin":2761,"end":2850,"name":"ISZERO"},{"begin":2761,"end":2850,"name":"PUSH [tag]","value":"23"},{"begin":2761,"end":2850,"name":"JUMPI"},{"begin":2761,"end":2850,"name":"PUSH","value":"0"},{"begin":2761,"end":2850,"name":"DUP1"},{"begin":2761,"end":2850,"name":"REVERT"},{"begin":2761,"end":2850,"name":"tag","value":"23"},{"begin":2761,"end":2850,"name":"JUMPDEST"},{"begin":2761,"end":2850,"name":"PUSH [tag]","value":"24"},{"begin":2761,"end":2850,"name":"PUSH","value":"4"},{"begin":2761,"end":2850,"name":"DUP1"},{"begin":2761,"end":2850,"name":"DUP1"},{"begin":2761,"end":2850,"name":"CALLDATALOAD"},{"begin":2761,"end":2850,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2761,"end":2850,"name":"AND"},{"begin":2761,"end":2850,"name":"SWAP1"},{"begin":2761,"end":2850,"name":"PUSH","value":"20"},{"begin":2761,"end":2850,"name":"ADD"},{"begin":2761,"end":2850,"name":"SWAP1"},{"begin":2761,"end":2850,"name":"SWAP2"},{"begin":2761,"end":2850,"name":"SWAP1"},{"begin":2761,"end":2850,"name":"DUP1"},{"begin":2761,"end":2850,"name":"CALLDATALOAD"},{"begin":2761,"end":2850,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":2761,"end":2850,"name":"AND"},{"begin":2761,"end":2850,"name":"SWAP1"},{"begin":2761,"end":2850,"name":"PUSH","value":"20"},{"begin":2761,"end":2850,"name":"ADD"},{"begin":2761,"end":2850,"name":"SWAP1"},{"begin":2761,"end":2850,"name":"SWAP2"},{"begin":2761,"end":2850,"name":"SWAP1"},{"begin":2761,"end":2850,"name":"POP"},{"begin":2761,"end":2850,"name":"POP"},{"begin":2761,"end":2850,"name":"PUSH [tag]","value":"25"},{"begin":2761,"end":2850,"name":"JUMP"},{"begin":2761,"end":2850,"name":"tag","value":"24"},{"begin":2761,"end":2850,"name":"JUMPDEST"},{"begin":2761,"end":2850,"name":"PUSH","value":"40"},{"begin":2761,"end":2850,"name":"MLOAD"},{"begin":2761,"end":2850,"name":"DUP1"},{"begin":2761,"end":2850,"name":"DUP3"},{"begin":2761,"end":2850,"name":"DUP2"},{"begin":2761,"end":2850,"name":"MSTORE"},{"begin":2761,"end":2850,"name":"PUSH","value":"20"},{"begin":2761,"end":2850,"name":"ADD"},{"begin":2761,"end":2850,"name":"SWAP2"},{"begin":2761,"end":2850,"name":"POP"},{"begin":2761,"end":2850,"name":"POP"},{"begin":2761,"end":2850,"name":"PUSH","value":"40"},{"begin":2761,"end":2850,"name":"MLOAD"},{"begin":2761,"end":2850,"name":"DUP1"},{"begin":2761,"end":2850,"name":"SWAP2"},{"begin":2761,"end":2850,"name":"SUB"},{"begin":2761,"end":2850,"name":"SWAP1"},{"begin":2761,"end":2850,"name":"RETURN"},{"begin":2475,"end":2548,"name":"tag","value":"10"},{"begin":2475,"end":2548,"name":"JUMPDEST"},{"begin":2532,"end":2544,"name":"PUSH","value":"0"},{"begin":2475,"end":2548,"name":"tag","value":"26"},{"begin":2475,"end":2548,"name":"JUMPDEST"},{"begin":2475,"end":2548,"name":"SWAP3"},{"begin":2475,"end":2548,"name":"SWAP2"},{"begin":2475,"end":2548,"name":"POP"},{"begin":2475,"end":2548,"name":"POP"},{"begin":2475,"end":2548,"name":"JUMP","value":"[out]"},{"begin":1221,"end":1277,"name":"tag","value":"13"},{"begin":1221,"end":1277,"name":"JUMPDEST"},{"begin":1262,"end":1273,"name":"PUSH","value":"0"},{"begin":1221,"end":1277,"name":"tag","value":"27"},{"begin":1221,"end":1277,"name":"JUMPDEST"},{"begin":1221,"end":1277,"name":"SWAP1"},{"begin":1221,"end":1277,"name":"JUMP","value":"[out]"},{"begin":2098,"end":2186,"name":"tag","value":"16"},{"begin":2098,"end":2186,"name":"JUMPDEST"},{"begin":2170,"end":2182,"name":"PUSH","value":"0"},{"begin":2098,"end":2186,"name":"tag","value":"28"},{"begin":2098,"end":2186,"name":"JUMPDEST"},{"begin":2098,"end":2186,"name":"SWAP4"},{"begin":2098,"end":2186,"name":"SWAP3"},{"begin":2098,"end":2186,"name":"POP"},{"begin":2098,"end":2186,"name":"POP"},{"begin":2098,"end":2186,"name":"POP"},{"begin":2098,"end":2186,"name":"JUMP","value":"[out]"},{"begin":1390,"end":1459,"name":"tag","value":"19"},{"begin":1390,"end":1459,"name":"JUMPDEST"},{"begin":1443,"end":1455,"name":"PUSH","value":"0"},{"begin":1390,"end":1459,"name":"tag","value":"29"},{"begin":1390,"end":1459,"name":"JUMPDEST"},{"begin":1390,"end":1459,"name":"SWAP2"},{"begin":1390,"end":1459,"name":"SWAP1"},{"begin":1390,"end":1459,"name":"POP"},{"begin":1390,"end":1459,"name":"JUMP","value":"[out]"},{"begin":1701,"end":1770,"name":"tag","value":"22"},{"begin":1701,"end":1770,"name":"JUMPDEST"},{"begin":1754,"end":1766,"name":"PUSH","value":"0"},{"begin":1701,"end":1770,"name":"tag","value":"30"},{"begin":1701,"end":1770,"name":"JUMPDEST"},{"begin":1701,"end":1770,"name":"SWAP3"},{"begin":1701,"end":1770,"name":"SWAP2"},{"begin":1701,"end":1770,"name":"POP"},{"begin":1701,"end":1770,"name":"POP"},{"begin":1701,"end":1770,"name":"JUMP","value":"[out]"},{"begin":2761,"end":2850,"name":"tag","value":"25"},{"begin":2761,"end":2850,"name":"JUMPDEST"},{"begin":2832,"end":2846,"name":"PUSH","value":"0"},{"begin":2761,"end":2850,"name":"tag","value":"31"},{"begin":2761,"end":2850,"name":"JUMPDEST"},{"begin":2761,"end":2850,"name":"SWAP3"},{"begin":2761,"end":2850,"name":"SWAP2"},{"begin":2761,"end":2850,"name":"POP"},{"begin":2761,"end":2850,"name":"POP"},{"begin":2761,"end":2850,"name":"JUMP","value":"[out]"}]}}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.4.14+commit.c2215d46\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"The address of the account owning tokens\\r\",\"_spender\":\"The address of the account able to transfer the tokens\\r\"},\"return\":\"Amount of remaining tokens allowed to spent\\r\"},\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The address of the account able to transfer the tokens\\r\",\"_value\":\"The amount of wei to be approved for transfer\\r\"},\"return\":\"Whether the approval was successful or not\\r\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address from which the balance will be retrieved\\r\"},\"return\":\"The balance\\r\"},\"totalSupply()\":{\"return\":\"total amount of tokens\\r\"},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the recipient\\r\",\"_value\":\"The amount of token to be transferred\\r\"},\"return\":\"Whether the transfer was successful or not\\r\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\\r\",\"_to\":\"The address of the recipient\\r\",\"_value\":\"The amount of token to be transferred\\r\"},\"return\":\"Whether the transfer was successful or not\\r\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_addr` to spend `_value` tokens\\r\"},\"transfer(address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `msg.sender`\\r\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contract\":\"Token\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract\":{\"content\":\"/*\\r\\n\\r\\n  Copyright 2017 ZeroEx Intl.\\r\\n\\r\\n  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n  you may not use this file except in compliance with the License.\\r\\n  You may obtain a copy of the License at\\r\\n\\r\\n    http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\n  Unless required by applicable law or agreed to in writing, software\\r\\n  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n  See the License for the specific language governing permissions and\\r\\n  limitations under the License.\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.4.14;\\r\\n\\r\\n/*\\r\\n * Ownable\\r\\n *\\r\\n * Base contract with an owner.\\r\\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\\r\\n */\\r\\ncontract Ownable {\\r\\n    address public owner;\\r\\n\\r\\n    function Ownable() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) onlyOwner {\\r\\n        if (newOwner != address(0)) {\\r\\n            owner = newOwner;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Token {\\r\\n\\r\\n    /// @return total amount of tokens\\r\\n    function totalSupply() constant returns (uint supply) {}\\r\\n\\r\\n    /// @param _owner The address from which the balance will be retrieved\\r\\n    /// @return The balance\\r\\n    function balanceOf(address _owner) constant returns (uint balance) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `msg.sender`\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transfer(address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\r\\n    /// @param _from The address of the sender\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @param _value The amount of wei to be approved for transfer\\r\\n    /// @return Whether the approval was successful or not\\r\\n    function approve(address _spender, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @param _owner The address of the account owning tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @return Amount of remaining tokens allowed to spent\\r\\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\\r\\n\\r\\n    event Transfer(address indexed _from, address indexed _to, uint _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\\r\\n}\\r\\n\\r\\n/// @title TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"5c3d31352e1c6c240c2e3336393f28723f3331\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"35425c595975054d65475a5f5056411b565a58\\\">[email protected]</a>,>\\r\\ncontract TokenTransferProxy is Ownable {\\r\\n\\r\\n    /// @dev Only authorized addresses can invoke functions with this modifier.\\r\\n    modifier onlyAuthorized {\\r\\n        require(authorized[msg.sender]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetAuthorized(address target) {\\r\\n        require(authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetNotAuthorized(address target) {\\r\\n        require(!authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    mapping (address => bool) public authorized;\\r\\n    address[] public authorities;\\r\\n\\r\\n    event LogAuthorizedAddressAdded(address indexed target, address indexed caller);\\r\\n    event LogAuthorizedAddressRemoved(address indexed target, address indexed caller);\\r\\n\\r\\n    /*\\r\\n     * Public functions\\r\\n     */\\r\\n\\r\\n    /// @dev Authorizes an address.\\r\\n    /// @param target Address to authorize.\\r\\n    function addAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetNotAuthorized(target)\\r\\n    {\\r\\n        authorized[target] = true;\\r\\n        authorities.push(target);\\r\\n        LogAuthorizedAddressAdded(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Removes authorizion of an address.\\r\\n    /// @param target Address to remove authorization from.\\r\\n    function removeAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetAuthorized(target)\\r\\n    {\\r\\n        delete authorized[target];\\r\\n        for (uint i = 0; i < authorities.length; i++) {\\r\\n            if (authorities[i] == target) {\\r\\n                authorities[i] = authorities[authorities.length - 1];\\r\\n                authorities.length -= 1;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        LogAuthorizedAddressRemoved(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Calls into ERC20 Token contract, invoking transferFrom.\\r\\n    /// @param token Address of token to transfer.\\r\\n    /// @param from Address to transfer token from.\\r\\n    /// @param to Address to transfer token to.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of transfer.\\r\\n    function transferFrom(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        public\\r\\n        onlyAuthorized\\r\\n        returns (bool)\\r\\n    {\\r\\n        return Token(token).transferFrom(from, to, value);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Public constant functions\\r\\n     */\\r\\n\\r\\n    /// @dev Gets all authorized addresses.\\r\\n    /// @return Array of authorized addresses.\\r\\n    function getAuthorizedAddresses()\\r\\n        public\\r\\n        constant\\r\\n        returns (address[])\\r\\n    {\\r\\n        return authorities;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract SafeMath {\\r\\n    function safeMul(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a * b;\\r\\n        assert(a == 0 || c / a == b);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeDiv(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeSub(uint a, uint b) internal constant returns (uint256) {\\r\\n        assert(b <= a);\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function safeAdd(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a + b;\\r\\n        assert(c >= a);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n\\r\\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @title Exchange - Facilitates exchange of ERC20 tokens.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"76171b1f0436460e2604191c1315025815191b\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\\\">[email protected]</a>,>\\r\\ncontract Exchange is SafeMath {\\r\\n\\r\\n    // Error Codes\\r\\n    enum Errors {\\r\\n        ORDER_EXPIRED,                    // Order has already expired\\r\\n        ORDER_FULLY_FILLED_OR_CANCELLED,  // Order has already been fully filled or cancelled\\r\\n        ROUNDING_ERROR_TOO_LARGE,         // Rounding error too large\\r\\n        INSUFFICIENT_BALANCE_OR_ALLOWANCE // Insufficient balance or allowance for token transfer\\r\\n    }\\r\\n\\r\\n    string constant public VERSION = \\\"1.0.0\\\";\\r\\n    uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999;    // Changes to state require at least 5000 gas\\r\\n\\r\\n    address public ZRX_TOKEN_CONTRACT;\\r\\n    address public TOKEN_TRANSFER_PROXY_CONTRACT;\\r\\n\\r\\n    // Mappings of orderHash => amounts of takerTokenAmount filled or cancelled.\\r\\n    mapping (bytes32 => uint) public filled;\\r\\n    mapping (bytes32 => uint) public cancelled;\\r\\n\\r\\n    event LogFill(\\r\\n        address indexed maker,\\r\\n        address taker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint filledMakerTokenAmount,\\r\\n        uint filledTakerTokenAmount,\\r\\n        uint paidMakerFee,\\r\\n        uint paidTakerFee,\\r\\n        bytes32 indexed tokens, // keccak256(makerToken, takerToken), allows subscribing to a token pair\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogCancel(\\r\\n        address indexed maker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint cancelledMakerTokenAmount,\\r\\n        uint cancelledTakerTokenAmount,\\r\\n        bytes32 indexed tokens,\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogError(uint8 indexed errorId, bytes32 indexed orderHash);\\r\\n\\r\\n    struct Order {\\r\\n        address maker;\\r\\n        address taker;\\r\\n        address makerToken;\\r\\n        address takerToken;\\r\\n        address feeRecipient;\\r\\n        uint makerTokenAmount;\\r\\n        uint takerTokenAmount;\\r\\n        uint makerFee;\\r\\n        uint takerFee;\\r\\n        uint expirationTimestampInSec;\\r\\n        bytes32 orderHash;\\r\\n    }\\r\\n\\r\\n    function Exchange(address _zrxToken, address _tokenTransferProxy) {\\r\\n        ZRX_TOKEN_CONTRACT = _zrxToken;\\r\\n        TOKEN_TRANSFER_PROXY_CONTRACT = _tokenTransferProxy;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Core exchange functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfer will fail before attempting.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Total amount of takerToken filled in trade.\\r\\n    function fillOrder(\\r\\n          address[5] orderAddresses,\\r\\n          uint[6] orderValues,\\r\\n          uint fillTakerTokenAmount,\\r\\n          bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n          uint8 v,\\r\\n          bytes32 r,\\r\\n          bytes32 s)\\r\\n          public\\r\\n          returns (uint filledTakerTokenAmount)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.taker == address(0) || order.taker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0);\\r\\n        require(isValidSignature(\\r\\n            order.maker,\\r\\n            order.orderHash,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ));\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        filledTakerTokenAmount = min256(fillTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (filledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount)) {\\r\\n            LogError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (!shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount)) {\\r\\n            LogError(uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint filledMakerTokenAmount = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n        uint paidMakerFee;\\r\\n        uint paidTakerFee;\\r\\n        filled[order.orderHash] = safeAdd(filled[order.orderHash], filledTakerTokenAmount);\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.makerToken,\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            filledMakerTokenAmount\\r\\n        ));\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.takerToken,\\r\\n            msg.sender,\\r\\n            order.maker,\\r\\n            filledTakerTokenAmount\\r\\n        ));\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            if (order.makerFee > 0) {\\r\\n                paidMakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    order.maker,\\r\\n                    order.feeRecipient,\\r\\n                    paidMakerFee\\r\\n                ));\\r\\n            }\\r\\n            if (order.takerFee > 0) {\\r\\n                paidTakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    msg.sender,\\r\\n                    order.feeRecipient,\\r\\n                    paidTakerFee\\r\\n                ));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        LogFill(\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            filledMakerTokenAmount,\\r\\n            filledTakerTokenAmount,\\r\\n            paidMakerFee,\\r\\n            paidTakerFee,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Cancels the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param cancelTakerTokenAmount Desired amount of takerToken to cancel in order.\\r\\n    /// @return Amount of takerToken cancelled.\\r\\n    function cancelOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint cancelTakerTokenAmount)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.maker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0);\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        uint cancelledTakerTokenAmount = min256(cancelTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (cancelledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        cancelled[order.orderHash] = safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount);\\r\\n\\r\\n        LogCancel(\\r\\n            order.maker,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            getPartialAmount(cancelledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount),\\r\\n            cancelledTakerTokenAmount,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return cancelledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Wrapper functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills an order with specified parameters and ECDSA signature, throws if specified amount not filled entirely.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    function fillOrKillOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n    {\\r\\n        require(fillOrder(\\r\\n            orderAddresses,\\r\\n            orderValues,\\r\\n            fillTakerTokenAmount,\\r\\n            false,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ) == fillTakerTokenAmount);\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fillOrKill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrKillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrKillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmount Desired total amount of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    /// @return Total amount of fillTakerTokenAmount filled in orders.\\r\\n    function fillOrdersUpTo(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint filledTakerTokenAmount = 0;\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            require(orderAddresses[i][3] == orderAddresses[0][3]); // takerToken must be the same for each order\\r\\n            filledTakerTokenAmount = safeAdd(filledTakerTokenAmount, fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                safeSub(fillTakerTokenAmount, filledTakerTokenAmount),\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            ));\\r\\n            if (filledTakerTokenAmount == fillTakerTokenAmount) break;\\r\\n        }\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously cancels multiple orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param cancelTakerTokenAmounts Array of desired amounts of takerToken to cancel in orders.\\r\\n    function batchCancelOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] cancelTakerTokenAmounts)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            cancelOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                cancelTakerTokenAmounts[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Constant public functions\\r\\n    */\\r\\n\\r\\n    /// @dev Calculates Keccak-256 hash of order with specified parameters.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @return Keccak-256 hash of order.\\r\\n    function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\\r\\n        public\\r\\n        constant\\r\\n        returns (bytes32)\\r\\n    {\\r\\n        return keccak256(\\r\\n            address(this),\\r\\n            orderAddresses[0], // maker\\r\\n            orderAddresses[1], // taker\\r\\n            orderAddresses[2], // makerToken\\r\\n            orderAddresses[3], // takerToken\\r\\n            orderAddresses[4], // feeRecipient\\r\\n            orderValues[0],    // makerTokenAmount\\r\\n            orderValues[1],    // takerTokenAmount\\r\\n            orderValues[2],    // makerFee\\r\\n            orderValues[3],    // takerFee\\r\\n            orderValues[4],    // expirationTimestampInSec\\r\\n            orderValues[5]     // salt\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Verifies that an order signature is valid.\\r\\n    /// @param signer address of signer.\\r\\n    /// @param hash Signed Keccak-256 hash.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Validity of order signature.\\r\\n    function isValidSignature(\\r\\n        address signer,\\r\\n        bytes32 hash,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        return signer == ecrecover(\\r\\n            keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash),\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if rounding error > 0.1%.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to multiply with numerator/denominator.\\r\\n    /// @return Rounding error is present.\\r\\n    function isRoundingError(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        uint remainder = mulmod(target, numerator, denominator);\\r\\n        if (remainder == 0) return false; // No rounding error.\\r\\n\\r\\n        uint errPercentageTimes1000000 = safeDiv(\\r\\n            safeMul(remainder, 1000000),\\r\\n            safeMul(numerator, target)\\r\\n        );\\r\\n        return errPercentageTimes1000000 > 1000;\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates partial value given a numerator and denominator.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to calculate partial of.\\r\\n    /// @return Partial value of target.\\r\\n    function getPartialAmount(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeDiv(safeMul(numerator, target), denominator);\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates the sum of values already filled and cancelled for a given order.\\r\\n    /// @param orderHash The Keccak-256 hash of the given order.\\r\\n    /// @return Sum of values already filled and cancelled.\\r\\n    function getUnavailableTakerTokenAmount(bytes32 orderHash)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeAdd(filled[orderHash], cancelled[orderHash]);\\r\\n    }\\r\\n\\r\\n\\r\\n    /*\\r\\n    * Internal functions\\r\\n    */\\r\\n\\r\\n    /// @dev Transfers a token using TokenTransferProxy transferFrom function.\\r\\n    /// @param token Address of token to transferFrom.\\r\\n    /// @param from Address transfering token.\\r\\n    /// @param to Address receiving token.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of token transfer.\\r\\n    function transferViaTokenTransferProxy(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        internal\\r\\n        returns (bool)\\r\\n    {\\r\\n        return TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom(token, from, to, value);\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if any order transfers will fail.\\r\\n    /// @param order Order struct of params that will be checked.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @return Predicted result of transfers.\\r\\n    function isTransferable(Order order, uint fillTakerTokenAmount)\\r\\n        internal\\r\\n        constant  // The called token contracts may attempt to change state, but will not be able to due to gas limits on getBalance and getAllowance.\\r\\n        returns (bool)\\r\\n    {\\r\\n        address taker = msg.sender;\\r\\n        uint fillMakerTokenAmount = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            bool isMakerTokenZRX = order.makerToken == ZRX_TOKEN_CONTRACT;\\r\\n            bool isTakerTokenZRX = order.takerToken == ZRX_TOKEN_CONTRACT;\\r\\n            uint paidMakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n            uint paidTakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n            uint requiredMakerZRX = isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee;\\r\\n            uint requiredTakerZRX = isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee;\\r\\n\\r\\n            if (   getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getBalance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n            ) return false;\\r\\n\\r\\n            if (!isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\\r\\n                                     || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount)\\r\\n            ) return false;\\r\\n            if (!isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\\r\\n                                     || getAllowance(order.takerToken, taker) < fillTakerTokenAmount)\\r\\n            ) return false;\\r\\n        } else if (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getBalance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n                   || getAllowance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n        ) return false;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Get token balance of an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Token balance of owner.\\r\\n    function getBalance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n\\r\\n    /// @dev Get allowance of token given to TokenTransferProxy by an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Allowance of token given to TokenTransferProxy by owner.\\r\\n    function getAllowance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner, TOKEN_TRANSFER_PROXY_CONTRACT); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf60522835e0cfba7dcd772dc909e4589a392543df3bad8f02343dd22188ff228\"}},\"version\":1}","userdoc":{"methods":{"approve(address,uint256)":{"notice":"`msg.sender` approves `_addr` to spend `_value` tokens\r"},"transfer(address,uint256)":{"notice":"send `_value` token to `_to` from `msg.sender`\r"},"transferFrom(address,address,uint256)":{"notice":"send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r"}}}},"TokenTransferProxy":{"abi":[{"constant":false,"inputs":[{"name":"token","type":"address"},{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"target","type":"address"}],"name":"addAuthorizedAddress","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"authorities","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"target","type":"address"}],"name":"removeAuthorizedAddress","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"authorized","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getAuthorizedAddresses","outputs":[{"name":"","type":"address[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"target","type":"address"},{"indexed":true,"name":"caller","type":"address"}],"name":"LogAuthorizedAddressAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"target","type":"address"},{"indexed":true,"name":"caller","type":"address"}],"name":"LogAuthorizedAddressRemoved","type":"event"}],"devdoc":{"author":"Amir Bandeali - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"5c3d31352e1c6c240c2e3336393f28723f3331\">[email protected]</a>,>, Will Warren - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"35425c595975054d65475a5f5056411b565a58\">[email protected]</a>,>\r","methods":{"addAuthorizedAddress(address)":{"details":"Authorizes an address.\r","params":{"target":"Address to authorize.\r"}},"getAuthorizedAddresses()":{"details":"Gets all authorized addresses.\r","return":"Array of authorized addresses.\r"},"removeAuthorizedAddress(address)":{"details":"Removes authorizion of an address.\r","params":{"target":"Address to remove authorization from.\r"}},"transferFrom(address,address,address,uint256)":{"details":"Calls into ERC20 Token contract, invoking transferFrom.\r","params":{"from":"Address to transfer token from.\r","to":"Address to transfer token to.\r","token":"Address of token to transfer.\r","value":"Amount of token to transfer.\r"},"return":"Success of transfer.\r"}},"title":"TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\r"},"evm":{"assembly":"    /* \"contract\":3472:6036  contract TokenTransferProxy is Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contract\":854:910  function Ownable() {\r... */\ntag_1:\n    /* \"contract\":892:902  msg.sender */\n  caller\n    /* \"contract\":884:889  owner */\n  0x0\n  dup1\n    /* \"contract\":884:902  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract\":854:910  function Ownable() {\r... */\ntag_2:\n    /* \"contract\":3472:6036  contract TokenTransferProxy is Ownable {\r... */\ntag_3:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract\":3472:6036  contract TokenTransferProxy is Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x15dacbea\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x42f1181e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x494503d4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70712939\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb9181611\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd39de6e9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contract\":5491:5740  function transferFrom(\r... */\n    tag_2:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":4304:4562  function addAuthorizedAddress(address target)\r... */\n    tag_3:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contract\":3965:3993  address[] public authorities */\n    tag_4:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":4680:5170  function removeAuthorizedAddress(address target)\r... */\n    tag_5:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contract\":825:845  address public owner */\n    tag_6:\n      jumpi(tag_22, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_22:\n      tag_23\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":3915:3958  mapping (address => bool) public authorized */\n    tag_7:\n      jumpi(tag_25, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_25:\n      tag_26\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":5894:6033  function getAuthorizedAddresses()\r... */\n    tag_8:\n      jumpi(tag_28, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_28:\n      tag_29\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_31:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":8:108   */\n    tag_33:\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_31)\n    tag_32:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract\":1006:1150  function transferOwnership(address newOwner) onlyOwner {\r... */\n    tag_9:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_36)\n    tag_35:\n      stop\n        /* \"contract\":5491:5740  function transferFrom(\r... */\n    tag_12:\n        /* \"contract\":5661:5665  bool */\n      0x0\n        /* \"contract\":3644:3654  authorized */\n      0x1\n        /* \"contract\":3644:3666  authorized[msg.sender] */\n      0x0\n        /* \"contract\":3655:3665  msg.sender */\n      caller\n        /* \"contract\":3644:3666  authorized[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract\":3636:3667  require(authorized[msg.sender]) */\n      iszero\n      iszero\n      tag_38\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_38:\n        /* \"contract\":5696:5701  token */\n      dup5\n        /* \"contract\":5690:5715  Token(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contract\":5716:5720  from */\n      dup6\n        /* \"contract\":5722:5724  to */\n      dup6\n        /* \"contract\":5726:5731  value */\n      dup6\n        /* \"contract\":5690:5732  Token(token).transferFrom(from, to, value) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_40\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_40:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_41\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_41:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contract\":5683:5732  return Token(token).transferFrom(from, to, value) */\n      swap1\n      pop\n        /* \"contract\":3678:3679  _ */\n    tag_39:\n        /* \"contract\":5491:5740  function transferFrom(\r... */\n    tag_37:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":4304:4562  function addAuthorizedAddress(address target)\r... */\n    tag_15:\n        /* \"contract\":972:977  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:968  msg.sender */\n      caller\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":950:978  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_43\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_43:\n        /* \"contract\":4414:4420  target */\n      dup1\n        /* \"contract\":3868:3878  authorized */\n      0x1\n        /* \"contract\":3868:3886  authorized[target] */\n      0x0\n        /* \"contract\":3879:3885  target */\n      dup3\n        /* \"contract\":3868:3886  authorized[target] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract\":3867:3886  !authorized[target] */\n      iszero\n        /* \"contract\":3859:3887  require(!authorized[target]) */\n      iszero\n      iszero\n      tag_45\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_45:\n        /* \"contract\":4459:4463  true */\n      0x1\n        /* \"contract\":4438:4448  authorized */\n      dup1\n        /* \"contract\":4438:4456  authorized[target] */\n      0x0\n        /* \"contract\":4449:4455  target */\n      dup5\n        /* \"contract\":4438:4456  authorized[target] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contract\":4438:4463  authorized[target] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract\":4474:4485  authorities */\n      0x2\n        /* \"contract\":4474:4498  authorities.push(target) */\n      dup1\n      sload\n      dup1\n      0x1\n      add\n      dup3\n      dup2\n      tag_47\n      swap2\n      swap1\n      jump\t// in(tag_48)\n    tag_47:\n      swap2\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n    tag_49:\n        /* \"contract\":4491:4497  target */\n      dup5\n        /* \"contract\":4474:4498  authorities.push(target) */\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contract\":4543:4553  msg.sender */\n      caller\n        /* \"contract\":4509:4554  LogAuthorizedAddressAdded(target, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":4535:4541  target */\n      dup3\n        /* \"contract\":4509:4554  LogAuthorizedAddressAdded(target, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94bb87f4c15c4587ff559a7584006fa01ddf9299359be6b512b94527aa961aca\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":3898:3899  _ */\n    tag_46:\n        /* \"contract\":989:990  _ */\n    tag_44:\n      pop\n        /* \"contract\":4304:4562  function addAuthorizedAddress(address target)\r... */\n    tag_42:\n      pop\n      jump\t// out\n        /* \"contract\":3965:3993  address[] public authorities */\n    tag_18:\n      0x2\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_50\n      jumpi\n      invalid\n    tag_50:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n    tag_51:\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract\":4680:5170  function removeAuthorizedAddress(address target)\r... */\n    tag_21:\n        /* \"contract\":4855:4861  uint i */\n      0x0\n        /* \"contract\":972:977  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:968  msg.sender */\n      caller\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":950:978  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_53\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_53:\n        /* \"contract\":4790:4796  target */\n      dup2\n        /* \"contract\":3756:3766  authorized */\n      0x1\n        /* \"contract\":3756:3774  authorized[target] */\n      0x0\n        /* \"contract\":3767:3773  target */\n      dup3\n        /* \"contract\":3756:3774  authorized[target] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract\":3748:3775  require(authorized[target]) */\n      iszero\n      iszero\n      tag_55\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_55:\n        /* \"contract\":4821:4831  authorized */\n      0x1\n        /* \"contract\":4821:4839  authorized[target] */\n      0x0\n        /* \"contract\":4832:4838  target */\n      dup5\n        /* \"contract\":4821:4839  authorized[target] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contract\":4814:4839  delete authorized[target] */\n      0x100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contract\":4864:4865  0 */\n      0x0\n        /* \"contract\":4855:4865  uint i = 0 */\n      swap2\n      pop\n        /* \"contract\":4850:5105  for (uint i = 0; i < authorities.length; i++) {\r... */\n    tag_57:\n        /* \"contract\":4871:4882  authorities */\n      0x2\n        /* \"contract\":4871:4889  authorities.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contract\":4867:4868  i */\n      dup3\n        /* \"contract\":4867:4889  i < authorities.length */\n      lt\n        /* \"contract\":4850:5105  for (uint i = 0; i < authorities.length; i++) {\r... */\n      iszero\n      tag_58\n      jumpi\n        /* \"contract\":4933:4939  target */\n      dup3\n        /* \"contract\":4915:4939  authorities[i] == target */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":4915:4926  authorities */\n      0x2\n        /* \"contract\":4927:4928  i */\n      dup4\n        /* \"contract\":4915:4929  authorities[i] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n    tag_61:\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":4915:4939  authorities[i] == target */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":4911:5094  if (authorities[i] == target) {\r... */\n      iszero\n      tag_62\n      jumpi\n        /* \"contract\":4977:4988  authorities */\n      0x2\n        /* \"contract\":5010:5011  1 */\n      0x1\n        /* \"contract\":4989:5000  authorities */\n      0x2\n        /* \"contract\":4989:5007  authorities.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contract\":4989:5011  authorities.length - 1 */\n      sub\n        /* \"contract\":4977:5012  authorities[authorities.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n    tag_64:\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":4960:4971  authorities */\n      0x2\n        /* \"contract\":4972:4973  i */\n      dup4\n        /* \"contract\":4960:4974  authorities[i] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n    tag_66:\n        /* \"contract\":4960:5012  authorities[i] = authorities[authorities.length - 1] */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract\":5053:5054  1 */\n      0x1\n        /* \"contract\":5031:5042  authorities */\n      0x2\n        /* \"contract\":5031:5054  authorities.length -= 1 */\n      dup2\n      dup2\n      dup1\n      sload\n      swap1\n      pop\n      sub\n      swap2\n      pop\n      dup2\n      tag_67\n      swap2\n      swap1\n      jump\t// in(tag_68)\n    tag_67:\n      pop\n        /* \"contract\":5073:5078  break */\n      jump(tag_58)\n        /* \"contract\":4911:5094  if (authorities[i] == target) {\r... */\n    tag_62:\n        /* \"contract\":4850:5105  for (uint i = 0; i < authorities.length; i++) {\r... */\n    tag_59:\n        /* \"contract\":4891:4894  i++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"contract\":4850:5105  for (uint i = 0; i < authorities.length; i++) {\r... */\n      jump(tag_57)\n    tag_58:\n        /* \"contract\":5151:5161  msg.sender */\n      caller\n        /* \"contract\":5115:5162  LogAuthorizedAddressRemoved(target, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":5143:5149  target */\n      dup4\n        /* \"contract\":5115:5162  LogAuthorizedAddressRemoved(target, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf5b347a1e40749dd050f5f07fbdbeb7e3efa9756903044dd29401fd1d4bb4a1c\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract\":3786:3787  _ */\n    tag_56:\n        /* \"contract\":989:990  _ */\n    tag_54:\n      pop\n        /* \"contract\":4680:5170  function removeAuthorizedAddress(address target)\r... */\n    tag_52:\n      pop\n      pop\n      jump\t// out\n        /* \"contract\":825:845  address public owner */\n    tag_24:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract\":3915:3958  mapping (address => bool) public authorized */\n    tag_27:\n      mstore(0x20, 0x1)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contract\":5894:6033  function getAuthorizedAddresses()\r... */\n    tag_30:\n        /* \"contract\":5980:5989  address[] */\n      tag_69\n      jump\t// in(tag_70)\n    tag_69:\n        /* \"contract\":6014:6025  authorities */\n      0x2\n        /* \"contract\":6007:6025  return authorities */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_73:\n      dup2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract\":5894:6033  function getAuthorizedAddresses()\r... */\n    tag_71:\n      swap1\n      jump\t// out\n        /* \"contract\":1006:1150  function transferOwnership(address newOwner) onlyOwner {\r... */\n    tag_36:\n        /* \"contract\":972:977  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":958:968  msg.sender */\n      caller\n        /* \"contract\":958:977  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract\":950:978  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_75\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_75:\n        /* \"contract\":1096:1097  0 */\n      0x0\n        /* \"contract\":1076:1098  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract\":1076:1084  newOwner */\n      dup2\n        /* \"contract\":1076:1098  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract\":1072:1143  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_77\n      jumpi\n        /* \"contract\":1123:1131  newOwner */\n      dup1\n        /* \"contract\":1115:1120  owner */\n      0x0\n      dup1\n        /* \"contract\":1115:1131  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract\":1072:1143  if (newOwner != address(0)) {\r... */\n    tag_77:\n        /* \"contract\":989:990  _ */\n    tag_76:\n        /* \"contract\":1006:1150  function transferOwnership(address newOwner) onlyOwner {\r... */\n    tag_74:\n      pop\n      jump\t// out\n        /* \"contract\":3472:6036  contract TokenTransferProxy is Ownable {\r... */\n    tag_48:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      iszero\n      gt\n      tag_78\n      jumpi\n      dup2\n      dup4\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_79\n      swap2\n      swap1\n      jump\t// in(tag_80)\n    tag_79:\n    tag_78:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_68:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      iszero\n      gt\n      tag_81\n      jumpi\n      dup2\n      dup4\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_82\n      swap2\n      swap1\n      jump\t// in(tag_80)\n    tag_82:\n    tag_81:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_70:\n      0x20\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x0\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_80:\n      tag_83\n      swap2\n      swap1\n    tag_84:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_85\n      jumpi\n      0x0\n      dup2\n      0x0\n      swap1\n      sstore\n      pop\n      0x1\n      add\n      jump(tag_84)\n    tag_85:\n      pop\n      swap1\n      jump\n    tag_83:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820fddf046b2cb908f4d1971a32e547a6488f14d40ae724ea4e6dd2ff82faa06cc50029\n}\n","bytecode":{"linkReferences":{},"object":"60606040525b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b610bd8806100566000396000f3006060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806315dacbea1461009157806342f1181e14610129578063494503d41461016257806370712939146101c55780638da5cb5b146101fe578063b918161114610253578063d39de6e9146102a4578063f2fde38b1461030f575b600080fd5b341561009c57600080fd5b61010f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610348565b604051808215151515815260200191505060405180910390f35b341561013457600080fd5b610160600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104a8565b005b341561016d57600080fd5b6101836004808035906020019091905050610679565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101d057600080fd5b6101fc600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106b9565b005b341561020957600080fd5b61021161096a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561025e57600080fd5b61028a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061098f565b604051808215151515815260200191505060405180910390f35b34156102af57600080fd5b6102b76109af565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102fb5780820151818401525b6020810190506102df565b505050509050019250505060405180910390f35b341561031a57600080fd5b610346600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a44565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156103a257600080fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b151561048157600080fd5b6102c65a03f1151561049257600080fd5b5050506040518051905090505b5b949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561050357600080fd5b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561055d57600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600280548060010182816105c89190610b1b565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f94bb87f4c15c4587ff559a7584006fa01ddf9299359be6b512b94527aa961aca60405160405180910390a35b5b505b50565b60028181548110151561068857fe5b906000526020600020900160005b915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561071657600080fd5b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561076f57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600091505b600280549050821015610908578273ffffffffffffffffffffffffffffffffffffffff166002838154811015156107f657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108fa57600260016002805490500381548110151561085657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028381548110151561089257fe5b906000526020600020900160005b6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002818180549050039150816108f49190610b47565b50610908565b5b81806001019250506107c3565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ff5b347a1e40749dd050f5f07fbdbeb7e3efa9756903044dd29401fd1d4bb4a1c60405160405180910390a35b5b505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b6109b7610b73565b6002805480602002602001604051908101604052809291908181526020018280548015610a3957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109ef575b505050505090505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a9f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610b1657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b50565b815481835581811511610b4257818360005260206000209182019101610b419190610b87565b5b505050565b815481835581811511610b6e57818360005260206000209182019101610b6d9190610b87565b5b505050565b602060405190810160405280600081525090565b610ba991905b80821115610ba5576000816000905550600101610b8d565b5090565b905600a165627a7a72305820fddf046b2cb908f4d1971a32e547a6488f14d40ae724ea4e6dd2ff82faa06cc50029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH2 0xBD8 DUP1 PUSH2 0x56 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x15DACBEA EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x42F1181E EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x4A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x211 PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA44 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xB1B JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST DUP5 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x94BB87F4C15C4587FF559A7584006FA01DDF9299359BE6B512B94527AA961ACA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x688 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT ISZERO PUSH2 0x908 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x7F6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8FA JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x856 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x892 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 DUP2 DUP1 SLOAD SWAP1 POP SUB SWAP2 POP DUP2 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP PUSH2 0x908 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x7C3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5B347A1E40749DD050F5F07FBDBEB7E3EFA9756903044DD29401FD1D4BB4A1C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9B7 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA39 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9EF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xB16 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0xB42 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0xB6E JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0xBA9 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB8D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 REVERT 0xdf DIV PUSH12 0x2CB908F4D1971A32E547A648 DUP16 EQ 0xd4 EXP 0xe7 0x24 0xea 0x4e PUSH14 0xD2FF82FAA06CC500290000000000 ","sourceMap":"3472:2564:0:-;;;854:56;892:10;884:5;;:18;;;;;;;;;;;;;;;;;;854:56;3472:2564;;;;;;;"},"deployedBytecode":{"linkReferences":{},"object":"6060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806315dacbea1461009157806342f1181e14610129578063494503d41461016257806370712939146101c55780638da5cb5b146101fe578063b918161114610253578063d39de6e9146102a4578063f2fde38b1461030f575b600080fd5b341561009c57600080fd5b61010f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610348565b604051808215151515815260200191505060405180910390f35b341561013457600080fd5b610160600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104a8565b005b341561016d57600080fd5b6101836004808035906020019091905050610679565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101d057600080fd5b6101fc600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106b9565b005b341561020957600080fd5b61021161096a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561025e57600080fd5b61028a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061098f565b604051808215151515815260200191505060405180910390f35b34156102af57600080fd5b6102b76109af565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102fb5780820151818401525b6020810190506102df565b505050509050019250505060405180910390f35b341561031a57600080fd5b610346600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a44565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156103a257600080fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b151561048157600080fd5b6102c65a03f1151561049257600080fd5b5050506040518051905090505b5b949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561050357600080fd5b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561055d57600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600280548060010182816105c89190610b1b565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f94bb87f4c15c4587ff559a7584006fa01ddf9299359be6b512b94527aa961aca60405160405180910390a35b5b505b50565b60028181548110151561068857fe5b906000526020600020900160005b915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561071657600080fd5b81600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561076f57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600091505b600280549050821015610908578273ffffffffffffffffffffffffffffffffffffffff166002838154811015156107f657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108fa57600260016002805490500381548110151561085657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028381548110151561089257fe5b906000526020600020900160005b6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002818180549050039150816108f49190610b47565b50610908565b5b81806001019250506107c3565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ff5b347a1e40749dd050f5f07fbdbeb7e3efa9756903044dd29401fd1d4bb4a1c60405160405180910390a35b5b505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b6109b7610b73565b6002805480602002602001604051908101604052809291908181526020018280548015610a3957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109ef575b505050505090505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a9f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610b1657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b50565b815481835581811511610b4257818360005260206000209182019101610b419190610b87565b5b505050565b815481835581811511610b6e57818360005260206000209182019101610b6d9190610b87565b5b505050565b602060405190810160405280600081525090565b610ba991905b80821115610ba5576000816000905550600101610b8d565b5090565b905600a165627a7a72305820fddf046b2cb908f4d1971a32e547a6488f14d40ae724ea4e6dd2ff82faa06cc50029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x15DACBEA EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x42F1181E EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x4A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x211 PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B7 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA44 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xB1B JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST DUP5 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x94BB87F4C15C4587FF559A7584006FA01DDF9299359BE6B512B94527AA961ACA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x688 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT ISZERO PUSH2 0x908 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x7F6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8FA JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x856 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x892 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 JUMPDEST PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 DUP2 DUP1 SLOAD SWAP1 POP SUB SWAP2 POP DUP2 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP PUSH2 0x908 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x7C3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5B347A1E40749DD050F5F07FBDBEB7E3EFA9756903044DD29401FD1D4BB4A1C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9B7 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA39 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9EF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xB16 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0xB42 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0xB6E JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0xBA9 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB8D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 REVERT 0xdf DIV PUSH12 0x2CB908F4D1971A32E547A648 DUP16 EQ 0xd4 EXP 0xe7 0x24 0xea 0x4e PUSH14 0xD2FF82FAA06CC500290000000000 ","sourceMap":"3472:2564:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5491:249;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4304:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;3965:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4680:490;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3915:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5894:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;8:100;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;1006:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;5491:249;5661:4;3644:10;:22;3655:10;3644:22;;;;;;;;;;;;;;;;;;;;;;;;;3636:31;;;;;;;;5696:5;5690:25;;;5716:4;5722:2;5726:5;5690:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5683:49;;3678:1;5491:249;;;;;;;:::o;4304:258::-;972:5;;;;;;;;;;;958:19;;:10;:19;;;950:28;;;;;;;;4414:6;3868:10;:18;3879:6;3868:18;;;;;;;;;;;;;;;;;;;;;;;;;3867:19;3859:28;;;;;;;;4459:4;4438:10;:18;4449:6;4438:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4474:11;:24;;;;;;;;;;;:::i;:::-;;;;;;;;;;;4491:6;4474:24;;;;;;;;;;;;;;;;;;;;;;;4543:10;4509:45;;4535:6;4509:45;;;;;;;;;;;;3898:1;989;;4304:258;;:::o;3965:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4680:490::-;4855:6;972:5;;;;;;;;;;;958:19;;:10;:19;;;950:28;;;;;;;;4790:6;3756:10;:18;3767:6;3756:18;;;;;;;;;;;;;;;;;;;;;;;;;3748:27;;;;;;;;4821:10;:18;4832:6;4821:18;;;;;;;;;;;;;;;;4814:25;;;;;;;;;;;4864:1;4855:10;;4850:255;4871:11;:18;;;;4867:1;:22;4850:255;;;4933:6;4915:24;;:11;4927:1;4915:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;4911:183;;;4977:11;5010:1;4989:11;:18;;;;:22;4977:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:11;4972:1;4960:14;;;;;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;5053:1;5031:11;:23;;;;;;;;;;;;;;:::i;:::-;;5073:5;;4911:183;4850:255;4891:3;;;;;;;4850:255;;;5151:10;5115:47;;5143:6;5115:47;;;;;;;;;;;;3786:1;989;;4680:490;;;:::o;825:20::-;;;;;;;;;;;;;:::o;3915:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;5894:139::-;5980:9;;:::i;:::-;6014:11;6007:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5894:139;;:::o;1006:144::-;972:5;;;;;;;;;;;958:19;;:10;:19;;;950:28;;;;;;;;1096:1;1076:22;;:8;:22;;;;1072:71;;;1123:8;1115:5;;:16;;;;;;;;;;;;;;;;;;1072:71;989:1;1006:144;;:::o;3472:2564::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"606400","executionCost":"20883","totalCost":"627283"},"external":{"addAuthorizedAddress(address)":"infinite","authorities(uint256)":"801","authorized(address)":"646","getAuthorizedAddresses()":"infinite","owner()":"519","removeAuthorizedAddress(address)":"infinite","transferFrom(address,address,address,uint256)":"infinite","transferOwnership(address)":"20907"}},"legacyAssembly":{".code":[{"begin":3472,"end":6036,"name":"PUSH","value":"60"},{"begin":3472,"end":6036,"name":"PUSH","value":"40"},{"begin":3472,"end":6036,"name":"MSTORE"},{"begin":854,"end":910,"name":"tag","value":"1"},{"begin":854,"end":910,"name":"JUMPDEST"},{"begin":892,"end":902,"name":"CALLER"},{"begin":884,"end":889,"name":"PUSH","value":"0"},{"begin":884,"end":889,"name":"DUP1"},{"begin":884,"end":902,"name":"PUSH","value":"100"},{"begin":884,"end":902,"name":"EXP"},{"begin":884,"end":902,"name":"DUP2"},{"begin":884,"end":902,"name":"SLOAD"},{"begin":884,"end":902,"name":"DUP2"},{"begin":884,"end":902,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":884,"end":902,"name":"MUL"},{"begin":884,"end":902,"name":"NOT"},{"begin":884,"end":902,"name":"AND"},{"begin":884,"end":902,"name":"SWAP1"},{"begin":884,"end":902,"name":"DUP4"},{"begin":884,"end":902,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":884,"end":902,"name":"AND"},{"begin":884,"end":902,"name":"MUL"},{"begin":884,"end":902,"name":"OR"},{"begin":884,"end":902,"name":"SWAP1"},{"begin":884,"end":902,"name":"SSTORE"},{"begin":884,"end":902,"name":"POP"},{"begin":854,"end":910,"name":"tag","value":"2"},{"begin":854,"end":910,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"tag","value":"3"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"PUSH #[$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH [$]","value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"CODECOPY"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"RETURN"}],".data":{"0":{".auxdata":"a165627a7a72305820fddf046b2cb908f4d1971a32e547a6488f14d40ae724ea4e6dd2ff82faa06cc50029",".code":[{"begin":3472,"end":6036,"name":"PUSH","value":"60"},{"begin":3472,"end":6036,"name":"PUSH","value":"40"},{"begin":3472,"end":6036,"name":"MSTORE"},{"begin":3472,"end":6036,"name":"CALLDATASIZE"},{"begin":3472,"end":6036,"name":"ISZERO"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"1"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"CALLDATALOAD"},{"begin":3472,"end":6036,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"DIV"},{"begin":3472,"end":6036,"name":"PUSH","value":"FFFFFFFF"},{"begin":3472,"end":6036,"name":"AND"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"15DACBEA"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"2"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"42F1181E"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"3"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"494503D4"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"4"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"70712939"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"5"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"8DA5CB5B"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"6"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"B9181611"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"7"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"D39DE6E9"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"8"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"F2FDE38B"},{"begin":3472,"end":6036,"name":"EQ"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"9"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"tag","value":"1"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"REVERT"},{"begin":5491,"end":5740,"name":"tag","value":"2"},{"begin":5491,"end":5740,"name":"JUMPDEST"},{"begin":5491,"end":5740,"name":"CALLVALUE"},{"begin":5491,"end":5740,"name":"ISZERO"},{"begin":5491,"end":5740,"name":"PUSH [tag]","value":"10"},{"begin":5491,"end":5740,"name":"JUMPI"},{"begin":5491,"end":5740,"name":"PUSH","value":"0"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"REVERT"},{"begin":5491,"end":5740,"name":"tag","value":"10"},{"begin":5491,"end":5740,"name":"JUMPDEST"},{"begin":5491,"end":5740,"name":"PUSH [tag]","value":"11"},{"begin":5491,"end":5740,"name":"PUSH","value":"4"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"CALLDATALOAD"},{"begin":5491,"end":5740,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5491,"end":5740,"name":"AND"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"PUSH","value":"20"},{"begin":5491,"end":5740,"name":"ADD"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"SWAP2"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"CALLDATALOAD"},{"begin":5491,"end":5740,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5491,"end":5740,"name":"AND"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"PUSH","value":"20"},{"begin":5491,"end":5740,"name":"ADD"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"SWAP2"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"CALLDATALOAD"},{"begin":5491,"end":5740,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5491,"end":5740,"name":"AND"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"PUSH","value":"20"},{"begin":5491,"end":5740,"name":"ADD"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"SWAP2"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"CALLDATALOAD"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"PUSH","value":"20"},{"begin":5491,"end":5740,"name":"ADD"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"SWAP2"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"PUSH [tag]","value":"12"},{"begin":5491,"end":5740,"name":"JUMP"},{"begin":5491,"end":5740,"name":"tag","value":"11"},{"begin":5491,"end":5740,"name":"JUMPDEST"},{"begin":5491,"end":5740,"name":"PUSH","value":"40"},{"begin":5491,"end":5740,"name":"MLOAD"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"DUP3"},{"begin":5491,"end":5740,"name":"ISZERO"},{"begin":5491,"end":5740,"name":"ISZERO"},{"begin":5491,"end":5740,"name":"ISZERO"},{"begin":5491,"end":5740,"name":"ISZERO"},{"begin":5491,"end":5740,"name":"DUP2"},{"begin":5491,"end":5740,"name":"MSTORE"},{"begin":5491,"end":5740,"name":"PUSH","value":"20"},{"begin":5491,"end":5740,"name":"ADD"},{"begin":5491,"end":5740,"name":"SWAP2"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"PUSH","value":"40"},{"begin":5491,"end":5740,"name":"MLOAD"},{"begin":5491,"end":5740,"name":"DUP1"},{"begin":5491,"end":5740,"name":"SWAP2"},{"begin":5491,"end":5740,"name":"SUB"},{"begin":5491,"end":5740,"name":"SWAP1"},{"begin":5491,"end":5740,"name":"RETURN"},{"begin":4304,"end":4562,"name":"tag","value":"3"},{"begin":4304,"end":4562,"name":"JUMPDEST"},{"begin":4304,"end":4562,"name":"CALLVALUE"},{"begin":4304,"end":4562,"name":"ISZERO"},{"begin":4304,"end":4562,"name":"PUSH [tag]","value":"13"},{"begin":4304,"end":4562,"name":"JUMPI"},{"begin":4304,"end":4562,"name":"PUSH","value":"0"},{"begin":4304,"end":4562,"name":"DUP1"},{"begin":4304,"end":4562,"name":"REVERT"},{"begin":4304,"end":4562,"name":"tag","value":"13"},{"begin":4304,"end":4562,"name":"JUMPDEST"},{"begin":4304,"end":4562,"name":"PUSH [tag]","value":"14"},{"begin":4304,"end":4562,"name":"PUSH","value":"4"},{"begin":4304,"end":4562,"name":"DUP1"},{"begin":4304,"end":4562,"name":"DUP1"},{"begin":4304,"end":4562,"name":"CALLDATALOAD"},{"begin":4304,"end":4562,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4304,"end":4562,"name":"AND"},{"begin":4304,"end":4562,"name":"SWAP1"},{"begin":4304,"end":4562,"name":"PUSH","value":"20"},{"begin":4304,"end":4562,"name":"ADD"},{"begin":4304,"end":4562,"name":"SWAP1"},{"begin":4304,"end":4562,"name":"SWAP2"},{"begin":4304,"end":4562,"name":"SWAP1"},{"begin":4304,"end":4562,"name":"POP"},{"begin":4304,"end":4562,"name":"POP"},{"begin":4304,"end":4562,"name":"PUSH [tag]","value":"15"},{"begin":4304,"end":4562,"name":"JUMP"},{"begin":4304,"end":4562,"name":"tag","value":"14"},{"begin":4304,"end":4562,"name":"JUMPDEST"},{"begin":4304,"end":4562,"name":"STOP"},{"begin":3965,"end":3993,"name":"tag","value":"4"},{"begin":3965,"end":3993,"name":"JUMPDEST"},{"begin":3965,"end":3993,"name":"CALLVALUE"},{"begin":3965,"end":3993,"name":"ISZERO"},{"begin":3965,"end":3993,"name":"PUSH [tag]","value":"16"},{"begin":3965,"end":3993,"name":"JUMPI"},{"begin":3965,"end":3993,"name":"PUSH","value":"0"},{"begin":3965,"end":3993,"name":"DUP1"},{"begin":3965,"end":3993,"name":"REVERT"},{"begin":3965,"end":3993,"name":"tag","value":"16"},{"begin":3965,"end":3993,"name":"JUMPDEST"},{"begin":3965,"end":3993,"name":"PUSH [tag]","value":"17"},{"begin":3965,"end":3993,"name":"PUSH","value":"4"},{"begin":3965,"end":3993,"name":"DUP1"},{"begin":3965,"end":3993,"name":"DUP1"},{"begin":3965,"end":3993,"name":"CALLDATALOAD"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"PUSH","value":"20"},{"begin":3965,"end":3993,"name":"ADD"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"SWAP2"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"POP"},{"begin":3965,"end":3993,"name":"POP"},{"begin":3965,"end":3993,"name":"PUSH [tag]","value":"18"},{"begin":3965,"end":3993,"name":"JUMP"},{"begin":3965,"end":3993,"name":"tag","value":"17"},{"begin":3965,"end":3993,"name":"JUMPDEST"},{"begin":3965,"end":3993,"name":"PUSH","value":"40"},{"begin":3965,"end":3993,"name":"MLOAD"},{"begin":3965,"end":3993,"name":"DUP1"},{"begin":3965,"end":3993,"name":"DUP3"},{"begin":3965,"end":3993,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3965,"end":3993,"name":"AND"},{"begin":3965,"end":3993,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3965,"end":3993,"name":"AND"},{"begin":3965,"end":3993,"name":"DUP2"},{"begin":3965,"end":3993,"name":"MSTORE"},{"begin":3965,"end":3993,"name":"PUSH","value":"20"},{"begin":3965,"end":3993,"name":"ADD"},{"begin":3965,"end":3993,"name":"SWAP2"},{"begin":3965,"end":3993,"name":"POP"},{"begin":3965,"end":3993,"name":"POP"},{"begin":3965,"end":3993,"name":"PUSH","value":"40"},{"begin":3965,"end":3993,"name":"MLOAD"},{"begin":3965,"end":3993,"name":"DUP1"},{"begin":3965,"end":3993,"name":"SWAP2"},{"begin":3965,"end":3993,"name":"SUB"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"RETURN"},{"begin":4680,"end":5170,"name":"tag","value":"5"},{"begin":4680,"end":5170,"name":"JUMPDEST"},{"begin":4680,"end":5170,"name":"CALLVALUE"},{"begin":4680,"end":5170,"name":"ISZERO"},{"begin":4680,"end":5170,"name":"PUSH [tag]","value":"19"},{"begin":4680,"end":5170,"name":"JUMPI"},{"begin":4680,"end":5170,"name":"PUSH","value":"0"},{"begin":4680,"end":5170,"name":"DUP1"},{"begin":4680,"end":5170,"name":"REVERT"},{"begin":4680,"end":5170,"name":"tag","value":"19"},{"begin":4680,"end":5170,"name":"JUMPDEST"},{"begin":4680,"end":5170,"name":"PUSH [tag]","value":"20"},{"begin":4680,"end":5170,"name":"PUSH","value":"4"},{"begin":4680,"end":5170,"name":"DUP1"},{"begin":4680,"end":5170,"name":"DUP1"},{"begin":4680,"end":5170,"name":"CALLDATALOAD"},{"begin":4680,"end":5170,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4680,"end":5170,"name":"AND"},{"begin":4680,"end":5170,"name":"SWAP1"},{"begin":4680,"end":5170,"name":"PUSH","value":"20"},{"begin":4680,"end":5170,"name":"ADD"},{"begin":4680,"end":5170,"name":"SWAP1"},{"begin":4680,"end":5170,"name":"SWAP2"},{"begin":4680,"end":5170,"name":"SWAP1"},{"begin":4680,"end":5170,"name":"POP"},{"begin":4680,"end":5170,"name":"POP"},{"begin":4680,"end":5170,"name":"PUSH [tag]","value":"21"},{"begin":4680,"end":5170,"name":"JUMP"},{"begin":4680,"end":5170,"name":"tag","value":"20"},{"begin":4680,"end":5170,"name":"JUMPDEST"},{"begin":4680,"end":5170,"name":"STOP"},{"begin":825,"end":845,"name":"tag","value":"6"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"CALLVALUE"},{"begin":825,"end":845,"name":"ISZERO"},{"begin":825,"end":845,"name":"PUSH [tag]","value":"22"},{"begin":825,"end":845,"name":"JUMPI"},{"begin":825,"end":845,"name":"PUSH","value":"0"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"REVERT"},{"begin":825,"end":845,"name":"tag","value":"22"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"PUSH [tag]","value":"23"},{"begin":825,"end":845,"name":"PUSH [tag]","value":"24"},{"begin":825,"end":845,"name":"JUMP"},{"begin":825,"end":845,"name":"tag","value":"23"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"PUSH","value":"40"},{"begin":825,"end":845,"name":"MLOAD"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"DUP3"},{"begin":825,"end":845,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":825,"end":845,"name":"AND"},{"begin":825,"end":845,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":825,"end":845,"name":"AND"},{"begin":825,"end":845,"name":"DUP2"},{"begin":825,"end":845,"name":"MSTORE"},{"begin":825,"end":845,"name":"PUSH","value":"20"},{"begin":825,"end":845,"name":"ADD"},{"begin":825,"end":845,"name":"SWAP2"},{"begin":825,"end":845,"name":"POP"},{"begin":825,"end":845,"name":"POP"},{"begin":825,"end":845,"name":"PUSH","value":"40"},{"begin":825,"end":845,"name":"MLOAD"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"SWAP2"},{"begin":825,"end":845,"name":"SUB"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"RETURN"},{"begin":3915,"end":3958,"name":"tag","value":"7"},{"begin":3915,"end":3958,"name":"JUMPDEST"},{"begin":3915,"end":3958,"name":"CALLVALUE"},{"begin":3915,"end":3958,"name":"ISZERO"},{"begin":3915,"end":3958,"name":"PUSH [tag]","value":"25"},{"begin":3915,"end":3958,"name":"JUMPI"},{"begin":3915,"end":3958,"name":"PUSH","value":"0"},{"begin":3915,"end":3958,"name":"DUP1"},{"begin":3915,"end":3958,"name":"REVERT"},{"begin":3915,"end":3958,"name":"tag","value":"25"},{"begin":3915,"end":3958,"name":"JUMPDEST"},{"begin":3915,"end":3958,"name":"PUSH [tag]","value":"26"},{"begin":3915,"end":3958,"name":"PUSH","value":"4"},{"begin":3915,"end":3958,"name":"DUP1"},{"begin":3915,"end":3958,"name":"DUP1"},{"begin":3915,"end":3958,"name":"CALLDATALOAD"},{"begin":3915,"end":3958,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3915,"end":3958,"name":"AND"},{"begin":3915,"end":3958,"name":"SWAP1"},{"begin":3915,"end":3958,"name":"PUSH","value":"20"},{"begin":3915,"end":3958,"name":"ADD"},{"begin":3915,"end":3958,"name":"SWAP1"},{"begin":3915,"end":3958,"name":"SWAP2"},{"begin":3915,"end":3958,"name":"SWAP1"},{"begin":3915,"end":3958,"name":"POP"},{"begin":3915,"end":3958,"name":"POP"},{"begin":3915,"end":3958,"name":"PUSH [tag]","value":"27"},{"begin":3915,"end":3958,"name":"JUMP"},{"begin":3915,"end":3958,"name":"tag","value":"26"},{"begin":3915,"end":3958,"name":"JUMPDEST"},{"begin":3915,"end":3958,"name":"PUSH","value":"40"},{"begin":3915,"end":3958,"name":"MLOAD"},{"begin":3915,"end":3958,"name":"DUP1"},{"begin":3915,"end":3958,"name":"DUP3"},{"begin":3915,"end":3958,"name":"ISZERO"},{"begin":3915,"end":3958,"name":"ISZERO"},{"begin":3915,"end":3958,"name":"ISZERO"},{"begin":3915,"end":3958,"name":"ISZERO"},{"begin":3915,"end":3958,"name":"DUP2"},{"begin":3915,"end":3958,"name":"MSTORE"},{"begin":3915,"end":3958,"name":"PUSH","value":"20"},{"begin":3915,"end":3958,"name":"ADD"},{"begin":3915,"end":3958,"name":"SWAP2"},{"begin":3915,"end":3958,"name":"POP"},{"begin":3915,"end":3958,"name":"POP"},{"begin":3915,"end":3958,"name":"PUSH","value":"40"},{"begin":3915,"end":3958,"name":"MLOAD"},{"begin":3915,"end":3958,"name":"DUP1"},{"begin":3915,"end":3958,"name":"SWAP2"},{"begin":3915,"end":3958,"name":"SUB"},{"begin":3915,"end":3958,"name":"SWAP1"},{"begin":3915,"end":3958,"name":"RETURN"},{"begin":5894,"end":6033,"name":"tag","value":"8"},{"begin":5894,"end":6033,"name":"JUMPDEST"},{"begin":5894,"end":6033,"name":"CALLVALUE"},{"begin":5894,"end":6033,"name":"ISZERO"},{"begin":5894,"end":6033,"name":"PUSH [tag]","value":"28"},{"begin":5894,"end":6033,"name":"JUMPI"},{"begin":5894,"end":6033,"name":"PUSH","value":"0"},{"begin":5894,"end":6033,"name":"DUP1"},{"begin":5894,"end":6033,"name":"REVERT"},{"begin":5894,"end":6033,"name":"tag","value":"28"},{"begin":5894,"end":6033,"name":"JUMPDEST"},{"begin":5894,"end":6033,"name":"PUSH [tag]","value":"29"},{"begin":5894,"end":6033,"name":"PUSH [tag]","value":"30"},{"begin":5894,"end":6033,"name":"JUMP"},{"begin":5894,"end":6033,"name":"tag","value":"29"},{"begin":5894,"end":6033,"name":"JUMPDEST"},{"begin":5894,"end":6033,"name":"PUSH","value":"40"},{"begin":5894,"end":6033,"name":"MLOAD"},{"begin":5894,"end":6033,"name":"DUP1"},{"begin":5894,"end":6033,"name":"DUP1"},{"begin":5894,"end":6033,"name":"PUSH","value":"20"},{"begin":5894,"end":6033,"name":"ADD"},{"begin":5894,"end":6033,"name":"DUP3"},{"begin":5894,"end":6033,"name":"DUP2"},{"begin":5894,"end":6033,"name":"SUB"},{"begin":5894,"end":6033,"name":"DUP3"},{"begin":5894,"end":6033,"name":"MSTORE"},{"begin":5894,"end":6033,"name":"DUP4"},{"begin":5894,"end":6033,"name":"DUP2"},{"begin":5894,"end":6033,"name":"DUP2"},{"begin":5894,"end":6033,"name":"MLOAD"},{"begin":5894,"end":6033,"name":"DUP2"},{"begin":5894,"end":6033,"name":"MSTORE"},{"begin":5894,"end":6033,"name":"PUSH","value":"20"},{"begin":5894,"end":6033,"name":"ADD"},{"begin":5894,"end":6033,"name":"SWAP2"},{"begin":5894,"end":6033,"name":"POP"},{"begin":5894,"end":6033,"name":"DUP1"},{"begin":5894,"end":6033,"name":"MLOAD"},{"begin":5894,"end":6033,"name":"SWAP1"},{"begin":5894,"end":6033,"name":"PUSH","value":"20"},{"begin":5894,"end":6033,"name":"ADD"},{"begin":5894,"end":6033,"name":"SWAP1"},{"begin":5894,"end":6033,"name":"PUSH","value":"20"},{"begin":5894,"end":6033,"name":"MUL"},{"begin":5894,"end":6033,"name":"DUP1"},{"begin":5894,"end":6033,"name":"DUP4"},{"begin":5894,"end":6033,"name":"DUP4"},{"begin":23,"end":24,"name":"PUSH","value":"0"},{"begin":8,"end":108,"name":"tag","value":"31"},{"begin":8,"end":108,"name":"JUMPDEST"},{"begin":33,"end":36,"name":"DUP4"},{"begin":30,"end":31,"name":"DUP2"},{"begin":27,"end":29,"name":"LT"},{"begin":8,"end":108,"name":"ISZERO"},{"begin":8,"end":108,"name":"PUSH [tag]","value":"32"},{"begin":8,"end":108,"name":"JUMPI"},{"begin":99,"end":100,"name":"DUP1"},{"begin":94,"end":97,"name":"DUP3"},{"begin":90,"end":93,"name":"ADD"},{"begin":84,"end":89,"name":"MLOAD"},{"begin":80,"end":81,"name":"DUP2"},{"begin":75,"end":78,"name":"DUP5"},{"begin":71,"end":74,"name":"ADD"},{"begin":64,"end":70,"name":"MSTORE"},{"begin":8,"end":108,"name":"tag","value":"33"},{"begin":8,"end":108,"name":"JUMPDEST"},{"begin":52,"end":54,"name":"PUSH","value":"20"},{"begin":49,"end":50,"name":"DUP2"},{"begin":45,"end":48,"name":"ADD"},{"begin":40,"end":55,"name":"SWAP1"},{"begin":40,"end":55,"name":"POP"},{"begin":8,"end":108,"name":"PUSH [tag]","value":"31"},{"begin":8,"end":108,"name":"JUMP"},{"begin":8,"end":108,"name":"tag","value":"32"},{"begin":8,"end":108,"name":"JUMPDEST"},{"begin":12,"end":26,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"SWAP1"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"ADD"},{"begin":3,"end":112,"name":"SWAP3"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"POP"},{"begin":3,"end":112,"name":"PUSH","value":"40"},{"begin":3,"end":112,"name":"MLOAD"},{"begin":3,"end":112,"name":"DUP1"},{"begin":3,"end":112,"name":"SWAP2"},{"begin":3,"end":112,"name":"SUB"},{"begin":3,"end":112,"name":"SWAP1"},{"begin":3,"end":112,"name":"RETURN"},{"begin":1006,"end":1150,"name":"tag","value":"9"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"CALLVALUE"},{"begin":1006,"end":1150,"name":"ISZERO"},{"begin":1006,"end":1150,"name":"PUSH [tag]","value":"34"},{"begin":1006,"end":1150,"name":"JUMPI"},{"begin":1006,"end":1150,"name":"PUSH","value":"0"},{"begin":1006,"end":1150,"name":"DUP1"},{"begin":1006,"end":1150,"name":"REVERT"},{"begin":1006,"end":1150,"name":"tag","value":"34"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"PUSH [tag]","value":"35"},{"begin":1006,"end":1150,"name":"PUSH","value":"4"},{"begin":1006,"end":1150,"name":"DUP1"},{"begin":1006,"end":1150,"name":"DUP1"},{"begin":1006,"end":1150,"name":"CALLDATALOAD"},{"begin":1006,"end":1150,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1006,"end":1150,"name":"AND"},{"begin":1006,"end":1150,"name":"SWAP1"},{"begin":1006,"end":1150,"name":"PUSH","value":"20"},{"begin":1006,"end":1150,"name":"ADD"},{"begin":1006,"end":1150,"name":"SWAP1"},{"begin":1006,"end":1150,"name":"SWAP2"},{"begin":1006,"end":1150,"name":"SWAP1"},{"begin":1006,"end":1150,"name":"POP"},{"begin":1006,"end":1150,"name":"POP"},{"begin":1006,"end":1150,"name":"PUSH [tag]","value":"36"},{"begin":1006,"end":1150,"name":"JUMP"},{"begin":1006,"end":1150,"name":"tag","value":"35"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"STOP"},{"begin":5491,"end":5740,"name":"tag","value":"12"},{"begin":5491,"end":5740,"name":"JUMPDEST"},{"begin":5661,"end":5665,"name":"PUSH","value":"0"},{"begin":3644,"end":3654,"name":"PUSH","value":"1"},{"begin":3644,"end":3666,"name":"PUSH","value":"0"},{"begin":3655,"end":3665,"name":"CALLER"},{"begin":3644,"end":3666,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3644,"end":3666,"name":"AND"},{"begin":3644,"end":3666,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3644,"end":3666,"name":"AND"},{"begin":3644,"end":3666,"name":"DUP2"},{"begin":3644,"end":3666,"name":"MSTORE"},{"begin":3644,"end":3666,"name":"PUSH","value":"20"},{"begin":3644,"end":3666,"name":"ADD"},{"begin":3644,"end":3666,"name":"SWAP1"},{"begin":3644,"end":3666,"name":"DUP2"},{"begin":3644,"end":3666,"name":"MSTORE"},{"begin":3644,"end":3666,"name":"PUSH","value":"20"},{"begin":3644,"end":3666,"name":"ADD"},{"begin":3644,"end":3666,"name":"PUSH","value":"0"},{"begin":3644,"end":3666,"name":"KECCAK256"},{"begin":3644,"end":3666,"name":"PUSH","value":"0"},{"begin":3644,"end":3666,"name":"SWAP1"},{"begin":3644,"end":3666,"name":"SLOAD"},{"begin":3644,"end":3666,"name":"SWAP1"},{"begin":3644,"end":3666,"name":"PUSH","value":"100"},{"begin":3644,"end":3666,"name":"EXP"},{"begin":3644,"end":3666,"name":"SWAP1"},{"begin":3644,"end":3666,"name":"DIV"},{"begin":3644,"end":3666,"name":"PUSH","value":"FF"},{"begin":3644,"end":3666,"name":"AND"},{"begin":3636,"end":3667,"name":"ISZERO"},{"begin":3636,"end":3667,"name":"ISZERO"},{"begin":3636,"end":3667,"name":"PUSH [tag]","value":"38"},{"begin":3636,"end":3667,"name":"JUMPI"},{"begin":3636,"end":3667,"name":"PUSH","value":"0"},{"begin":3636,"end":3667,"name":"DUP1"},{"begin":3636,"end":3667,"name":"REVERT"},{"begin":3636,"end":3667,"name":"tag","value":"38"},{"begin":3636,"end":3667,"name":"JUMPDEST"},{"begin":5696,"end":5701,"name":"DUP5"},{"begin":5690,"end":5715,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5690,"end":5715,"name":"AND"},{"begin":5690,"end":5715,"name":"PUSH","value":"23B872DD"},{"begin":5716,"end":5720,"name":"DUP6"},{"begin":5722,"end":5724,"name":"DUP6"},{"begin":5726,"end":5731,"name":"DUP6"},{"begin":5690,"end":5732,"name":"PUSH","value":"0"},{"begin":5690,"end":5732,"name":"PUSH","value":"40"},{"begin":5690,"end":5732,"name":"MLOAD"},{"begin":5690,"end":5732,"name":"PUSH","value":"20"},{"begin":5690,"end":5732,"name":"ADD"},{"begin":5690,"end":5732,"name":"MSTORE"},{"begin":5690,"end":5732,"name":"PUSH","value":"40"},{"begin":5690,"end":5732,"name":"MLOAD"},{"begin":5690,"end":5732,"name":"DUP5"},{"begin":5690,"end":5732,"name":"PUSH","value":"FFFFFFFF"},{"begin":5690,"end":5732,"name":"AND"},{"begin":5690,"end":5732,"name":"PUSH","value":"100000000000000000000000000000000000000000000000000000000"},{"begin":5690,"end":5732,"name":"MUL"},{"begin":5690,"end":5732,"name":"DUP2"},{"begin":5690,"end":5732,"name":"MSTORE"},{"begin":5690,"end":5732,"name":"PUSH","value":"4"},{"begin":5690,"end":5732,"name":"ADD"},{"begin":5690,"end":5732,"name":"DUP1"},{"begin":5690,"end":5732,"name":"DUP5"},{"begin":5690,"end":5732,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5690,"end":5732,"name":"AND"},{"begin":5690,"end":5732,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5690,"end":5732,"name":"AND"},{"begin":5690,"end":5732,"name":"DUP2"},{"begin":5690,"end":5732,"name":"MSTORE"},{"begin":5690,"end":5732,"name":"PUSH","value":"20"},{"begin":5690,"end":5732,"name":"ADD"},{"begin":5690,"end":5732,"name":"DUP4"},{"begin":5690,"end":5732,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5690,"end":5732,"name":"AND"},{"begin":5690,"end":5732,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5690,"end":5732,"name":"AND"},{"begin":5690,"end":5732,"name":"DUP2"},{"begin":5690,"end":5732,"name":"MSTORE"},{"begin":5690,"end":5732,"name":"PUSH","value":"20"},{"begin":5690,"end":5732,"name":"ADD"},{"begin":5690,"end":5732,"name":"DUP3"},{"begin":5690,"end":5732,"name":"DUP2"},{"begin":5690,"end":5732,"name":"MSTORE"},{"begin":5690,"end":5732,"name":"PUSH","value":"20"},{"begin":5690,"end":5732,"name":"ADD"},{"begin":5690,"end":5732,"name":"SWAP4"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5690,"end":5732,"name":"PUSH","value":"20"},{"begin":5690,"end":5732,"name":"PUSH","value":"40"},{"begin":5690,"end":5732,"name":"MLOAD"},{"begin":5690,"end":5732,"name":"DUP1"},{"begin":5690,"end":5732,"name":"DUP4"},{"begin":5690,"end":5732,"name":"SUB"},{"begin":5690,"end":5732,"name":"DUP2"},{"begin":5690,"end":5732,"name":"PUSH","value":"0"},{"begin":5690,"end":5732,"name":"DUP8"},{"begin":5690,"end":5732,"name":"DUP1"},{"begin":5690,"end":5732,"name":"EXTCODESIZE"},{"begin":5690,"end":5732,"name":"ISZERO"},{"begin":5690,"end":5732,"name":"ISZERO"},{"begin":5690,"end":5732,"name":"PUSH [tag]","value":"40"},{"begin":5690,"end":5732,"name":"JUMPI"},{"begin":5690,"end":5732,"name":"PUSH","value":"0"},{"begin":5690,"end":5732,"name":"DUP1"},{"begin":5690,"end":5732,"name":"REVERT"},{"begin":5690,"end":5732,"name":"tag","value":"40"},{"begin":5690,"end":5732,"name":"JUMPDEST"},{"begin":5690,"end":5732,"name":"PUSH","value":"2C6"},{"begin":5690,"end":5732,"name":"GAS"},{"begin":5690,"end":5732,"name":"SUB"},{"begin":5690,"end":5732,"name":"CALL"},{"begin":5690,"end":5732,"name":"ISZERO"},{"begin":5690,"end":5732,"name":"ISZERO"},{"begin":5690,"end":5732,"name":"PUSH [tag]","value":"41"},{"begin":5690,"end":5732,"name":"JUMPI"},{"begin":5690,"end":5732,"name":"PUSH","value":"0"},{"begin":5690,"end":5732,"name":"DUP1"},{"begin":5690,"end":5732,"name":"REVERT"},{"begin":5690,"end":5732,"name":"tag","value":"41"},{"begin":5690,"end":5732,"name":"JUMPDEST"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5690,"end":5732,"name":"PUSH","value":"40"},{"begin":5690,"end":5732,"name":"MLOAD"},{"begin":5690,"end":5732,"name":"DUP1"},{"begin":5690,"end":5732,"name":"MLOAD"},{"begin":5690,"end":5732,"name":"SWAP1"},{"begin":5690,"end":5732,"name":"POP"},{"begin":5683,"end":5732,"name":"SWAP1"},{"begin":5683,"end":5732,"name":"POP"},{"begin":3678,"end":3679,"name":"tag","value":"39"},{"begin":3678,"end":3679,"name":"JUMPDEST"},{"begin":5491,"end":5740,"name":"tag","value":"37"},{"begin":5491,"end":5740,"name":"JUMPDEST"},{"begin":5491,"end":5740,"name":"SWAP5"},{"begin":5491,"end":5740,"name":"SWAP4"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"POP"},{"begin":5491,"end":5740,"name":"JUMP","value":"[out]"},{"begin":4304,"end":4562,"name":"tag","value":"15"},{"begin":4304,"end":4562,"name":"JUMPDEST"},{"begin":972,"end":977,"name":"PUSH","value":"0"},{"begin":972,"end":977,"name":"DUP1"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"SLOAD"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"PUSH","value":"100"},{"begin":972,"end":977,"name":"EXP"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"DIV"},{"begin":972,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":972,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":968,"name":"CALLER"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"EQ"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"PUSH [tag]","value":"43"},{"begin":950,"end":978,"name":"JUMPI"},{"begin":950,"end":978,"name":"PUSH","value":"0"},{"begin":950,"end":978,"name":"DUP1"},{"begin":950,"end":978,"name":"REVERT"},{"begin":950,"end":978,"name":"tag","value":"43"},{"begin":950,"end":978,"name":"JUMPDEST"},{"begin":4414,"end":4420,"name":"DUP1"},{"begin":3868,"end":3878,"name":"PUSH","value":"1"},{"begin":3868,"end":3886,"name":"PUSH","value":"0"},{"begin":3879,"end":3885,"name":"DUP3"},{"begin":3868,"end":3886,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3868,"end":3886,"name":"AND"},{"begin":3868,"end":3886,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3868,"end":3886,"name":"AND"},{"begin":3868,"end":3886,"name":"DUP2"},{"begin":3868,"end":3886,"name":"MSTORE"},{"begin":3868,"end":3886,"name":"PUSH","value":"20"},{"begin":3868,"end":3886,"name":"ADD"},{"begin":3868,"end":3886,"name":"SWAP1"},{"begin":3868,"end":3886,"name":"DUP2"},{"begin":3868,"end":3886,"name":"MSTORE"},{"begin":3868,"end":3886,"name":"PUSH","value":"20"},{"begin":3868,"end":3886,"name":"ADD"},{"begin":3868,"end":3886,"name":"PUSH","value":"0"},{"begin":3868,"end":3886,"name":"KECCAK256"},{"begin":3868,"end":3886,"name":"PUSH","value":"0"},{"begin":3868,"end":3886,"name":"SWAP1"},{"begin":3868,"end":3886,"name":"SLOAD"},{"begin":3868,"end":3886,"name":"SWAP1"},{"begin":3868,"end":3886,"name":"PUSH","value":"100"},{"begin":3868,"end":3886,"name":"EXP"},{"begin":3868,"end":3886,"name":"SWAP1"},{"begin":3868,"end":3886,"name":"DIV"},{"begin":3868,"end":3886,"name":"PUSH","value":"FF"},{"begin":3868,"end":3886,"name":"AND"},{"begin":3867,"end":3886,"name":"ISZERO"},{"begin":3859,"end":3887,"name":"ISZERO"},{"begin":3859,"end":3887,"name":"ISZERO"},{"begin":3859,"end":3887,"name":"PUSH [tag]","value":"45"},{"begin":3859,"end":3887,"name":"JUMPI"},{"begin":3859,"end":3887,"name":"PUSH","value":"0"},{"begin":3859,"end":3887,"name":"DUP1"},{"begin":3859,"end":3887,"name":"REVERT"},{"begin":3859,"end":3887,"name":"tag","value":"45"},{"begin":3859,"end":3887,"name":"JUMPDEST"},{"begin":4459,"end":4463,"name":"PUSH","value":"1"},{"begin":4438,"end":4448,"name":"DUP1"},{"begin":4438,"end":4456,"name":"PUSH","value":"0"},{"begin":4449,"end":4455,"name":"DUP5"},{"begin":4438,"end":4456,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4438,"end":4456,"name":"AND"},{"begin":4438,"end":4456,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4438,"end":4456,"name":"AND"},{"begin":4438,"end":4456,"name":"DUP2"},{"begin":4438,"end":4456,"name":"MSTORE"},{"begin":4438,"end":4456,"name":"PUSH","value":"20"},{"begin":4438,"end":4456,"name":"ADD"},{"begin":4438,"end":4456,"name":"SWAP1"},{"begin":4438,"end":4456,"name":"DUP2"},{"begin":4438,"end":4456,"name":"MSTORE"},{"begin":4438,"end":4456,"name":"PUSH","value":"20"},{"begin":4438,"end":4456,"name":"ADD"},{"begin":4438,"end":4456,"name":"PUSH","value":"0"},{"begin":4438,"end":4456,"name":"KECCAK256"},{"begin":4438,"end":4456,"name":"PUSH","value":"0"},{"begin":4438,"end":4463,"name":"PUSH","value":"100"},{"begin":4438,"end":4463,"name":"EXP"},{"begin":4438,"end":4463,"name":"DUP2"},{"begin":4438,"end":4463,"name":"SLOAD"},{"begin":4438,"end":4463,"name":"DUP2"},{"begin":4438,"end":4463,"name":"PUSH","value":"FF"},{"begin":4438,"end":4463,"name":"MUL"},{"begin":4438,"end":4463,"name":"NOT"},{"begin":4438,"end":4463,"name":"AND"},{"begin":4438,"end":4463,"name":"SWAP1"},{"begin":4438,"end":4463,"name":"DUP4"},{"begin":4438,"end":4463,"name":"ISZERO"},{"begin":4438,"end":4463,"name":"ISZERO"},{"begin":4438,"end":4463,"name":"MUL"},{"begin":4438,"end":4463,"name":"OR"},{"begin":4438,"end":4463,"name":"SWAP1"},{"begin":4438,"end":4463,"name":"SSTORE"},{"begin":4438,"end":4463,"name":"POP"},{"begin":4474,"end":4485,"name":"PUSH","value":"2"},{"begin":4474,"end":4498,"name":"DUP1"},{"begin":4474,"end":4498,"name":"SLOAD"},{"begin":4474,"end":4498,"name":"DUP1"},{"begin":4474,"end":4498,"name":"PUSH","value":"1"},{"begin":4474,"end":4498,"name":"ADD"},{"begin":4474,"end":4498,"name":"DUP3"},{"begin":4474,"end":4498,"name":"DUP2"},{"begin":4474,"end":4498,"name":"PUSH [tag]","value":"47"},{"begin":4474,"end":4498,"name":"SWAP2"},{"begin":4474,"end":4498,"name":"SWAP1"},{"begin":4474,"end":4498,"name":"PUSH [tag]","value":"48"},{"begin":4474,"end":4498,"name":"JUMP","value":"[in]"},{"begin":4474,"end":4498,"name":"tag","value":"47"},{"begin":4474,"end":4498,"name":"JUMPDEST"},{"begin":4474,"end":4498,"name":"SWAP2"},{"begin":4474,"end":4498,"name":"PUSH","value":"0"},{"begin":4474,"end":4498,"name":"MSTORE"},{"begin":4474,"end":4498,"name":"PUSH","value":"20"},{"begin":4474,"end":4498,"name":"PUSH","value":"0"},{"begin":4474,"end":4498,"name":"KECCAK256"},{"begin":4474,"end":4498,"name":"SWAP1"},{"begin":4474,"end":4498,"name":"ADD"},{"begin":4474,"end":4498,"name":"PUSH","value":"0"},{"begin":4474,"end":4498,"name":"tag","value":"49"},{"begin":4474,"end":4498,"name":"JUMPDEST"},{"begin":4491,"end":4497,"name":"DUP5"},{"begin":4474,"end":4498,"name":"SWAP1"},{"begin":4474,"end":4498,"name":"SWAP2"},{"begin":4474,"end":4498,"name":"SWAP1"},{"begin":4474,"end":4498,"name":"SWAP2"},{"begin":4474,"end":4498,"name":"PUSH","value":"100"},{"begin":4474,"end":4498,"name":"EXP"},{"begin":4474,"end":4498,"name":"DUP2"},{"begin":4474,"end":4498,"name":"SLOAD"},{"begin":4474,"end":4498,"name":"DUP2"},{"begin":4474,"end":4498,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4474,"end":4498,"name":"MUL"},{"begin":4474,"end":4498,"name":"NOT"},{"begin":4474,"end":4498,"name":"AND"},{"begin":4474,"end":4498,"name":"SWAP1"},{"begin":4474,"end":4498,"name":"DUP4"},{"begin":4474,"end":4498,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4474,"end":4498,"name":"AND"},{"begin":4474,"end":4498,"name":"MUL"},{"begin":4474,"end":4498,"name":"OR"},{"begin":4474,"end":4498,"name":"SWAP1"},{"begin":4474,"end":4498,"name":"SSTORE"},{"begin":4474,"end":4498,"name":"POP"},{"begin":4474,"end":4498,"name":"POP"},{"begin":4543,"end":4553,"name":"CALLER"},{"begin":4509,"end":4554,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4509,"end":4554,"name":"AND"},{"begin":4535,"end":4541,"name":"DUP3"},{"begin":4509,"end":4554,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4509,"end":4554,"name":"AND"},{"begin":4509,"end":4554,"name":"PUSH","value":"94BB87F4C15C4587FF559A7584006FA01DDF9299359BE6B512B94527AA961ACA"},{"begin":4509,"end":4554,"name":"PUSH","value":"40"},{"begin":4509,"end":4554,"name":"MLOAD"},{"begin":4509,"end":4554,"name":"PUSH","value":"40"},{"begin":4509,"end":4554,"name":"MLOAD"},{"begin":4509,"end":4554,"name":"DUP1"},{"begin":4509,"end":4554,"name":"SWAP2"},{"begin":4509,"end":4554,"name":"SUB"},{"begin":4509,"end":4554,"name":"SWAP1"},{"begin":4509,"end":4554,"name":"LOG3"},{"begin":3898,"end":3899,"name":"tag","value":"46"},{"begin":3898,"end":3899,"name":"JUMPDEST"},{"begin":989,"end":990,"name":"tag","value":"44"},{"begin":989,"end":990,"name":"JUMPDEST"},{"begin":989,"end":990,"name":"POP"},{"begin":4304,"end":4562,"name":"tag","value":"42"},{"begin":4304,"end":4562,"name":"JUMPDEST"},{"begin":4304,"end":4562,"name":"POP"},{"begin":4304,"end":4562,"name":"JUMP","value":"[out]"},{"begin":3965,"end":3993,"name":"tag","value":"18"},{"begin":3965,"end":3993,"name":"JUMPDEST"},{"begin":3965,"end":3993,"name":"PUSH","value":"2"},{"begin":3965,"end":3993,"name":"DUP2"},{"begin":3965,"end":3993,"name":"DUP2"},{"begin":3965,"end":3993,"name":"SLOAD"},{"begin":3965,"end":3993,"name":"DUP2"},{"begin":3965,"end":3993,"name":"LT"},{"begin":3965,"end":3993,"name":"ISZERO"},{"begin":3965,"end":3993,"name":"ISZERO"},{"begin":3965,"end":3993,"name":"PUSH [tag]","value":"50"},{"begin":3965,"end":3993,"name":"JUMPI"},{"begin":3965,"end":3993,"name":"INVALID"},{"begin":3965,"end":3993,"name":"tag","value":"50"},{"begin":3965,"end":3993,"name":"JUMPDEST"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"PUSH","value":"0"},{"begin":3965,"end":3993,"name":"MSTORE"},{"begin":3965,"end":3993,"name":"PUSH","value":"20"},{"begin":3965,"end":3993,"name":"PUSH","value":"0"},{"begin":3965,"end":3993,"name":"KECCAK256"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"ADD"},{"begin":3965,"end":3993,"name":"PUSH","value":"0"},{"begin":3965,"end":3993,"name":"tag","value":"51"},{"begin":3965,"end":3993,"name":"JUMPDEST"},{"begin":3965,"end":3993,"name":"SWAP2"},{"begin":3965,"end":3993,"name":"POP"},{"begin":3965,"end":3993,"name":"SLOAD"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"PUSH","value":"100"},{"begin":3965,"end":3993,"name":"EXP"},{"begin":3965,"end":3993,"name":"SWAP1"},{"begin":3965,"end":3993,"name":"DIV"},{"begin":3965,"end":3993,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3965,"end":3993,"name":"AND"},{"begin":3965,"end":3993,"name":"DUP2"},{"begin":3965,"end":3993,"name":"JUMP","value":"[out]"},{"begin":4680,"end":5170,"name":"tag","value":"21"},{"begin":4680,"end":5170,"name":"JUMPDEST"},{"begin":4855,"end":4861,"name":"PUSH","value":"0"},{"begin":972,"end":977,"name":"DUP1"},{"begin":972,"end":977,"name":"PUSH","value":"0"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"SLOAD"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"PUSH","value":"100"},{"begin":972,"end":977,"name":"EXP"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"DIV"},{"begin":972,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":972,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":968,"name":"CALLER"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"EQ"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"PUSH [tag]","value":"53"},{"begin":950,"end":978,"name":"JUMPI"},{"begin":950,"end":978,"name":"PUSH","value":"0"},{"begin":950,"end":978,"name":"DUP1"},{"begin":950,"end":978,"name":"REVERT"},{"begin":950,"end":978,"name":"tag","value":"53"},{"begin":950,"end":978,"name":"JUMPDEST"},{"begin":4790,"end":4796,"name":"DUP2"},{"begin":3756,"end":3766,"name":"PUSH","value":"1"},{"begin":3756,"end":3774,"name":"PUSH","value":"0"},{"begin":3767,"end":3773,"name":"DUP3"},{"begin":3756,"end":3774,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3756,"end":3774,"name":"AND"},{"begin":3756,"end":3774,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":3756,"end":3774,"name":"AND"},{"begin":3756,"end":3774,"name":"DUP2"},{"begin":3756,"end":3774,"name":"MSTORE"},{"begin":3756,"end":3774,"name":"PUSH","value":"20"},{"begin":3756,"end":3774,"name":"ADD"},{"begin":3756,"end":3774,"name":"SWAP1"},{"begin":3756,"end":3774,"name":"DUP2"},{"begin":3756,"end":3774,"name":"MSTORE"},{"begin":3756,"end":3774,"name":"PUSH","value":"20"},{"begin":3756,"end":3774,"name":"ADD"},{"begin":3756,"end":3774,"name":"PUSH","value":"0"},{"begin":3756,"end":3774,"name":"KECCAK256"},{"begin":3756,"end":3774,"name":"PUSH","value":"0"},{"begin":3756,"end":3774,"name":"SWAP1"},{"begin":3756,"end":3774,"name":"SLOAD"},{"begin":3756,"end":3774,"name":"SWAP1"},{"begin":3756,"end":3774,"name":"PUSH","value":"100"},{"begin":3756,"end":3774,"name":"EXP"},{"begin":3756,"end":3774,"name":"SWAP1"},{"begin":3756,"end":3774,"name":"DIV"},{"begin":3756,"end":3774,"name":"PUSH","value":"FF"},{"begin":3756,"end":3774,"name":"AND"},{"begin":3748,"end":3775,"name":"ISZERO"},{"begin":3748,"end":3775,"name":"ISZERO"},{"begin":3748,"end":3775,"name":"PUSH [tag]","value":"55"},{"begin":3748,"end":3775,"name":"JUMPI"},{"begin":3748,"end":3775,"name":"PUSH","value":"0"},{"begin":3748,"end":3775,"name":"DUP1"},{"begin":3748,"end":3775,"name":"REVERT"},{"begin":3748,"end":3775,"name":"tag","value":"55"},{"begin":3748,"end":3775,"name":"JUMPDEST"},{"begin":4821,"end":4831,"name":"PUSH","value":"1"},{"begin":4821,"end":4839,"name":"PUSH","value":"0"},{"begin":4832,"end":4838,"name":"DUP5"},{"begin":4821,"end":4839,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4821,"end":4839,"name":"AND"},{"begin":4821,"end":4839,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4821,"end":4839,"name":"AND"},{"begin":4821,"end":4839,"name":"DUP2"},{"begin":4821,"end":4839,"name":"MSTORE"},{"begin":4821,"end":4839,"name":"PUSH","value":"20"},{"begin":4821,"end":4839,"name":"ADD"},{"begin":4821,"end":4839,"name":"SWAP1"},{"begin":4821,"end":4839,"name":"DUP2"},{"begin":4821,"end":4839,"name":"MSTORE"},{"begin":4821,"end":4839,"name":"PUSH","value":"20"},{"begin":4821,"end":4839,"name":"ADD"},{"begin":4821,"end":4839,"name":"PUSH","value":"0"},{"begin":4821,"end":4839,"name":"KECCAK256"},{"begin":4821,"end":4839,"name":"PUSH","value":"0"},{"begin":4814,"end":4839,"name":"PUSH","value":"100"},{"begin":4814,"end":4839,"name":"EXP"},{"begin":4814,"end":4839,"name":"DUP2"},{"begin":4814,"end":4839,"name":"SLOAD"},{"begin":4814,"end":4839,"name":"SWAP1"},{"begin":4814,"end":4839,"name":"PUSH","value":"FF"},{"begin":4814,"end":4839,"name":"MUL"},{"begin":4814,"end":4839,"name":"NOT"},{"begin":4814,"end":4839,"name":"AND"},{"begin":4814,"end":4839,"name":"SWAP1"},{"begin":4814,"end":4839,"name":"SSTORE"},{"begin":4864,"end":4865,"name":"PUSH","value":"0"},{"begin":4855,"end":4865,"name":"SWAP2"},{"begin":4855,"end":4865,"name":"POP"},{"begin":4850,"end":5105,"name":"tag","value":"57"},{"begin":4850,"end":5105,"name":"JUMPDEST"},{"begin":4871,"end":4882,"name":"PUSH","value":"2"},{"begin":4871,"end":4889,"name":"DUP1"},{"begin":4871,"end":4889,"name":"SLOAD"},{"begin":4871,"end":4889,"name":"SWAP1"},{"begin":4871,"end":4889,"name":"POP"},{"begin":4867,"end":4868,"name":"DUP3"},{"begin":4867,"end":4889,"name":"LT"},{"begin":4850,"end":5105,"name":"ISZERO"},{"begin":4850,"end":5105,"name":"PUSH [tag]","value":"58"},{"begin":4850,"end":5105,"name":"JUMPI"},{"begin":4933,"end":4939,"name":"DUP3"},{"begin":4915,"end":4939,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4915,"end":4939,"name":"AND"},{"begin":4915,"end":4926,"name":"PUSH","value":"2"},{"begin":4927,"end":4928,"name":"DUP4"},{"begin":4915,"end":4929,"name":"DUP2"},{"begin":4915,"end":4929,"name":"SLOAD"},{"begin":4915,"end":4929,"name":"DUP2"},{"begin":4915,"end":4929,"name":"LT"},{"begin":4915,"end":4929,"name":"ISZERO"},{"begin":4915,"end":4929,"name":"ISZERO"},{"begin":4915,"end":4929,"name":"PUSH [tag]","value":"60"},{"begin":4915,"end":4929,"name":"JUMPI"},{"begin":4915,"end":4929,"name":"INVALID"},{"begin":4915,"end":4929,"name":"tag","value":"60"},{"begin":4915,"end":4929,"name":"JUMPDEST"},{"begin":4915,"end":4929,"name":"SWAP1"},{"begin":4915,"end":4929,"name":"PUSH","value":"0"},{"begin":4915,"end":4929,"name":"MSTORE"},{"begin":4915,"end":4929,"name":"PUSH","value":"20"},{"begin":4915,"end":4929,"name":"PUSH","value":"0"},{"begin":4915,"end":4929,"name":"KECCAK256"},{"begin":4915,"end":4929,"name":"SWAP1"},{"begin":4915,"end":4929,"name":"ADD"},{"begin":4915,"end":4929,"name":"PUSH","value":"0"},{"begin":4915,"end":4929,"name":"tag","value":"61"},{"begin":4915,"end":4929,"name":"JUMPDEST"},{"begin":4915,"end":4929,"name":"SWAP1"},{"begin":4915,"end":4929,"name":"SLOAD"},{"begin":4915,"end":4929,"name":"SWAP1"},{"begin":4915,"end":4929,"name":"PUSH","value":"100"},{"begin":4915,"end":4929,"name":"EXP"},{"begin":4915,"end":4929,"name":"SWAP1"},{"begin":4915,"end":4929,"name":"DIV"},{"begin":4915,"end":4929,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4915,"end":4929,"name":"AND"},{"begin":4915,"end":4939,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4915,"end":4939,"name":"AND"},{"begin":4915,"end":4939,"name":"EQ"},{"begin":4911,"end":5094,"name":"ISZERO"},{"begin":4911,"end":5094,"name":"PUSH [tag]","value":"62"},{"begin":4911,"end":5094,"name":"JUMPI"},{"begin":4977,"end":4988,"name":"PUSH","value":"2"},{"begin":5010,"end":5011,"name":"PUSH","value":"1"},{"begin":4989,"end":5000,"name":"PUSH","value":"2"},{"begin":4989,"end":5007,"name":"DUP1"},{"begin":4989,"end":5007,"name":"SLOAD"},{"begin":4989,"end":5007,"name":"SWAP1"},{"begin":4989,"end":5007,"name":"POP"},{"begin":4989,"end":5011,"name":"SUB"},{"begin":4977,"end":5012,"name":"DUP2"},{"begin":4977,"end":5012,"name":"SLOAD"},{"begin":4977,"end":5012,"name":"DUP2"},{"begin":4977,"end":5012,"name":"LT"},{"begin":4977,"end":5012,"name":"ISZERO"},{"begin":4977,"end":5012,"name":"ISZERO"},{"begin":4977,"end":5012,"name":"PUSH [tag]","value":"63"},{"begin":4977,"end":5012,"name":"JUMPI"},{"begin":4977,"end":5012,"name":"INVALID"},{"begin":4977,"end":5012,"name":"tag","value":"63"},{"begin":4977,"end":5012,"name":"JUMPDEST"},{"begin":4977,"end":5012,"name":"SWAP1"},{"begin":4977,"end":5012,"name":"PUSH","value":"0"},{"begin":4977,"end":5012,"name":"MSTORE"},{"begin":4977,"end":5012,"name":"PUSH","value":"20"},{"begin":4977,"end":5012,"name":"PUSH","value":"0"},{"begin":4977,"end":5012,"name":"KECCAK256"},{"begin":4977,"end":5012,"name":"SWAP1"},{"begin":4977,"end":5012,"name":"ADD"},{"begin":4977,"end":5012,"name":"PUSH","value":"0"},{"begin":4977,"end":5012,"name":"tag","value":"64"},{"begin":4977,"end":5012,"name":"JUMPDEST"},{"begin":4977,"end":5012,"name":"SWAP1"},{"begin":4977,"end":5012,"name":"SLOAD"},{"begin":4977,"end":5012,"name":"SWAP1"},{"begin":4977,"end":5012,"name":"PUSH","value":"100"},{"begin":4977,"end":5012,"name":"EXP"},{"begin":4977,"end":5012,"name":"SWAP1"},{"begin":4977,"end":5012,"name":"DIV"},{"begin":4977,"end":5012,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4977,"end":5012,"name":"AND"},{"begin":4960,"end":4971,"name":"PUSH","value":"2"},{"begin":4972,"end":4973,"name":"DUP4"},{"begin":4960,"end":4974,"name":"DUP2"},{"begin":4960,"end":4974,"name":"SLOAD"},{"begin":4960,"end":4974,"name":"DUP2"},{"begin":4960,"end":4974,"name":"LT"},{"begin":4960,"end":4974,"name":"ISZERO"},{"begin":4960,"end":4974,"name":"ISZERO"},{"begin":4960,"end":4974,"name":"PUSH [tag]","value":"65"},{"begin":4960,"end":4974,"name":"JUMPI"},{"begin":4960,"end":4974,"name":"INVALID"},{"begin":4960,"end":4974,"name":"tag","value":"65"},{"begin":4960,"end":4974,"name":"JUMPDEST"},{"begin":4960,"end":4974,"name":"SWAP1"},{"begin":4960,"end":4974,"name":"PUSH","value":"0"},{"begin":4960,"end":4974,"name":"MSTORE"},{"begin":4960,"end":4974,"name":"PUSH","value":"20"},{"begin":4960,"end":4974,"name":"PUSH","value":"0"},{"begin":4960,"end":4974,"name":"KECCAK256"},{"begin":4960,"end":4974,"name":"SWAP1"},{"begin":4960,"end":4974,"name":"ADD"},{"begin":4960,"end":4974,"name":"PUSH","value":"0"},{"begin":4960,"end":4974,"name":"tag","value":"66"},{"begin":4960,"end":4974,"name":"JUMPDEST"},{"begin":4960,"end":5012,"name":"PUSH","value":"100"},{"begin":4960,"end":5012,"name":"EXP"},{"begin":4960,"end":5012,"name":"DUP2"},{"begin":4960,"end":5012,"name":"SLOAD"},{"begin":4960,"end":5012,"name":"DUP2"},{"begin":4960,"end":5012,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4960,"end":5012,"name":"MUL"},{"begin":4960,"end":5012,"name":"NOT"},{"begin":4960,"end":5012,"name":"AND"},{"begin":4960,"end":5012,"name":"SWAP1"},{"begin":4960,"end":5012,"name":"DUP4"},{"begin":4960,"end":5012,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":4960,"end":5012,"name":"AND"},{"begin":4960,"end":5012,"name":"MUL"},{"begin":4960,"end":5012,"name":"OR"},{"begin":4960,"end":5012,"name":"SWAP1"},{"begin":4960,"end":5012,"name":"SSTORE"},{"begin":4960,"end":5012,"name":"POP"},{"begin":5053,"end":5054,"name":"PUSH","value":"1"},{"begin":5031,"end":5042,"name":"PUSH","value":"2"},{"begin":5031,"end":5054,"name":"DUP2"},{"begin":5031,"end":5054,"name":"DUP2"},{"begin":5031,"end":5054,"name":"DUP1"},{"begin":5031,"end":5054,"name":"SLOAD"},{"begin":5031,"end":5054,"name":"SWAP1"},{"begin":5031,"end":5054,"name":"POP"},{"begin":5031,"end":5054,"name":"SUB"},{"begin":5031,"end":5054,"name":"SWAP2"},{"begin":5031,"end":5054,"name":"POP"},{"begin":5031,"end":5054,"name":"DUP2"},{"begin":5031,"end":5054,"name":"PUSH [tag]","value":"67"},{"begin":5031,"end":5054,"name":"SWAP2"},{"begin":5031,"end":5054,"name":"SWAP1"},{"begin":5031,"end":5054,"name":"PUSH [tag]","value":"68"},{"begin":5031,"end":5054,"name":"JUMP","value":"[in]"},{"begin":5031,"end":5054,"name":"tag","value":"67"},{"begin":5031,"end":5054,"name":"JUMPDEST"},{"begin":5031,"end":5054,"name":"POP"},{"begin":5073,"end":5078,"name":"PUSH [tag]","value":"58"},{"begin":5073,"end":5078,"name":"JUMP"},{"begin":4911,"end":5094,"name":"tag","value":"62"},{"begin":4911,"end":5094,"name":"JUMPDEST"},{"begin":4850,"end":5105,"name":"tag","value":"59"},{"begin":4850,"end":5105,"name":"JUMPDEST"},{"begin":4891,"end":4894,"name":"DUP2"},{"begin":4891,"end":4894,"name":"DUP1"},{"begin":4891,"end":4894,"name":"PUSH","value":"1"},{"begin":4891,"end":4894,"name":"ADD"},{"begin":4891,"end":4894,"name":"SWAP3"},{"begin":4891,"end":4894,"name":"POP"},{"begin":4891,"end":4894,"name":"POP"},{"begin":4850,"end":5105,"name":"PUSH [tag]","value":"57"},{"begin":4850,"end":5105,"name":"JUMP"},{"begin":4850,"end":5105,"name":"tag","value":"58"},{"begin":4850,"end":5105,"name":"JUMPDEST"},{"begin":5151,"end":5161,"name":"CALLER"},{"begin":5115,"end":5162,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5115,"end":5162,"name":"AND"},{"begin":5143,"end":5149,"name":"DUP4"},{"begin":5115,"end":5162,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":5115,"end":5162,"name":"AND"},{"begin":5115,"end":5162,"name":"PUSH","value":"F5B347A1E40749DD050F5F07FBDBEB7E3EFA9756903044DD29401FD1D4BB4A1C"},{"begin":5115,"end":5162,"name":"PUSH","value":"40"},{"begin":5115,"end":5162,"name":"MLOAD"},{"begin":5115,"end":5162,"name":"PUSH","value":"40"},{"begin":5115,"end":5162,"name":"MLOAD"},{"begin":5115,"end":5162,"name":"DUP1"},{"begin":5115,"end":5162,"name":"SWAP2"},{"begin":5115,"end":5162,"name":"SUB"},{"begin":5115,"end":5162,"name":"SWAP1"},{"begin":5115,"end":5162,"name":"LOG3"},{"begin":3786,"end":3787,"name":"tag","value":"56"},{"begin":3786,"end":3787,"name":"JUMPDEST"},{"begin":989,"end":990,"name":"tag","value":"54"},{"begin":989,"end":990,"name":"JUMPDEST"},{"begin":989,"end":990,"name":"POP"},{"begin":4680,"end":5170,"name":"tag","value":"52"},{"begin":4680,"end":5170,"name":"JUMPDEST"},{"begin":4680,"end":5170,"name":"POP"},{"begin":4680,"end":5170,"name":"POP"},{"begin":4680,"end":5170,"name":"JUMP","value":"[out]"},{"begin":825,"end":845,"name":"tag","value":"24"},{"begin":825,"end":845,"name":"JUMPDEST"},{"begin":825,"end":845,"name":"PUSH","value":"0"},{"begin":825,"end":845,"name":"DUP1"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"SLOAD"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"PUSH","value":"100"},{"begin":825,"end":845,"name":"EXP"},{"begin":825,"end":845,"name":"SWAP1"},{"begin":825,"end":845,"name":"DIV"},{"begin":825,"end":845,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":825,"end":845,"name":"AND"},{"begin":825,"end":845,"name":"DUP2"},{"begin":825,"end":845,"name":"JUMP","value":"[out]"},{"begin":3915,"end":3958,"name":"tag","value":"27"},{"begin":3915,"end":3958,"name":"JUMPDEST"},{"begin":3915,"end":3958,"name":"PUSH","value":"1"},{"begin":3915,"end":3958,"name":"PUSH","value":"20"},{"begin":3915,"end":3958,"name":"MSTORE"},{"begin":3915,"end":3958,"name":"DUP1"},{"begin":3915,"end":3958,"name":"PUSH","value":"0"},{"begin":3915,"end":3958,"name":"MSTORE"},{"begin":3915,"end":3958,"name":"PUSH","value":"40"},{"begin":3915,"end":3958,"name":"PUSH","value":"0"},{"begin":3915,"end":3958,"name":"KECCAK256"},{"begin":3915,"end":3958,"name":"PUSH","value":"0"},{"begin":3915,"end":3958,"name":"SWAP2"},{"begin":3915,"end":3958,"name":"POP"},{"begin":3915,"end":3958,"name":"SLOAD"},{"begin":3915,"end":3958,"name":"SWAP1"},{"begin":3915,"end":3958,"name":"PUSH","value":"100"},{"begin":3915,"end":3958,"name":"EXP"},{"begin":3915,"end":3958,"name":"SWAP1"},{"begin":3915,"end":3958,"name":"DIV"},{"begin":3915,"end":3958,"name":"PUSH","value":"FF"},{"begin":3915,"end":3958,"name":"AND"},{"begin":3915,"end":3958,"name":"DUP2"},{"begin":3915,"end":3958,"name":"JUMP","value":"[out]"},{"begin":5894,"end":6033,"name":"tag","value":"30"},{"begin":5894,"end":6033,"name":"JUMPDEST"},{"begin":5980,"end":5989,"name":"PUSH [tag]","value":"69"},{"begin":5980,"end":5989,"name":"PUSH [tag]","value":"70"},{"begin":5980,"end":5989,"name":"JUMP","value":"[in]"},{"begin":5980,"end":5989,"name":"tag","value":"69"},{"begin":5980,"end":5989,"name":"JUMPDEST"},{"begin":6014,"end":6025,"name":"PUSH","value":"2"},{"begin":6007,"end":6025,"name":"DUP1"},{"begin":6007,"end":6025,"name":"SLOAD"},{"begin":6007,"end":6025,"name":"DUP1"},{"begin":6007,"end":6025,"name":"PUSH","value":"20"},{"begin":6007,"end":6025,"name":"MUL"},{"begin":6007,"end":6025,"name":"PUSH","value":"20"},{"begin":6007,"end":6025,"name":"ADD"},{"begin":6007,"end":6025,"name":"PUSH","value":"40"},{"begin":6007,"end":6025,"name":"MLOAD"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"DUP2"},{"begin":6007,"end":6025,"name":"ADD"},{"begin":6007,"end":6025,"name":"PUSH","value":"40"},{"begin":6007,"end":6025,"name":"MSTORE"},{"begin":6007,"end":6025,"name":"DUP1"},{"begin":6007,"end":6025,"name":"SWAP3"},{"begin":6007,"end":6025,"name":"SWAP2"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"DUP2"},{"begin":6007,"end":6025,"name":"DUP2"},{"begin":6007,"end":6025,"name":"MSTORE"},{"begin":6007,"end":6025,"name":"PUSH","value":"20"},{"begin":6007,"end":6025,"name":"ADD"},{"begin":6007,"end":6025,"name":"DUP3"},{"begin":6007,"end":6025,"name":"DUP1"},{"begin":6007,"end":6025,"name":"SLOAD"},{"begin":6007,"end":6025,"name":"DUP1"},{"begin":6007,"end":6025,"name":"ISZERO"},{"begin":6007,"end":6025,"name":"PUSH [tag]","value":"72"},{"begin":6007,"end":6025,"name":"JUMPI"},{"begin":6007,"end":6025,"name":"PUSH","value":"20"},{"begin":6007,"end":6025,"name":"MUL"},{"begin":6007,"end":6025,"name":"DUP3"},{"begin":6007,"end":6025,"name":"ADD"},{"begin":6007,"end":6025,"name":"SWAP2"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"PUSH","value":"0"},{"begin":6007,"end":6025,"name":"MSTORE"},{"begin":6007,"end":6025,"name":"PUSH","value":"20"},{"begin":6007,"end":6025,"name":"PUSH","value":"0"},{"begin":6007,"end":6025,"name":"KECCAK256"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"tag","value":"73"},{"begin":6007,"end":6025,"name":"JUMPDEST"},{"begin":6007,"end":6025,"name":"DUP2"},{"begin":6007,"end":6025,"name":"PUSH","value":"0"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"SLOAD"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"PUSH","value":"100"},{"begin":6007,"end":6025,"name":"EXP"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"DIV"},{"begin":6007,"end":6025,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":6007,"end":6025,"name":"AND"},{"begin":6007,"end":6025,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":6007,"end":6025,"name":"AND"},{"begin":6007,"end":6025,"name":"DUP2"},{"begin":6007,"end":6025,"name":"MSTORE"},{"begin":6007,"end":6025,"name":"PUSH","value":"20"},{"begin":6007,"end":6025,"name":"ADD"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"PUSH","value":"1"},{"begin":6007,"end":6025,"name":"ADD"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"DUP1"},{"begin":6007,"end":6025,"name":"DUP4"},{"begin":6007,"end":6025,"name":"GT"},{"begin":6007,"end":6025,"name":"PUSH [tag]","value":"73"},{"begin":6007,"end":6025,"name":"JUMPI"},{"begin":6007,"end":6025,"name":"tag","value":"72"},{"begin":6007,"end":6025,"name":"JUMPDEST"},{"begin":6007,"end":6025,"name":"POP"},{"begin":6007,"end":6025,"name":"POP"},{"begin":6007,"end":6025,"name":"POP"},{"begin":6007,"end":6025,"name":"POP"},{"begin":6007,"end":6025,"name":"POP"},{"begin":6007,"end":6025,"name":"SWAP1"},{"begin":6007,"end":6025,"name":"POP"},{"begin":5894,"end":6033,"name":"tag","value":"71"},{"begin":5894,"end":6033,"name":"JUMPDEST"},{"begin":5894,"end":6033,"name":"SWAP1"},{"begin":5894,"end":6033,"name":"JUMP","value":"[out]"},{"begin":1006,"end":1150,"name":"tag","value":"36"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":972,"end":977,"name":"PUSH","value":"0"},{"begin":972,"end":977,"name":"DUP1"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"SLOAD"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"PUSH","value":"100"},{"begin":972,"end":977,"name":"EXP"},{"begin":972,"end":977,"name":"SWAP1"},{"begin":972,"end":977,"name":"DIV"},{"begin":972,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":972,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":968,"name":"CALLER"},{"begin":958,"end":977,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":958,"end":977,"name":"AND"},{"begin":958,"end":977,"name":"EQ"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"ISZERO"},{"begin":950,"end":978,"name":"PUSH [tag]","value":"75"},{"begin":950,"end":978,"name":"JUMPI"},{"begin":950,"end":978,"name":"PUSH","value":"0"},{"begin":950,"end":978,"name":"DUP1"},{"begin":950,"end":978,"name":"REVERT"},{"begin":950,"end":978,"name":"tag","value":"75"},{"begin":950,"end":978,"name":"JUMPDEST"},{"begin":1096,"end":1097,"name":"PUSH","value":"0"},{"begin":1076,"end":1098,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1076,"end":1098,"name":"AND"},{"begin":1076,"end":1084,"name":"DUP2"},{"begin":1076,"end":1098,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1076,"end":1098,"name":"AND"},{"begin":1076,"end":1098,"name":"EQ"},{"begin":1076,"end":1098,"name":"ISZERO"},{"begin":1072,"end":1143,"name":"ISZERO"},{"begin":1072,"end":1143,"name":"PUSH [tag]","value":"77"},{"begin":1072,"end":1143,"name":"JUMPI"},{"begin":1123,"end":1131,"name":"DUP1"},{"begin":1115,"end":1120,"name":"PUSH","value":"0"},{"begin":1115,"end":1120,"name":"DUP1"},{"begin":1115,"end":1131,"name":"PUSH","value":"100"},{"begin":1115,"end":1131,"name":"EXP"},{"begin":1115,"end":1131,"name":"DUP2"},{"begin":1115,"end":1131,"name":"SLOAD"},{"begin":1115,"end":1131,"name":"DUP2"},{"begin":1115,"end":1131,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1115,"end":1131,"name":"MUL"},{"begin":1115,"end":1131,"name":"NOT"},{"begin":1115,"end":1131,"name":"AND"},{"begin":1115,"end":1131,"name":"SWAP1"},{"begin":1115,"end":1131,"name":"DUP4"},{"begin":1115,"end":1131,"name":"PUSH","value":"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},{"begin":1115,"end":1131,"name":"AND"},{"begin":1115,"end":1131,"name":"MUL"},{"begin":1115,"end":1131,"name":"OR"},{"begin":1115,"end":1131,"name":"SWAP1"},{"begin":1115,"end":1131,"name":"SSTORE"},{"begin":1115,"end":1131,"name":"POP"},{"begin":1072,"end":1143,"name":"tag","value":"77"},{"begin":1072,"end":1143,"name":"JUMPDEST"},{"begin":989,"end":990,"name":"tag","value":"76"},{"begin":989,"end":990,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"tag","value":"74"},{"begin":1006,"end":1150,"name":"JUMPDEST"},{"begin":1006,"end":1150,"name":"POP"},{"begin":1006,"end":1150,"name":"JUMP","value":"[out]"},{"begin":3472,"end":6036,"name":"tag","value":"48"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"SLOAD"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"DUP4"},{"begin":3472,"end":6036,"name":"SSTORE"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"ISZERO"},{"begin":3472,"end":6036,"name":"GT"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"78"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"DUP4"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"MSTORE"},{"begin":3472,"end":6036,"name":"PUSH","value":"20"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"KECCAK256"},{"begin":3472,"end":6036,"name":"SWAP2"},{"begin":3472,"end":6036,"name":"DUP3"},{"begin":3472,"end":6036,"name":"ADD"},{"begin":3472,"end":6036,"name":"SWAP2"},{"begin":3472,"end":6036,"name":"ADD"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"79"},{"begin":3472,"end":6036,"name":"SWAP2"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"80"},{"begin":3472,"end":6036,"name":"JUMP","value":"[in]"},{"begin":3472,"end":6036,"name":"tag","value":"79"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"tag","value":"78"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"JUMP","value":"[out]"},{"begin":3472,"end":6036,"name":"tag","value":"68"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"SLOAD"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"DUP4"},{"begin":3472,"end":6036,"name":"SSTORE"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"ISZERO"},{"begin":3472,"end":6036,"name":"GT"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"81"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"DUP4"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"MSTORE"},{"begin":3472,"end":6036,"name":"PUSH","value":"20"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"KECCAK256"},{"begin":3472,"end":6036,"name":"SWAP2"},{"begin":3472,"end":6036,"name":"DUP3"},{"begin":3472,"end":6036,"name":"ADD"},{"begin":3472,"end":6036,"name":"SWAP2"},{"begin":3472,"end":6036,"name":"ADD"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"82"},{"begin":3472,"end":6036,"name":"SWAP2"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"80"},{"begin":3472,"end":6036,"name":"JUMP","value":"[in]"},{"begin":3472,"end":6036,"name":"tag","value":"82"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"tag","value":"81"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"JUMP","value":"[out]"},{"begin":3472,"end":6036,"name":"tag","value":"70"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"PUSH","value":"20"},{"begin":3472,"end":6036,"name":"PUSH","value":"40"},{"begin":3472,"end":6036,"name":"MLOAD"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"ADD"},{"begin":3472,"end":6036,"name":"PUSH","value":"40"},{"begin":3472,"end":6036,"name":"MSTORE"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"MSTORE"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"JUMP","value":"[out]"},{"begin":3472,"end":6036,"name":"tag","value":"80"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"83"},{"begin":3472,"end":6036,"name":"SWAP2"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"tag","value":"84"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"DUP1"},{"begin":3472,"end":6036,"name":"DUP3"},{"begin":3472,"end":6036,"name":"GT"},{"begin":3472,"end":6036,"name":"ISZERO"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"85"},{"begin":3472,"end":6036,"name":"JUMPI"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"DUP2"},{"begin":3472,"end":6036,"name":"PUSH","value":"0"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"SSTORE"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"PUSH","value":"1"},{"begin":3472,"end":6036,"name":"ADD"},{"begin":3472,"end":6036,"name":"PUSH [tag]","value":"84"},{"begin":3472,"end":6036,"name":"JUMP"},{"begin":3472,"end":6036,"name":"tag","value":"85"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"POP"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"JUMP"},{"begin":3472,"end":6036,"name":"tag","value":"83"},{"begin":3472,"end":6036,"name":"JUMPDEST"},{"begin":3472,"end":6036,"name":"SWAP1"},{"begin":3472,"end":6036,"name":"JUMP","value":"[out]"}]}}},"methodIdentifiers":{"addAuthorizedAddress(address)":"42f1181e","authorities(uint256)":"494503d4","authorized(address)":"b9181611","getAuthorizedAddresses()":"d39de6e9","owner()":"8da5cb5b","removeAuthorizedAddress(address)":"70712939","transferFrom(address,address,address,uint256)":"15dacbea","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.4.14+commit.c2215d46\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"addAuthorizedAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"authorities\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"removeAuthorizedAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthorizedAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LogAuthorizedAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LogAuthorizedAddressRemoved\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"5c3d31352e1c6c240c2e3336393f28723f3331\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"35425c595975054d65475a5f5056411b565a58\\\">[email protected]</a>,>\\r\",\"methods\":{\"addAuthorizedAddress(address)\":{\"details\":\"Authorizes an address.\\r\",\"params\":{\"target\":\"Address to authorize.\\r\"}},\"getAuthorizedAddresses()\":{\"details\":\"Gets all authorized addresses.\\r\",\"return\":\"Array of authorized addresses.\\r\"},\"removeAuthorizedAddress(address)\":{\"details\":\"Removes authorizion of an address.\\r\",\"params\":{\"target\":\"Address to remove authorization from.\\r\"}},\"transferFrom(address,address,address,uint256)\":{\"details\":\"Calls into ERC20 Token contract, invoking transferFrom.\\r\",\"params\":{\"from\":\"Address to transfer token from.\\r\",\"to\":\"Address to transfer token to.\\r\",\"token\":\"Address of token to transfer.\\r\",\"value\":\"Amount of token to transfer.\\r\"},\"return\":\"Success of transfer.\\r\"}},\"title\":\"TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contract\":\"TokenTransferProxy\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract\":{\"content\":\"/*\\r\\n\\r\\n  Copyright 2017 ZeroEx Intl.\\r\\n\\r\\n  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n  you may not use this file except in compliance with the License.\\r\\n  You may obtain a copy of the License at\\r\\n\\r\\n    http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\n  Unless required by applicable law or agreed to in writing, software\\r\\n  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n  See the License for the specific language governing permissions and\\r\\n  limitations under the License.\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.4.14;\\r\\n\\r\\n/*\\r\\n * Ownable\\r\\n *\\r\\n * Base contract with an owner.\\r\\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\\r\\n */\\r\\ncontract Ownable {\\r\\n    address public owner;\\r\\n\\r\\n    function Ownable() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) onlyOwner {\\r\\n        if (newOwner != address(0)) {\\r\\n            owner = newOwner;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Token {\\r\\n\\r\\n    /// @return total amount of tokens\\r\\n    function totalSupply() constant returns (uint supply) {}\\r\\n\\r\\n    /// @param _owner The address from which the balance will be retrieved\\r\\n    /// @return The balance\\r\\n    function balanceOf(address _owner) constant returns (uint balance) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `msg.sender`\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transfer(address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\r\\n    /// @param _from The address of the sender\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @param _value The amount of wei to be approved for transfer\\r\\n    /// @return Whether the approval was successful or not\\r\\n    function approve(address _spender, uint _value) returns (bool success) {}\\r\\n\\r\\n    /// @param _owner The address of the account owning tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @return Amount of remaining tokens allowed to spent\\r\\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\\r\\n\\r\\n    event Transfer(address indexed _from, address indexed _to, uint _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\\r\\n}\\r\\n\\r\\n/// @title TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"5c3d31352e1c6c240c2e3336393f28723f3331\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"35425c595975054d65475a5f5056411b565a58\\\">[email protected]</a>,>\\r\\ncontract TokenTransferProxy is Ownable {\\r\\n\\r\\n    /// @dev Only authorized addresses can invoke functions with this modifier.\\r\\n    modifier onlyAuthorized {\\r\\n        require(authorized[msg.sender]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetAuthorized(address target) {\\r\\n        require(authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier targetNotAuthorized(address target) {\\r\\n        require(!authorized[target]);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    mapping (address => bool) public authorized;\\r\\n    address[] public authorities;\\r\\n\\r\\n    event LogAuthorizedAddressAdded(address indexed target, address indexed caller);\\r\\n    event LogAuthorizedAddressRemoved(address indexed target, address indexed caller);\\r\\n\\r\\n    /*\\r\\n     * Public functions\\r\\n     */\\r\\n\\r\\n    /// @dev Authorizes an address.\\r\\n    /// @param target Address to authorize.\\r\\n    function addAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetNotAuthorized(target)\\r\\n    {\\r\\n        authorized[target] = true;\\r\\n        authorities.push(target);\\r\\n        LogAuthorizedAddressAdded(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Removes authorizion of an address.\\r\\n    /// @param target Address to remove authorization from.\\r\\n    function removeAuthorizedAddress(address target)\\r\\n        public\\r\\n        onlyOwner\\r\\n        targetAuthorized(target)\\r\\n    {\\r\\n        delete authorized[target];\\r\\n        for (uint i = 0; i < authorities.length; i++) {\\r\\n            if (authorities[i] == target) {\\r\\n                authorities[i] = authorities[authorities.length - 1];\\r\\n                authorities.length -= 1;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        LogAuthorizedAddressRemoved(target, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @dev Calls into ERC20 Token contract, invoking transferFrom.\\r\\n    /// @param token Address of token to transfer.\\r\\n    /// @param from Address to transfer token from.\\r\\n    /// @param to Address to transfer token to.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of transfer.\\r\\n    function transferFrom(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        public\\r\\n        onlyAuthorized\\r\\n        returns (bool)\\r\\n    {\\r\\n        return Token(token).transferFrom(from, to, value);\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * Public constant functions\\r\\n     */\\r\\n\\r\\n    /// @dev Gets all authorized addresses.\\r\\n    /// @return Array of authorized addresses.\\r\\n    function getAuthorizedAddresses()\\r\\n        public\\r\\n        constant\\r\\n        returns (address[])\\r\\n    {\\r\\n        return authorities;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract SafeMath {\\r\\n    function safeMul(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a * b;\\r\\n        assert(a == 0 || c / a == b);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeDiv(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function safeSub(uint a, uint b) internal constant returns (uint256) {\\r\\n        assert(b <= a);\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function safeAdd(uint a, uint b) internal constant returns (uint256) {\\r\\n        uint c = a + b;\\r\\n        assert(c >= a);\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n\\r\\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @title Exchange - Facilitates exchange of ERC20 tokens.\\r\\n/// @author Amir Bandeali - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"76171b1f0436460e2604191c1315025815191b\\\">[email protected]</a>,>, Will Warren - <,<a href=\\\"/cdn-cgi/l/email-protection\\\" class=\\\"__cf_email__\\\" data-cfemail=\\\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\\\">[email protected]</a>,>\\r\\ncontract Exchange is SafeMath {\\r\\n\\r\\n    // Error Codes\\r\\n    enum Errors {\\r\\n        ORDER_EXPIRED,                    // Order has already expired\\r\\n        ORDER_FULLY_FILLED_OR_CANCELLED,  // Order has already been fully filled or cancelled\\r\\n        ROUNDING_ERROR_TOO_LARGE,         // Rounding error too large\\r\\n        INSUFFICIENT_BALANCE_OR_ALLOWANCE // Insufficient balance or allowance for token transfer\\r\\n    }\\r\\n\\r\\n    string constant public VERSION = \\\"1.0.0\\\";\\r\\n    uint16 constant public EXTERNAL_QUERY_GAS_LIMIT = 4999;    // Changes to state require at least 5000 gas\\r\\n\\r\\n    address public ZRX_TOKEN_CONTRACT;\\r\\n    address public TOKEN_TRANSFER_PROXY_CONTRACT;\\r\\n\\r\\n    // Mappings of orderHash => amounts of takerTokenAmount filled or cancelled.\\r\\n    mapping (bytes32 => uint) public filled;\\r\\n    mapping (bytes32 => uint) public cancelled;\\r\\n\\r\\n    event LogFill(\\r\\n        address indexed maker,\\r\\n        address taker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint filledMakerTokenAmount,\\r\\n        uint filledTakerTokenAmount,\\r\\n        uint paidMakerFee,\\r\\n        uint paidTakerFee,\\r\\n        bytes32 indexed tokens, // keccak256(makerToken, takerToken), allows subscribing to a token pair\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogCancel(\\r\\n        address indexed maker,\\r\\n        address indexed feeRecipient,\\r\\n        address makerToken,\\r\\n        address takerToken,\\r\\n        uint cancelledMakerTokenAmount,\\r\\n        uint cancelledTakerTokenAmount,\\r\\n        bytes32 indexed tokens,\\r\\n        bytes32 orderHash\\r\\n    );\\r\\n\\r\\n    event LogError(uint8 indexed errorId, bytes32 indexed orderHash);\\r\\n\\r\\n    struct Order {\\r\\n        address maker;\\r\\n        address taker;\\r\\n        address makerToken;\\r\\n        address takerToken;\\r\\n        address feeRecipient;\\r\\n        uint makerTokenAmount;\\r\\n        uint takerTokenAmount;\\r\\n        uint makerFee;\\r\\n        uint takerFee;\\r\\n        uint expirationTimestampInSec;\\r\\n        bytes32 orderHash;\\r\\n    }\\r\\n\\r\\n    function Exchange(address _zrxToken, address _tokenTransferProxy) {\\r\\n        ZRX_TOKEN_CONTRACT = _zrxToken;\\r\\n        TOKEN_TRANSFER_PROXY_CONTRACT = _tokenTransferProxy;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Core exchange functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfer will fail before attempting.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Total amount of takerToken filled in trade.\\r\\n    function fillOrder(\\r\\n          address[5] orderAddresses,\\r\\n          uint[6] orderValues,\\r\\n          uint fillTakerTokenAmount,\\r\\n          bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n          uint8 v,\\r\\n          bytes32 r,\\r\\n          bytes32 s)\\r\\n          public\\r\\n          returns (uint filledTakerTokenAmount)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.taker == address(0) || order.taker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && fillTakerTokenAmount > 0);\\r\\n        require(isValidSignature(\\r\\n            order.maker,\\r\\n            order.orderHash,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ));\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        filledTakerTokenAmount = min256(fillTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (filledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (isRoundingError(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount)) {\\r\\n            LogError(uint8(Errors.ROUNDING_ERROR_TOO_LARGE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (!shouldThrowOnInsufficientBalanceOrAllowance && !isTransferable(order, filledTakerTokenAmount)) {\\r\\n            LogError(uint8(Errors.INSUFFICIENT_BALANCE_OR_ALLOWANCE), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint filledMakerTokenAmount = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n        uint paidMakerFee;\\r\\n        uint paidTakerFee;\\r\\n        filled[order.orderHash] = safeAdd(filled[order.orderHash], filledTakerTokenAmount);\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.makerToken,\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            filledMakerTokenAmount\\r\\n        ));\\r\\n        require(transferViaTokenTransferProxy(\\r\\n            order.takerToken,\\r\\n            msg.sender,\\r\\n            order.maker,\\r\\n            filledTakerTokenAmount\\r\\n        ));\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            if (order.makerFee > 0) {\\r\\n                paidMakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    order.maker,\\r\\n                    order.feeRecipient,\\r\\n                    paidMakerFee\\r\\n                ));\\r\\n            }\\r\\n            if (order.takerFee > 0) {\\r\\n                paidTakerFee = getPartialAmount(filledTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n                require(transferViaTokenTransferProxy(\\r\\n                    ZRX_TOKEN_CONTRACT,\\r\\n                    msg.sender,\\r\\n                    order.feeRecipient,\\r\\n                    paidTakerFee\\r\\n                ));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        LogFill(\\r\\n            order.maker,\\r\\n            msg.sender,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            filledMakerTokenAmount,\\r\\n            filledTakerTokenAmount,\\r\\n            paidMakerFee,\\r\\n            paidTakerFee,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Cancels the input order.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param cancelTakerTokenAmount Desired amount of takerToken to cancel in order.\\r\\n    /// @return Amount of takerToken cancelled.\\r\\n    function cancelOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint cancelTakerTokenAmount)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        Order memory order = Order({\\r\\n            maker: orderAddresses[0],\\r\\n            taker: orderAddresses[1],\\r\\n            makerToken: orderAddresses[2],\\r\\n            takerToken: orderAddresses[3],\\r\\n            feeRecipient: orderAddresses[4],\\r\\n            makerTokenAmount: orderValues[0],\\r\\n            takerTokenAmount: orderValues[1],\\r\\n            makerFee: orderValues[2],\\r\\n            takerFee: orderValues[3],\\r\\n            expirationTimestampInSec: orderValues[4],\\r\\n            orderHash: getOrderHash(orderAddresses, orderValues)\\r\\n        });\\r\\n\\r\\n        require(order.maker == msg.sender);\\r\\n        require(order.makerTokenAmount > 0 && order.takerTokenAmount > 0 && cancelTakerTokenAmount > 0);\\r\\n\\r\\n        if (block.timestamp >= order.expirationTimestampInSec) {\\r\\n            LogError(uint8(Errors.ORDER_EXPIRED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint remainingTakerTokenAmount = safeSub(order.takerTokenAmount, getUnavailableTakerTokenAmount(order.orderHash));\\r\\n        uint cancelledTakerTokenAmount = min256(cancelTakerTokenAmount, remainingTakerTokenAmount);\\r\\n        if (cancelledTakerTokenAmount == 0) {\\r\\n            LogError(uint8(Errors.ORDER_FULLY_FILLED_OR_CANCELLED), order.orderHash);\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        cancelled[order.orderHash] = safeAdd(cancelled[order.orderHash], cancelledTakerTokenAmount);\\r\\n\\r\\n        LogCancel(\\r\\n            order.maker,\\r\\n            order.feeRecipient,\\r\\n            order.makerToken,\\r\\n            order.takerToken,\\r\\n            getPartialAmount(cancelledTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount),\\r\\n            cancelledTakerTokenAmount,\\r\\n            keccak256(order.makerToken, order.takerToken),\\r\\n            order.orderHash\\r\\n        );\\r\\n        return cancelledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Wrapper functions\\r\\n    */\\r\\n\\r\\n    /// @dev Fills an order with specified parameters and ECDSA signature, throws if specified amount not filled entirely.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    function fillOrKillOrder(\\r\\n        address[5] orderAddresses,\\r\\n        uint[6] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n    {\\r\\n        require(fillOrder(\\r\\n            orderAddresses,\\r\\n            orderValues,\\r\\n            fillTakerTokenAmount,\\r\\n            false,\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        ) == fillTakerTokenAmount);\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fillOrKill orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmounts Array of desired amounts of takerToken to fill in orders.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    function batchFillOrKillOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] fillTakerTokenAmounts,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            fillOrKillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                fillTakerTokenAmounts[i],\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously executes multiple fill orders in a single transaction until total fillTakerTokenAmount filled.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param fillTakerTokenAmount Desired total amount of takerToken to fill in orders.\\r\\n    /// @param shouldThrowOnInsufficientBalanceOrAllowance Test if transfers will fail before attempting.\\r\\n    /// @param v Array ECDSA signature v parameters.\\r\\n    /// @param r Array of ECDSA signature r parameters.\\r\\n    /// @param s Array of ECDSA signature s parameters.\\r\\n    /// @return Total amount of fillTakerTokenAmount filled in orders.\\r\\n    function fillOrdersUpTo(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint fillTakerTokenAmount,\\r\\n        bool shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n        uint8[] v,\\r\\n        bytes32[] r,\\r\\n        bytes32[] s)\\r\\n        public\\r\\n        returns (uint)\\r\\n    {\\r\\n        uint filledTakerTokenAmount = 0;\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            require(orderAddresses[i][3] == orderAddresses[0][3]); // takerToken must be the same for each order\\r\\n            filledTakerTokenAmount = safeAdd(filledTakerTokenAmount, fillOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                safeSub(fillTakerTokenAmount, filledTakerTokenAmount),\\r\\n                shouldThrowOnInsufficientBalanceOrAllowance,\\r\\n                v[i],\\r\\n                r[i],\\r\\n                s[i]\\r\\n            ));\\r\\n            if (filledTakerTokenAmount == fillTakerTokenAmount) break;\\r\\n        }\\r\\n        return filledTakerTokenAmount;\\r\\n    }\\r\\n\\r\\n    /// @dev Synchronously cancels multiple orders in a single transaction.\\r\\n    /// @param orderAddresses Array of address arrays containing individual order addresses.\\r\\n    /// @param orderValues Array of uint arrays containing individual order values.\\r\\n    /// @param cancelTakerTokenAmounts Array of desired amounts of takerToken to cancel in orders.\\r\\n    function batchCancelOrders(\\r\\n        address[5][] orderAddresses,\\r\\n        uint[6][] orderValues,\\r\\n        uint[] cancelTakerTokenAmounts)\\r\\n        public\\r\\n    {\\r\\n        for (uint i = 0; i < orderAddresses.length; i++) {\\r\\n            cancelOrder(\\r\\n                orderAddresses[i],\\r\\n                orderValues[i],\\r\\n                cancelTakerTokenAmounts[i]\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * Constant public functions\\r\\n    */\\r\\n\\r\\n    /// @dev Calculates Keccak-256 hash of order with specified parameters.\\r\\n    /// @param orderAddresses Array of order's maker, taker, makerToken, takerToken, and feeRecipient.\\r\\n    /// @param orderValues Array of order's makerTokenAmount, takerTokenAmount, makerFee, takerFee, expirationTimestampInSec, and salt.\\r\\n    /// @return Keccak-256 hash of order.\\r\\n    function getOrderHash(address[5] orderAddresses, uint[6] orderValues)\\r\\n        public\\r\\n        constant\\r\\n        returns (bytes32)\\r\\n    {\\r\\n        return keccak256(\\r\\n            address(this),\\r\\n            orderAddresses[0], // maker\\r\\n            orderAddresses[1], // taker\\r\\n            orderAddresses[2], // makerToken\\r\\n            orderAddresses[3], // takerToken\\r\\n            orderAddresses[4], // feeRecipient\\r\\n            orderValues[0],    // makerTokenAmount\\r\\n            orderValues[1],    // takerTokenAmount\\r\\n            orderValues[2],    // makerFee\\r\\n            orderValues[3],    // takerFee\\r\\n            orderValues[4],    // expirationTimestampInSec\\r\\n            orderValues[5]     // salt\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Verifies that an order signature is valid.\\r\\n    /// @param signer address of signer.\\r\\n    /// @param hash Signed Keccak-256 hash.\\r\\n    /// @param v ECDSA signature parameter v.\\r\\n    /// @param r ECDSA signature parameters r.\\r\\n    /// @param s ECDSA signature parameters s.\\r\\n    /// @return Validity of order signature.\\r\\n    function isValidSignature(\\r\\n        address signer,\\r\\n        bytes32 hash,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        return signer == ecrecover(\\r\\n            keccak256(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash),\\r\\n            v,\\r\\n            r,\\r\\n            s\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if rounding error > 0.1%.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to multiply with numerator/denominator.\\r\\n    /// @return Rounding error is present.\\r\\n    function isRoundingError(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (bool)\\r\\n    {\\r\\n        uint remainder = mulmod(target, numerator, denominator);\\r\\n        if (remainder == 0) return false; // No rounding error.\\r\\n\\r\\n        uint errPercentageTimes1000000 = safeDiv(\\r\\n            safeMul(remainder, 1000000),\\r\\n            safeMul(numerator, target)\\r\\n        );\\r\\n        return errPercentageTimes1000000 > 1000;\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates partial value given a numerator and denominator.\\r\\n    /// @param numerator Numerator.\\r\\n    /// @param denominator Denominator.\\r\\n    /// @param target Value to calculate partial of.\\r\\n    /// @return Partial value of target.\\r\\n    function getPartialAmount(uint numerator, uint denominator, uint target)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeDiv(safeMul(numerator, target), denominator);\\r\\n    }\\r\\n\\r\\n    /// @dev Calculates the sum of values already filled and cancelled for a given order.\\r\\n    /// @param orderHash The Keccak-256 hash of the given order.\\r\\n    /// @return Sum of values already filled and cancelled.\\r\\n    function getUnavailableTakerTokenAmount(bytes32 orderHash)\\r\\n        public\\r\\n        constant\\r\\n        returns (uint)\\r\\n    {\\r\\n        return safeAdd(filled[orderHash], cancelled[orderHash]);\\r\\n    }\\r\\n\\r\\n\\r\\n    /*\\r\\n    * Internal functions\\r\\n    */\\r\\n\\r\\n    /// @dev Transfers a token using TokenTransferProxy transferFrom function.\\r\\n    /// @param token Address of token to transferFrom.\\r\\n    /// @param from Address transfering token.\\r\\n    /// @param to Address receiving token.\\r\\n    /// @param value Amount of token to transfer.\\r\\n    /// @return Success of token transfer.\\r\\n    function transferViaTokenTransferProxy(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint value)\\r\\n        internal\\r\\n        returns (bool)\\r\\n    {\\r\\n        return TokenTransferProxy(TOKEN_TRANSFER_PROXY_CONTRACT).transferFrom(token, from, to, value);\\r\\n    }\\r\\n\\r\\n    /// @dev Checks if any order transfers will fail.\\r\\n    /// @param order Order struct of params that will be checked.\\r\\n    /// @param fillTakerTokenAmount Desired amount of takerToken to fill.\\r\\n    /// @return Predicted result of transfers.\\r\\n    function isTransferable(Order order, uint fillTakerTokenAmount)\\r\\n        internal\\r\\n        constant  // The called token contracts may attempt to change state, but will not be able to due to gas limits on getBalance and getAllowance.\\r\\n        returns (bool)\\r\\n    {\\r\\n        address taker = msg.sender;\\r\\n        uint fillMakerTokenAmount = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerTokenAmount);\\r\\n\\r\\n        if (order.feeRecipient != address(0)) {\\r\\n            bool isMakerTokenZRX = order.makerToken == ZRX_TOKEN_CONTRACT;\\r\\n            bool isTakerTokenZRX = order.takerToken == ZRX_TOKEN_CONTRACT;\\r\\n            uint paidMakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.makerFee);\\r\\n            uint paidTakerFee = getPartialAmount(fillTakerTokenAmount, order.takerTokenAmount, order.takerFee);\\r\\n            uint requiredMakerZRX = isMakerTokenZRX ? safeAdd(fillMakerTokenAmount, paidMakerFee) : paidMakerFee;\\r\\n            uint requiredTakerZRX = isTakerTokenZRX ? safeAdd(fillTakerTokenAmount, paidTakerFee) : paidTakerFee;\\r\\n\\r\\n            if (   getBalance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, order.maker) < requiredMakerZRX\\r\\n                || getBalance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n                || getAllowance(ZRX_TOKEN_CONTRACT, taker) < requiredTakerZRX\\r\\n            ) return false;\\r\\n\\r\\n            if (!isMakerTokenZRX && (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount // Don't double check makerToken if ZRX\\r\\n                                     || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount)\\r\\n            ) return false;\\r\\n            if (!isTakerTokenZRX && (   getBalance(order.takerToken, taker) < fillTakerTokenAmount // Don't double check takerToken if ZRX\\r\\n                                     || getAllowance(order.takerToken, taker) < fillTakerTokenAmount)\\r\\n            ) return false;\\r\\n        } else if (   getBalance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getAllowance(order.makerToken, order.maker) < fillMakerTokenAmount\\r\\n                   || getBalance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n                   || getAllowance(order.takerToken, taker) < fillTakerTokenAmount\\r\\n        ) return false;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Get token balance of an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Token balance of owner.\\r\\n    function getBalance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).balanceOf.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n\\r\\n    /// @dev Get allowance of token given to TokenTransferProxy by an address.\\r\\n    /// @param token Address of token.\\r\\n    /// @param owner Address of owner.\\r\\n    /// @return Allowance of token given to TokenTransferProxy by owner.\\r\\n    function getAllowance(address token, address owner)\\r\\n        internal\\r\\n        constant  // The called token contract may attempt to change state, but will not be able to due to an added gas limit.\\r\\n        returns (uint)\\r\\n    {\\r\\n        return Token(token).allowance.gas(EXTERNAL_QUERY_GAS_LIMIT)(owner, TOKEN_TRANSFER_PROXY_CONTRACT); // Limit gas to prevent reentrancy\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf60522835e0cfba7dcd772dc909e4589a392543df3bad8f02343dd22188ff228\"}},\"version\":1}","userdoc":{"methods":{}}}}},"errors":[{"component":"general","formattedMessage":"contract:49:46: Warning: Unused local variable\n    function totalSupply() constant returns (uint supply) {}\r\n                                             ^---------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:53:24: Warning: Unused local variable\n    function balanceOf(address _owner) constant returns (uint balance) {}\r\n                       ^------------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:53:58: Warning: Unused local variable\n    function balanceOf(address _owner) constant returns (uint balance) {}\r\n                                                         ^----------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:59:23: Warning: Unused local variable\n    function transfer(address _to, uint _value) returns (bool success) {}\r\n                      ^---------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:59:36: Warning: Unused local variable\n    function transfer(address _to, uint _value) returns (bool success) {}\r\n                                   ^---------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:59:58: Warning: Unused local variable\n    function transfer(address _to, uint _value) returns (bool success) {}\r\n                                                         ^----------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:66:27: Warning: Unused local variable\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\r\n                          ^-----------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:66:42: Warning: Unused local variable\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\r\n                                         ^---------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:66:55: Warning: Unused local variable\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\r\n                                                      ^---------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:66:77: Warning: Unused local variable\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\r\n                                                                            ^----------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:72:22: Warning: Unused local variable\n    function approve(address _spender, uint _value) returns (bool success) {}\r\n                     ^--------------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:72:40: Warning: Unused local variable\n    function approve(address _spender, uint _value) returns (bool success) {}\r\n                                       ^---------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:72:62: Warning: Unused local variable\n    function approve(address _spender, uint _value) returns (bool success) {}\r\n                                                             ^----------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:77:24: Warning: Unused local variable\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\r\n                       ^------------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:77:40: Warning: Unused local variable\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\r\n                                       ^--------------^\n","message":"Unused local variable","severity":"warning","type":"Warning"},{"component":"general","formattedMessage":"contract:77:76: Warning: Unused local variable\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\r\n                                                                           ^------------^\n","message":"Unused local variable","severity":"warning","type":"Warning"}],"sources":{"contract":{"ast":{"absolutePath":"contract","exportedSymbols":{"Exchange":[1808],"Ownable":[43],"SafeMath":[458],"Token":[116],"TokenTransferProxy":[297]},"id":1809,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.4",".14"],"nodeType":"PragmaDirective","src":"598:23:0"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":43,"linearizedBaseContracts":[43],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3,"name":"owner","nodeType":"VariableDeclaration","scope":43,"src":"825:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"825:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"body":{"id":11,"nodeType":"Block","src":"873:37:0","statements":[{"expression":{"argumentTypes":null,"id":9,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":6,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"884:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":7,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"892:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"892:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"884:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10,"nodeType":"ExpressionStatement","src":"884:18:0"}]},"id":12,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"Ownable","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"870:2:0"},"payable":false,"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"873:0:0"},"scope":43,"src":"854:56:0","visibility":"public"},{"body":{"id":22,"nodeType":"Block","src":"939:59:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":15,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"958:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":16,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"958:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":17,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"972:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"958:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":14,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"950:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"950:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":20,"nodeType":"ExpressionStatement","src":"950:28:0"},{"id":21,"nodeType":"PlaceholderStatement","src":"989:1:0"}]},"id":23,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"936:2:0"},"src":"918:80:0","visibility":"internal"},{"body":{"id":41,"nodeType":"Block","src":"1061:89:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":30,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"1076:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1096:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":31,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1088:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1088:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1076:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":40,"nodeType":"IfStatement","src":"1072:71:0","trueBody":{"id":39,"nodeType":"Block","src":"1100:43:0","statements":[{"expression":{"argumentTypes":null,"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":35,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"1115:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":36,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"1123:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1115:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":38,"nodeType":"ExpressionStatement","src":"1115:16:0"}]}}]},"id":42,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[],"id":28,"modifierName":{"argumentTypes":null,"id":27,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"1051:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1051:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"name":"newOwner","nodeType":"VariableDeclaration","scope":42,"src":"1033:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1032:18:0"},"payable":false,"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1061:0:0"},"scope":43,"src":"1006:144:0","visibility":"public"}],"scope":1809,"src":"801:352:0"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":116,"linearizedBaseContracts":[116],"name":"Token","nodeType":"ContractDefinition","nodes":[{"body":{"id":48,"nodeType":"Block","src":"1275:2:0","statements":[]},"id":49,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[],"src":"1241:2:0"},"payable":false,"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"name":"supply","nodeType":"VariableDeclaration","scope":49,"src":"1262:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint","nodeType":"ElementaryTypeName","src":"1262:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1261:13:0"},"scope":116,"src":"1221:56:0","visibility":"public"},{"body":{"id":56,"nodeType":"Block","src":"1457:2:0","statements":[]},"id":57,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"name":"_owner","nodeType":"VariableDeclaration","scope":57,"src":"1409:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1408:16:0"},"payable":false,"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"name":"balance","nodeType":"VariableDeclaration","scope":57,"src":"1443:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint","nodeType":"ElementaryTypeName","src":"1443:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1442:14:0"},"scope":116,"src":"1390:69:0","visibility":"public"},{"body":{"id":66,"nodeType":"Block","src":"1768:2:0","statements":[]},"id":67,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"name":"_to","nodeType":"VariableDeclaration","scope":67,"src":"1719:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"1719:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":61,"name":"_value","nodeType":"VariableDeclaration","scope":67,"src":"1732:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint","nodeType":"ElementaryTypeName","src":"1732:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1718:26:0"},"payable":false,"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"name":"success","nodeType":"VariableDeclaration","scope":67,"src":"1754:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":63,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1753:14:0"},"scope":116,"src":"1701:69:0","visibility":"public"},{"body":{"id":78,"nodeType":"Block","src":"2184:2:0","statements":[]},"id":79,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"name":"_from","nodeType":"VariableDeclaration","scope":79,"src":"2120:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2120:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":71,"name":"_to","nodeType":"VariableDeclaration","scope":79,"src":"2135:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":73,"name":"_value","nodeType":"VariableDeclaration","scope":79,"src":"2148:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint","nodeType":"ElementaryTypeName","src":"2148:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2119:41:0"},"payable":false,"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"name":"success","nodeType":"VariableDeclaration","scope":79,"src":"2170:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"2170:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2169:14:0"},"scope":116,"src":"2098:88:0","visibility":"public"},{"body":{"id":88,"nodeType":"Block","src":"2546:2:0","statements":[]},"id":89,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"name":"_spender","nodeType":"VariableDeclaration","scope":89,"src":"2492:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":83,"name":"_value","nodeType":"VariableDeclaration","scope":89,"src":"2510:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint","nodeType":"ElementaryTypeName","src":"2510:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2491:31:0"},"payable":false,"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"name":"success","nodeType":"VariableDeclaration","scope":89,"src":"2532:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":85,"name":"bool","nodeType":"ElementaryTypeName","src":"2532:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2531:14:0"},"scope":116,"src":"2475:73:0","visibility":"public"},{"body":{"id":98,"nodeType":"Block","src":"2848:2:0","statements":[]},"id":99,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"name":"_owner","nodeType":"VariableDeclaration","scope":99,"src":"2780:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"2780:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":93,"name":"_spender","nodeType":"VariableDeclaration","scope":99,"src":"2796:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2796:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2779:34:0"},"payable":false,"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"name":"remaining","nodeType":"VariableDeclaration","scope":99,"src":"2832:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint","nodeType":"ElementaryTypeName","src":"2832:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2831:16:0"},"scope":116,"src":"2761:89:0","visibility":"public"},{"anonymous":false,"id":107,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"indexed":true,"name":"_from","nodeType":"VariableDeclaration","scope":107,"src":"2873:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2873:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":103,"indexed":true,"name":"_to","nodeType":"VariableDeclaration","scope":107,"src":"2896:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"2896:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":105,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":107,"src":"2917:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint","nodeType":"ElementaryTypeName","src":"2917:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2872:57:0"},"src":"2858:72:0"},{"anonymous":false,"id":115,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"indexed":true,"name":"_owner","nodeType":"VariableDeclaration","scope":115,"src":"2951:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":111,"indexed":true,"name":"_spender","nodeType":"VariableDeclaration","scope":115,"src":"2975:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":113,"indexed":false,"name":"_value","nodeType":"VariableDeclaration","scope":115,"src":"3001:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint","nodeType":"ElementaryTypeName","src":"3001:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2950:63:0"},"src":"2936:78:0"}],"scope":1809,"src":"1157:1860:0"},{"baseContracts":[{"arguments":[],"baseName":{"contractScope":null,"id":117,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":43,"src":"3503:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$43","typeString":"contract Ownable"}},"id":118,"nodeType":"InheritanceSpecifier","src":"3503:7:0"}],"contractDependencies":[43],"contractKind":"contract","documentation":"@title TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\r\n @author Amir Bandeali - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"5c3d31352e1c6c240c2e3336393f28723f3331\">[email protected]</a>,>, Will Warren - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"35425c595975054d65475a5f5056411b565a58\">[email protected]</a>,>\r","fullyImplemented":true,"id":297,"linearizedBaseContracts":[297,43],"name":"TokenTransferProxy","nodeType":"ContractDefinition","nodes":[{"body":{"id":128,"nodeType":"Block","src":"3625:62:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":121,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"3644:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":124,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":122,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3655:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3655:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3644:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"3636:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":126,"nodeType":"ExpressionStatement","src":"3636:31:0"},{"id":127,"nodeType":"PlaceholderStatement","src":"3678:1:0"}]},"id":129,"name":"onlyAuthorized","nodeType":"ModifierDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"3625:0:0"},"src":"3601:86:0","visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"3737:58:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":134,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"3756:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":136,"indexExpression":{"argumentTypes":null,"id":135,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"3767:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3756:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"3748:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3748:27:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":138,"nodeType":"ExpressionStatement","src":"3748:27:0"},{"id":139,"nodeType":"PlaceholderStatement","src":"3786:1:0"}]},"id":141,"name":"targetAuthorized","nodeType":"ModifierDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"name":"target","nodeType":"VariableDeclaration","scope":141,"src":"3721:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"3721:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3720:16:0"},"src":"3695:100:0","visibility":"internal"},{"body":{"id":153,"nodeType":"Block","src":"3848:59:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3867:19:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":146,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"3868:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":148,"indexExpression":{"argumentTypes":null,"id":147,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"3879:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3868:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"3859:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3859:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"3859:28:0"},{"id":152,"nodeType":"PlaceholderStatement","src":"3898:1:0"}]},"id":154,"name":"targetNotAuthorized","nodeType":"ModifierDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"name":"target","nodeType":"VariableDeclaration","scope":154,"src":"3832:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3831:16:0"},"src":"3803:104:0","visibility":"internal"},{"constant":false,"id":158,"name":"authorized","nodeType":"VariableDeclaration","scope":297,"src":"3915:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":157,"keyType":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3915:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":156,"name":"bool","nodeType":"ElementaryTypeName","src":"3935:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"public"},{"constant":false,"id":161,"name":"authorities","nodeType":"VariableDeclaration","scope":297,"src":"3965:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"},"typeName":{"baseType":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"3965:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":160,"length":null,"nodeType":"ArrayTypeName","src":"3965:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"value":null,"visibility":"public"},{"anonymous":false,"id":167,"name":"LogAuthorizedAddressAdded","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"indexed":true,"name":"target","nodeType":"VariableDeclaration","scope":167,"src":"4034:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"4034:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":165,"indexed":true,"name":"caller","nodeType":"VariableDeclaration","scope":167,"src":"4058:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"4058:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4033:48:0"},"src":"4002:80:0"},{"anonymous":false,"id":173,"name":"LogAuthorizedAddressRemoved","nodeType":"EventDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"indexed":true,"name":"target","nodeType":"VariableDeclaration","scope":173,"src":"4122:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"4122:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":171,"indexed":true,"name":"caller","nodeType":"VariableDeclaration","scope":173,"src":"4146:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"4146:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4121:48:0"},"src":"4088:82:0"},{"body":{"id":201,"nodeType":"Block","src":"4427:135:0","statements":[{"expression":{"argumentTypes":null,"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":183,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"4438:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":185,"indexExpression":{"argumentTypes":null,"id":184,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"4449:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4438:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4459:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4438:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"4438:25:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":192,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"4491:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":189,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4474:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4474:16:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4474:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":194,"nodeType":"ExpressionStatement","src":"4474:24:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":196,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"4535:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4543:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4543:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":195,"name":"LogAuthorizedAddressAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4509:25:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) constant"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4509:45:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"4509:45:0"}]},"id":202,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[],"id":178,"modifierName":{"argumentTypes":null,"id":177,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"4375:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"4375:9:0"},{"arguments":[{"argumentTypes":null,"id":180,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"4414:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":181,"modifierName":{"argumentTypes":null,"id":179,"name":"targetNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"4394:19:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"4394:27:0"}],"name":"addAuthorizedAddress","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"name":"target","nodeType":"VariableDeclaration","scope":202,"src":"4334:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"4334:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4333:16:0"},"payable":false,"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"4427:0:0"},"scope":297,"src":"4304:258:0","visibility":"public"},{"body":{"id":261,"nodeType":"Block","src":"4803:367:0","statements":[{"expression":{"argumentTypes":null,"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4814:25:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":212,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"4821:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":214,"indexExpression":{"argumentTypes":null,"id":213,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"4832:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4821:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"4814:25:0"},{"body":{"id":253,"nodeType":"Block","src":"4896:209:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":228,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4915:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":230,"indexExpression":{"argumentTypes":null,"id":229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4927:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4915:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":231,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"4933:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4915:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":252,"nodeType":"IfStatement","src":"4911:183:0","trueBody":{"id":251,"nodeType":"Block","src":"4941:153:0","statements":[{"expression":{"argumentTypes":null,"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":233,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4960:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":235,"indexExpression":{"argumentTypes":null,"id":234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4972:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4960:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":236,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4977:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":241,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":237,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4989:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4989:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5010:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4989:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4977:35:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4960:52:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":243,"nodeType":"ExpressionStatement","src":"4960:52:0"},{"expression":{"argumentTypes":null,"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":244,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5031:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5031:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5053:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5031:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":249,"nodeType":"ExpressionStatement","src":"5031:23:0"},{"id":250,"nodeType":"Break","src":"5073:5:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4867:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":222,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4871:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4871:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4867:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":254,"initializationExpression":{"assignments":[218],"declarations":[{"constant":false,"id":218,"name":"i","nodeType":"VariableDeclaration","scope":262,"src":"4855:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint","nodeType":"ElementaryTypeName","src":"4855:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":220,"initialValue":{"argumentTypes":null,"hexValue":"30","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4864:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4855:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4891:3:0","subExpression":{"argumentTypes":null,"id":225,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4891:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":227,"nodeType":"ExpressionStatement","src":"4891:3:0"},"nodeType":"ForStatement","src":"4850:255:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":256,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"5143:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":257,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"5151:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5151:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":255,"name":"LogAuthorizedAddressRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5115:27:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) constant"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5115:47:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"5115:47:0"}]},"id":262,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[],"id":207,"modifierName":{"argumentTypes":null,"id":206,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"4754:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"4754:9:0"},{"arguments":[{"argumentTypes":null,"id":209,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"4790:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":210,"modifierName":{"argumentTypes":null,"id":208,"name":"targetAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4773:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"4773:24:0"}],"name":"removeAuthorizedAddress","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"name":"target","nodeType":"VariableDeclaration","scope":262,"src":"4713:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"4713:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4712:16:0"},"payable":false,"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"4803:0:0"},"scope":297,"src":"4680:490:0","visibility":"public"},{"body":{"id":286,"nodeType":"Block","src":"5672:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":281,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"5716:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":282,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"5722:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5726:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":278,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"5696:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":277,"name":"Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"5690:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Token_$116_$","typeString":"type(contract Token)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5690:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_Token_$116","typeString":"contract Token"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":79,"src":"5690:25:0","typeDescriptions":{"typeIdentifier":"t_function_external$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5690:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":276,"id":285,"nodeType":"Return","src":"5683:49:0"}]},"id":287,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[],"id":273,"modifierName":{"argumentTypes":null,"id":272,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5628:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5628:14:0"}],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"name":"token","nodeType":"VariableDeclaration","scope":287,"src":"5523:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5523:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":266,"name":"from","nodeType":"VariableDeclaration","scope":287,"src":"5547:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"5547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":268,"name":"to","nodeType":"VariableDeclaration","scope":287,"src":"5570:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":270,"name":"value","nodeType":"VariableDeclaration","scope":287,"src":"5591:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint","nodeType":"ElementaryTypeName","src":"5591:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5512:90:0"},"payable":false,"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"name":"","nodeType":"VariableDeclaration","scope":287,"src":"5661:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":274,"name":"bool","nodeType":"ElementaryTypeName","src":"5661:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5660:6:0"},"scope":297,"src":"5491:249:0","visibility":"public"},{"body":{"id":295,"nodeType":"Block","src":"5996:37:0","statements":[{"expression":{"argumentTypes":null,"id":293,"name":"authorities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"6014:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":292,"id":294,"nodeType":"Return","src":"6007:18:0"}]},"id":296,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getAuthorizedAddresses","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"5925:2:0"},"payable":false,"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"name":"","nodeType":"VariableDeclaration","scope":296,"src":"5980:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},"typeName":{"baseType":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"5980:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":290,"length":null,"nodeType":"ArrayTypeName","src":"5980:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"value":null,"visibility":"internal"}],"src":"5979:11:0"},"scope":297,"src":"5894:139:0","visibility":"public"}],"scope":1809,"src":"3472:2564:0"},{"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":458,"linearizedBaseContracts":[458],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":326,"nodeType":"Block","src":"6134:91:0","statements":[{"assignments":[307],"declarations":[{"constant":false,"id":307,"name":"c","nodeType":"VariableDeclaration","scope":327,"src":"6145:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint","nodeType":"ElementaryTypeName","src":"6145:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":311,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"6154:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"6158:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6154:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6145:14:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"6177:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6182:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6177:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":316,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6187:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"6191:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6187:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":319,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"6196:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6187:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6177:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":312,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6170:6:0","typeDescriptions":{"typeIdentifier":"t_function_assert$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6170:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"6170:28:0"},{"expression":{"argumentTypes":null,"id":324,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6216:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":305,"id":325,"nodeType":"Return","src":"6209:8:0"}]},"id":327,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"safeMul","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"name":"a","nodeType":"VariableDeclaration","scope":327,"src":"6082:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint","nodeType":"ElementaryTypeName","src":"6082:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":301,"name":"b","nodeType":"VariableDeclaration","scope":327,"src":"6090:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint","nodeType":"ElementaryTypeName","src":"6090:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6081:16:0"},"payable":false,"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"name":"","nodeType":"VariableDeclaration","scope":327,"src":"6125:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6124:9:0"},"scope":458,"src":"6065:160:0","visibility":"internal"},{"body":{"id":344,"nodeType":"Block","src":"6302:52:0","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"name":"c","nodeType":"VariableDeclaration","scope":345,"src":"6313:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint","nodeType":"ElementaryTypeName","src":"6313:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":341,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6322:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6326:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6322:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6313:14:0"},{"expression":{"argumentTypes":null,"id":342,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6345:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":335,"id":343,"nodeType":"Return","src":"6338:8:0"}]},"id":345,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"safeDiv","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"name":"a","nodeType":"VariableDeclaration","scope":345,"src":"6250:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint","nodeType":"ElementaryTypeName","src":"6250:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":331,"name":"b","nodeType":"VariableDeclaration","scope":345,"src":"6258:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint","nodeType":"ElementaryTypeName","src":"6258:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6249:16:0"},"payable":false,"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"name":"","nodeType":"VariableDeclaration","scope":345,"src":"6293:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6293:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6292:9:0"},"scope":458,"src":"6233:121:0","visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"6431:56:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6449:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6454:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6449:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":354,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6442:6:0","typeDescriptions":{"typeIdentifier":"t_function_assert$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6442:14:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"6442:14:0"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6474:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":361,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6478:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6474:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":353,"id":363,"nodeType":"Return","src":"6467:12:0"}]},"id":365,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"safeSub","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"name":"a","nodeType":"VariableDeclaration","scope":365,"src":"6379:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint","nodeType":"ElementaryTypeName","src":"6379:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":349,"name":"b","nodeType":"VariableDeclaration","scope":365,"src":"6387:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint","nodeType":"ElementaryTypeName","src":"6387:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6378:16:0"},"payable":false,"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"name":"","nodeType":"VariableDeclaration","scope":365,"src":"6422:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"6422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6421:9:0"},"scope":458,"src":"6362:125:0","visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"6564:77:0","statements":[{"assignments":[375],"declarations":[{"constant":false,"id":375,"name":"c","nodeType":"VariableDeclaration","scope":389,"src":"6575:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint","nodeType":"ElementaryTypeName","src":"6575:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":379,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"6584:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"6588:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6584:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6575:14:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":381,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"6607:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"6612:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6607:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":380,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6600:6:0","typeDescriptions":{"typeIdentifier":"t_function_assert$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6600:14:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"ExpressionStatement","src":"6600:14:0"},{"expression":{"argumentTypes":null,"id":386,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"6632:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":373,"id":387,"nodeType":"Return","src":"6625:8:0"}]},"id":389,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"safeAdd","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"name":"a","nodeType":"VariableDeclaration","scope":389,"src":"6512:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint","nodeType":"ElementaryTypeName","src":"6512:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":369,"name":"b","nodeType":"VariableDeclaration","scope":389,"src":"6520:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint","nodeType":"ElementaryTypeName","src":"6520:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6511:16:0"},"payable":false,"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"name":"","nodeType":"VariableDeclaration","scope":389,"src":"6555:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6554:9:0"},"scope":458,"src":"6495:146:0","visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"6719:40:0","statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6737:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6742:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6737:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6750:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6737:14:0","trueExpression":{"argumentTypes":null,"id":401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6746:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":397,"id":404,"nodeType":"Return","src":"6730:21:0"}]},"id":406,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"max64","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"name":"a","nodeType":"VariableDeclaration","scope":406,"src":"6664:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"6664:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":393,"name":"b","nodeType":"VariableDeclaration","scope":406,"src":"6674:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":392,"name":"uint64","nodeType":"ElementaryTypeName","src":"6674:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"6663:20:0"},"payable":false,"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"name":"","nodeType":"VariableDeclaration","scope":406,"src":"6711:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":395,"name":"uint64","nodeType":"ElementaryTypeName","src":"6711:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"6710:8:0"},"scope":458,"src":"6649:110:0","visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"6837:39:0","statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"6855:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"6859:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6855:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"6867:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6855:13:0","trueExpression":{"argumentTypes":null,"id":418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"6863:1:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":414,"id":421,"nodeType":"Return","src":"6848:20:0"}]},"id":423,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"min64","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"name":"a","nodeType":"VariableDeclaration","scope":423,"src":"6782:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"6782:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":410,"name":"b","nodeType":"VariableDeclaration","scope":423,"src":"6792:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":409,"name":"uint64","nodeType":"ElementaryTypeName","src":"6792:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"6781:20:0"},"payable":false,"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"name":"","nodeType":"VariableDeclaration","scope":423,"src":"6829:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":412,"name":"uint64","nodeType":"ElementaryTypeName","src":"6829:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"6828:8:0"},"scope":458,"src":"6767:109:0","visibility":"internal"},{"body":{"id":439,"nodeType":"Block","src":"6958:40:0","statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6976:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6981:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6976:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6989:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6976:14:0","trueExpression":{"argumentTypes":null,"id":435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6985:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":431,"id":438,"nodeType":"Return","src":"6969:21:0"}]},"id":440,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"max256","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"name":"a","nodeType":"VariableDeclaration","scope":440,"src":"6900:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"6900:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":427,"name":"b","nodeType":"VariableDeclaration","scope":440,"src":"6911:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"6911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6899:22:0"},"payable":false,"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"name":"","nodeType":"VariableDeclaration","scope":440,"src":"6949:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"6949:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6948:9:0"},"scope":458,"src":"6884:114:0","visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"7080:39:0","statements":[{"expression":{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7098:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7102:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7098:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"7110:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7098:13:0","trueExpression":{"argumentTypes":null,"id":452,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"7106:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":448,"id":455,"nodeType":"Return","src":"7091:20:0"}]},"id":457,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"min256","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"name":"a","nodeType":"VariableDeclaration","scope":457,"src":"7022:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"7022:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"name":"b","nodeType":"VariableDeclaration","scope":457,"src":"7033:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7033:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7021:22:0"},"payable":false,"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"name":"","nodeType":"VariableDeclaration","scope":457,"src":"7071:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7070:9:0"},"scope":458,"src":"7006:113:0","visibility":"internal"}],"scope":1809,"src":"6040:1082:0"},{"baseContracts":[{"arguments":[],"baseName":{"contractScope":null,"id":459,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":458,"src":"7532:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$458","typeString":"contract SafeMath"}},"id":460,"nodeType":"InheritanceSpecifier","src":"7532:8:0"}],"contractDependencies":[458],"contractKind":"contract","documentation":"@title Exchange - Facilitates exchange of ERC20 tokens.\r\n @author Amir Bandeali - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"76171b1f0436460e2604191c1315025815191b\">[email protected]</a>,>, Will Warren - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\">[email protected]</a>,>\r","fullyImplemented":true,"id":1808,"linearizedBaseContracts":[1808,458],"name":"Exchange","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Exchange.Errors","id":465,"members":[{"id":461,"name":"ORDER_EXPIRED","nodeType":"EnumValue","src":"7593:13:0"},{"id":462,"name":"ORDER_FULLY_FILLED_OR_CANCELLED","nodeType":"EnumValue","src":"7665:31:0"},{"id":463,"name":"ROUNDING_ERROR_TOO_LARGE","nodeType":"EnumValue","src":"7760:24:0"},{"id":464,"name":"INSUFFICIENT_BALANCE_OR_ALLOWANCE","nodeType":"EnumValue","src":"7831:33:0"}],"name":"Errors","nodeType":"EnumDefinition","src":"7570:357:0"},{"constant":true,"id":468,"name":"VERSION","nodeType":"VariableDeclaration","scope":1808,"src":"7935:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory","typeString":"string memory"},"typeName":{"id":466,"name":"string","nodeType":"ElementaryTypeName","src":"7935:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"value":{"argumentTypes":null,"hexValue":"312e302e30","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7968:7:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"},"visibility":"public"},{"constant":true,"id":471,"name":"EXTERNAL_QUERY_GAS_LIMIT","nodeType":"VariableDeclaration","scope":1808,"src":"7982:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":469,"name":"uint16","nodeType":"ElementaryTypeName","src":"7982:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"argumentTypes":null,"hexValue":"34393939","id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8032:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4999_by_1","typeString":"int_const 4999"},"value":"4999"},"visibility":"public"},{"constant":false,"id":473,"name":"ZRX_TOKEN_CONTRACT","nodeType":"VariableDeclaration","scope":1808,"src":"8094:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"8094:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"id":475,"name":"TOKEN_TRANSFER_PROXY_CONTRACT","nodeType":"VariableDeclaration","scope":1808,"src":"8134:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"8134:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"id":479,"name":"filled","nodeType":"VariableDeclaration","scope":1808,"src":"8269:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":478,"keyType":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8278:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"8269:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":477,"name":"uint","nodeType":"ElementaryTypeName","src":"8289:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"public"},{"constant":false,"id":483,"name":"cancelled","nodeType":"VariableDeclaration","scope":1808,"src":"8315:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":482,"keyType":{"id":480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8324:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"8315:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":481,"name":"uint","nodeType":"ElementaryTypeName","src":"8335:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"public"},{"anonymous":false,"id":507,"name":"LogFill","nodeType":"EventDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"indexed":true,"name":"maker","nodeType":"VariableDeclaration","scope":507,"src":"8390:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"8390:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":487,"indexed":false,"name":"taker","nodeType":"VariableDeclaration","scope":507,"src":"8422:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"8422:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":489,"indexed":true,"name":"feeRecipient","nodeType":"VariableDeclaration","scope":507,"src":"8446:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"8446:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":491,"indexed":false,"name":"makerToken","nodeType":"VariableDeclaration","scope":507,"src":"8485:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"8485:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":493,"indexed":false,"name":"takerToken","nodeType":"VariableDeclaration","scope":507,"src":"8514:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"8514:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":495,"indexed":false,"name":"filledMakerTokenAmount","nodeType":"VariableDeclaration","scope":507,"src":"8543:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint","nodeType":"ElementaryTypeName","src":"8543:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":497,"indexed":false,"name":"filledTakerTokenAmount","nodeType":"VariableDeclaration","scope":507,"src":"8581:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint","nodeType":"ElementaryTypeName","src":"8581:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":499,"indexed":false,"name":"paidMakerFee","nodeType":"VariableDeclaration","scope":507,"src":"8619:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint","nodeType":"ElementaryTypeName","src":"8619:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":501,"indexed":false,"name":"paidTakerFee","nodeType":"VariableDeclaration","scope":507,"src":"8647:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint","nodeType":"ElementaryTypeName","src":"8647:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":503,"indexed":true,"name":"tokens","nodeType":"VariableDeclaration","scope":507,"src":"8675:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8675:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":505,"indexed":false,"name":"orderHash","nodeType":"VariableDeclaration","scope":507,"src":"8781:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"8379:426:0"},"src":"8366:440:0"},{"anonymous":false,"id":525,"name":"LogCancel","nodeType":"EventDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"indexed":true,"name":"maker","nodeType":"VariableDeclaration","scope":525,"src":"8840:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"8840:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":511,"indexed":true,"name":"feeRecipient","nodeType":"VariableDeclaration","scope":525,"src":"8872:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":513,"indexed":false,"name":"makerToken","nodeType":"VariableDeclaration","scope":525,"src":"8911:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"8911:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":515,"indexed":false,"name":"takerToken","nodeType":"VariableDeclaration","scope":525,"src":"8940:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":517,"indexed":false,"name":"cancelledMakerTokenAmount","nodeType":"VariableDeclaration","scope":525,"src":"8969:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint","nodeType":"ElementaryTypeName","src":"8969:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":519,"indexed":false,"name":"cancelledTakerTokenAmount","nodeType":"VariableDeclaration","scope":525,"src":"9010:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint","nodeType":"ElementaryTypeName","src":"9010:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":521,"indexed":true,"name":"tokens","nodeType":"VariableDeclaration","scope":525,"src":"9051:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9051:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":523,"indexed":false,"name":"orderHash","nodeType":"VariableDeclaration","scope":525,"src":"9084:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9084:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"8829:279:0"},"src":"8814:295:0"},{"anonymous":false,"id":531,"name":"LogError","nodeType":"EventDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"indexed":true,"name":"errorId","nodeType":"VariableDeclaration","scope":531,"src":"9132:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":526,"name":"uint8","nodeType":"ElementaryTypeName","src":"9132:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":529,"indexed":true,"name":"orderHash","nodeType":"VariableDeclaration","scope":531,"src":"9155:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9155:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"9131:50:0"},"src":"9117:65:0"},{"canonicalName":"Exchange.Order","id":554,"members":[{"constant":false,"id":533,"name":"maker","nodeType":"VariableDeclaration","scope":554,"src":"9214:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"9214:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":535,"name":"taker","nodeType":"VariableDeclaration","scope":554,"src":"9238:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"9238:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":537,"name":"makerToken","nodeType":"VariableDeclaration","scope":554,"src":"9262:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"9262:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":539,"name":"takerToken","nodeType":"VariableDeclaration","scope":554,"src":"9291:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"9291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":541,"name":"feeRecipient","nodeType":"VariableDeclaration","scope":554,"src":"9320:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"9320:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":543,"name":"makerTokenAmount","nodeType":"VariableDeclaration","scope":554,"src":"9351:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint","nodeType":"ElementaryTypeName","src":"9351:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":545,"name":"takerTokenAmount","nodeType":"VariableDeclaration","scope":554,"src":"9383:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint","nodeType":"ElementaryTypeName","src":"9383:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":547,"name":"makerFee","nodeType":"VariableDeclaration","scope":554,"src":"9415:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint","nodeType":"ElementaryTypeName","src":"9415:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":549,"name":"takerFee","nodeType":"VariableDeclaration","scope":554,"src":"9439:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint","nodeType":"ElementaryTypeName","src":"9439:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":551,"name":"expirationTimestampInSec","nodeType":"VariableDeclaration","scope":554,"src":"9463:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint","nodeType":"ElementaryTypeName","src":"9463:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":553,"name":"orderHash","nodeType":"VariableDeclaration","scope":554,"src":"9503:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9503:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"name":"Order","nodeType":"StructDefinition","scope":1808,"src":"9190:338:0","visibility":"public"},{"body":{"id":569,"nodeType":"Block","src":"9602:111:0","statements":[{"expression":{"argumentTypes":null,"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":561,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"9613:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":562,"name":"_zrxToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"9634:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9613:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":564,"nodeType":"ExpressionStatement","src":"9613:30:0"},{"expression":{"argumentTypes":null,"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":565,"name":"TOKEN_TRANSFER_PROXY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"9654:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":566,"name":"_tokenTransferProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9686:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9654:51:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":568,"nodeType":"ExpressionStatement","src":"9654:51:0"}]},"id":570,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"Exchange","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"name":"_zrxToken","nodeType":"VariableDeclaration","scope":570,"src":"9554:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"9554:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":558,"name":"_tokenTransferProxy","nodeType":"VariableDeclaration","scope":570,"src":"9573:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"9573:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"9553:48:0"},"payable":false,"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"9602:0:0"},"scope":1808,"src":"9536:177:0","visibility":"public"},{"body":{"id":910,"nodeType":"Block","src":"10758:3826:0","statements":[{"assignments":[594],"declarations":[{"constant":false,"id":594,"name":"order","nodeType":"VariableDeclaration","scope":911,"src":"10769:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"},"typeName":{"contractScope":null,"id":593,"name":"Order","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"10769:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_storage_ptr","typeString":"struct Exchange.Order storage pointer"}},"value":null,"visibility":"internal"}],"id":631,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":596,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10818:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":598,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10833:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10818:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":599,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10857:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":601,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10857:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":602,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10901:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":604,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10916:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10901:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":605,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10945:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":607,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10960:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10945:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":608,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10991:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":610,"indexExpression":{"argumentTypes":null,"hexValue":"34","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11006:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10991:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":611,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"11041:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":613,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11053:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11041:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":614,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"11088:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":616,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11100:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11088:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":617,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"11127:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":619,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11139:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11127:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":620,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"11166:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":622,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11178:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11166:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":623,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"11221:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":625,"indexExpression":{"argumentTypes":null,"hexValue":"34","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11233:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11221:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":627,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"11274:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},{"argumentTypes":null,"id":628,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"11290:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}],"id":626,"name":"getOrderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"11261:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$6_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address[5] memory,uint256[6] memory) constant returns (bytes32)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11261:41:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":null,"id":595,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"10790:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Order_$554_storage_ptr_$","typeString":"type(struct Exchange.Order storage pointer)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["maker","taker","makerToken","takerToken","feeRecipient","makerTokenAmount","takerTokenAmount","makerFee","takerFee","expirationTimestampInSec","orderHash"],"nodeType":"FunctionCall","src":"10790:524:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory","typeString":"struct Exchange.Order memory"}},"nodeType":"VariableDeclarationStatement","src":"10769:545:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":633,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11335:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":535,"src":"11335:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11358:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11350:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11350:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11335:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":639,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11364:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":535,"src":"11364:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":641,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"11379:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11379:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11364:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11335:54:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"11327:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11327:63:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"11327:63:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":648,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11409:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":543,"src":"11409:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11409:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":652,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11439:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"11439:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11464:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11439:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11409:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":657,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"11469:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11492:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11469:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11409:84:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"11401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11401:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"11401:93:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":665,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11544:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"11544:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":667,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11570:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"11570:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":669,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11600:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"id":670,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"11616:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":671,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"11632:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":664,"name":"isValidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"11513:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32,uint8,bytes32,bytes32) constant returns (bool)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11513:131:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"11505:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11505:140:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"11505:140:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":675,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"11662:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11662:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":677,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11681:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"expirationTimestampInSec","nodeType":"MemberAccess","referencedDeclaration":551,"src":"11681:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11662:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":692,"nodeType":"IfStatement","src":"11658:159:0","trueBody":{"id":691,"nodeType":"Block","src":"11713:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":682,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"11743:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Errors_$465_$","typeString":"type(enum Exchange.Errors)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ORDER_EXPIRED","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11743:20:0","typeDescriptions":{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11737:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11737:27:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":685,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11766:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"11766:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":680,"name":"LogError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11728:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_uint8_$_t_bytes32_$returns$__$","typeString":"function (uint8,bytes32) constant"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11728:54:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"11728:54:0"},{"expression":{"argumentTypes":null,"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11804:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":592,"id":690,"nodeType":"Return","src":"11797:8:0"}]}},{"assignments":[694],"declarations":[{"constant":false,"id":694,"name":"remainingTakerTokenAmount","nodeType":"VariableDeclaration","scope":911,"src":"11829:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint","nodeType":"ElementaryTypeName","src":"11829:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":703,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":696,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11870:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"11870:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":699,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11925:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"11925:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":698,"name":"getUnavailableTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"11894:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) constant returns (uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11894:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":695,"name":"safeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"11862:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11862:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11829:113:0"},{"expression":{"argumentTypes":null,"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":704,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"11953:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":706,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"11985:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":707,"name":"remainingTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"12007:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":705,"name":"min256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"11978:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11978:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11953:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"11953:80:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":711,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12048:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12074:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12048:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":726,"nodeType":"IfStatement","src":"12044:155:0","trueBody":{"id":725,"nodeType":"Block","src":"12077:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":716,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"12107:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Errors_$465_$","typeString":"type(enum Exchange.Errors)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ORDER_FULLY_FILLED_OR_CANCELLED","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12107:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12101:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12101:45:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":719,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12148:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"12148:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":714,"name":"LogError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"12092:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_uint8_$_t_bytes32_$returns$__$","typeString":"function (uint8,bytes32) constant"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12092:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"12092:72:0"},{"expression":{"argumentTypes":null,"hexValue":"30","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12186:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":592,"id":724,"nodeType":"Return","src":"12179:8:0"}]}},{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12231:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":729,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12255:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"12255:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":731,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12279:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":543,"src":"12279:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":727,"name":"isRoundingError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"12215:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256,uint256) constant returns (bool)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12215:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":746,"nodeType":"IfStatement","src":"12211:208:0","trueBody":{"id":745,"nodeType":"Block","src":"12304:115:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":736,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"12334:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Errors_$465_$","typeString":"type(enum Exchange.Errors)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ROUNDING_ERROR_TOO_LARGE","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12334:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12328:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12328:38:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":739,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12368:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"12368:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":734,"name":"LogError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"12319:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_uint8_$_t_bytes32_$returns$__$","typeString":"function (uint8,bytes32) constant"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12319:65:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"ExpressionStatement","src":"12319:65:0"},{"expression":{"argumentTypes":null,"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12406:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":592,"id":744,"nodeType":"Return","src":"12399:8:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12435:44:0","subExpression":{"argumentTypes":null,"id":747,"name":"shouldThrowOnInsufficientBalanceOrAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"12436:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12483:46:0","subExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":750,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12499:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},{"argumentTypes":null,"id":751,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12506:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":749,"name":"isTransferable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"12484:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_struct$_Order_$554_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct Exchange.Order memory,uint256) constant returns (bool)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12484:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12435:94:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":767,"nodeType":"IfStatement","src":"12431:224:0","trueBody":{"id":766,"nodeType":"Block","src":"12531:124:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":757,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"12561:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Errors_$465_$","typeString":"type(enum Exchange.Errors)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"INSUFFICIENT_BALANCE_OR_ALLOWANCE","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12561:40:0","typeDescriptions":{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12555:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12555:47:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":760,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12604:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"12604:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":755,"name":"LogError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"12546:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_uint8_$_t_bytes32_$returns$__$","typeString":"function (uint8,bytes32) constant"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:74:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"ExpressionStatement","src":"12546:74:0"},{"expression":{"argumentTypes":null,"hexValue":"30","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12642:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":592,"id":765,"nodeType":"Return","src":"12635:8:0"}]}},{"assignments":[769],"declarations":[{"constant":false,"id":769,"name":"filledMakerTokenAmount","nodeType":"VariableDeclaration","scope":911,"src":"12667:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint","nodeType":"ElementaryTypeName","src":"12667:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":777,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":771,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12714:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":772,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12738:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"12738:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":774,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12762:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":543,"src":"12762:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"getPartialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"12697:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) constant returns (uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12697:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12667:118:0"},{"assignments":[],"declarations":[{"constant":false,"id":779,"name":"paidMakerFee","nodeType":"VariableDeclaration","scope":911,"src":"12796:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint","nodeType":"ElementaryTypeName","src":"12796:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":780,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"12796:18:0"},{"assignments":[],"declarations":[{"constant":false,"id":782,"name":"paidTakerFee","nodeType":"VariableDeclaration","scope":911,"src":"12824:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint","nodeType":"ElementaryTypeName","src":"12824:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":783,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"12824:18:0"},{"expression":{"argumentTypes":null,"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":784,"name":"filled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"12852:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":787,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":785,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12859:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"12859:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12852:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":789,"name":"filled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"12886:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":792,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":790,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12893:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"12893:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12886:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":793,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12911:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"12878:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12878:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12852:82:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"nodeType":"ExpressionStatement","src":"12852:82:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":799,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"12997:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"12997:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":801,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13028:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"13028:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"13054:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13054:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":805,"name":"filledMakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"13079:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"name":"transferViaTokenTransferProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"12953:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12953:159:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"12945:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12945:168:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"ExpressionStatement","src":"12945:168:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":811,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13176:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"13176:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":813,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"13207:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13207:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":815,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13232:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"13232:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":817,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"13258:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"transferViaTokenTransferProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"13132:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13132:159:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"13124:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13124:168:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"13124:168:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":821,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13307:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeRecipient","nodeType":"MemberAccess","referencedDeclaration":541,"src":"13307:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13337:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13329:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13329:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13307:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":882,"nodeType":"IfStatement","src":"13303:839:0","trueBody":{"id":881,"nodeType":"Block","src":"13341:801:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":827,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13360:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":547,"src":"13360:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13377:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13360:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":853,"nodeType":"IfStatement","src":"13356:381:0","trueBody":{"id":852,"nodeType":"Block","src":"13380:357:0","statements":[{"expression":{"argumentTypes":null,"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":831,"name":"paidMakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13399:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":833,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"13431:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":834,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13455:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"13455:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":836,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13479:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":547,"src":"13479:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"name":"getPartialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"13414:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) constant returns (uint256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13414:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13399:95:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":840,"nodeType":"ExpressionStatement","src":"13399:95:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":843,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"13573:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":844,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13614:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"13614:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":846,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13648:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeRecipient","nodeType":"MemberAccess","referencedDeclaration":541,"src":"13648:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":848,"name":"paidMakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"13689:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":842,"name":"transferViaTokenTransferProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"13521:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13521:199:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"13513:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13513:208:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"13513:208:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":854,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13755:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":549,"src":"13755:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13772:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13755:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":880,"nodeType":"IfStatement","src":"13751:380:0","trueBody":{"id":879,"nodeType":"Block","src":"13775:356:0","statements":[{"expression":{"argumentTypes":null,"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":858,"name":"paidTakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"13794:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":860,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"13826:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":861,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13850:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"13850:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":863,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"13874:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":549,"src":"13874:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"getPartialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"13809:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) constant returns (uint256)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13809:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13794:95:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"13794:95:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":870,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"13968:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"14009:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14009:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":873,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14042:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeRecipient","nodeType":"MemberAccess","referencedDeclaration":541,"src":"14042:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":875,"name":"paidTakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"14083:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":869,"name":"transferViaTokenTransferProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"13916:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13916:198:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"13908:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13908:207:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"13908:207:0"}]}}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":884,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14176:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"14176:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"14202:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14202:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":888,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14227:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeRecipient","nodeType":"MemberAccess","referencedDeclaration":541,"src":"14227:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":890,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14260:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"14260:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":892,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14291:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"14291:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":894,"name":"filledMakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"14322:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":895,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"14359:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":896,"name":"paidMakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"14396:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":897,"name":"paidTakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"14423:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":899,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14460:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"14460:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":901,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14478:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"14478:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":898,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"14450:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3$__$returns$_t_bytes32_$","typeString":"function () returns (bytes32)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14450:45:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":904,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"14510:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"14510:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":883,"name":"LogFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"14154:7:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,address,address,address,uint256,uint256,uint256,uint256,bytes32,bytes32) constant"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14154:382:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"ExpressionStatement","src":"14154:382:0"},{"expression":{"argumentTypes":null,"id":908,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"14554:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":592,"id":909,"nodeType":"Return","src":"14547:29:0"}]},"id":911,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"fillOrder","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":911,"src":"10464:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},"typeName":{"baseType":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"10464:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":573,"length":{"argumentTypes":null,"hexValue":"35","id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10472:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"10464:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":578,"name":"orderValues","nodeType":"VariableDeclaration","scope":911,"src":"10502:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"},"typeName":{"baseType":{"id":575,"name":"uint","nodeType":"ElementaryTypeName","src":"10502:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"length":{"argumentTypes":null,"hexValue":"36","id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10507:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"10502:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":580,"name":"fillTakerTokenAmount","nodeType":"VariableDeclaration","scope":911,"src":"10534:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint","nodeType":"ElementaryTypeName","src":"10534:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":582,"name":"shouldThrowOnInsufficientBalanceOrAllowance","nodeType":"VariableDeclaration","scope":911,"src":"10572:48:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":581,"name":"bool","nodeType":"ElementaryTypeName","src":"10572:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":584,"name":"v","nodeType":"VariableDeclaration","scope":911,"src":"10633:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":583,"name":"uint8","nodeType":"ElementaryTypeName","src":"10633:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":586,"name":"r","nodeType":"VariableDeclaration","scope":911,"src":"10653:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10653:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":588,"name":"s","nodeType":"VariableDeclaration","scope":911,"src":"10675:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10675:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"10451:234:0"},"payable":false,"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"name":"filledTakerTokenAmount","nodeType":"VariableDeclaration","scope":911,"src":"10724:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint","nodeType":"ElementaryTypeName","src":"10724:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10723:29:0"},"scope":1808,"src":"10433:4151:0","visibility":"public"},{"body":{"id":1083,"nodeType":"Block","src":"15180:1820:0","statements":[{"assignments":[927],"declarations":[{"constant":false,"id":927,"name":"order","nodeType":"VariableDeclaration","scope":1084,"src":"15191:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"},"typeName":{"contractScope":null,"id":926,"name":"Order","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"15191:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_storage_ptr","typeString":"struct Exchange.Order storage pointer"}},"value":null,"visibility":"internal"}],"id":964,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":929,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"15240:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":931,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15255:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15240:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":932,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"15279:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":934,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15294:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15279:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":935,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"15323:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":937,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15338:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15323:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":938,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"15367:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":940,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15382:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15367:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":941,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"15413:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":943,"indexExpression":{"argumentTypes":null,"hexValue":"34","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15428:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15413:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":944,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"15463:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":946,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15475:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15463:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":947,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"15510:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":949,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15522:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15510:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":950,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"15549:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":952,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15561:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15549:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":953,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"15588:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":955,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15600:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15588:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":956,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"15643:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":958,"indexExpression":{"argumentTypes":null,"hexValue":"34","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15655:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15643:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":960,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"15696:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},{"argumentTypes":null,"id":961,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"15712:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}],"id":959,"name":"getOrderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"15683:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$6_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address[5] memory,uint256[6] memory) constant returns (bytes32)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15683:41:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":null,"id":928,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"15212:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Order_$554_storage_ptr_$","typeString":"type(struct Exchange.Order storage pointer)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["maker","taker","makerToken","takerToken","feeRecipient","makerTokenAmount","takerTokenAmount","makerFee","takerFee","expirationTimestampInSec","orderHash"],"nodeType":"FunctionCall","src":"15212:524:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory","typeString":"struct Exchange.Order memory"}},"nodeType":"VariableDeclarationStatement","src":"15191:545:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":966,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15757:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"15757:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"15772:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15772:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15757:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"15749:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15749:34:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"15749:34:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":974,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15802:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":543,"src":"15802:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15827:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15802:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":978,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15832:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"15832:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15857:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15832:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15802:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":983,"name":"cancelTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"15862:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15887:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15862:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15802:86:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"15794:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15794:95:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"15794:95:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":989,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"15906:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15906:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":991,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"15925:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"expirationTimestampInSec","nodeType":"MemberAccess","referencedDeclaration":551,"src":"15925:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15906:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1006,"nodeType":"IfStatement","src":"15902:159:0","trueBody":{"id":1005,"nodeType":"Block","src":"15957:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":996,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"15987:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Errors_$465_$","typeString":"type(enum Exchange.Errors)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ORDER_EXPIRED","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15987:20:0","typeDescriptions":{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15981:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15981:27:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":999,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16010:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"16010:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":994,"name":"LogError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"15972:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_uint8_$_t_bytes32_$returns$__$","typeString":"function (uint8,bytes32) constant"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15972:54:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"15972:54:0"},{"expression":{"argumentTypes":null,"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16048:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":925,"id":1004,"nodeType":"Return","src":"16041:8:0"}]}},{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"name":"remainingTakerTokenAmount","nodeType":"VariableDeclaration","scope":1084,"src":"16073:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint","nodeType":"ElementaryTypeName","src":"16073:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1017,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1010,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16114:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"16114:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1013,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16169:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"16169:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1012,"name":"getUnavailableTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"16138:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) constant returns (uint256)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16138:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1009,"name":"safeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"16106:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16106:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16073:113:0"},{"assignments":[1019],"declarations":[{"constant":false,"id":1019,"name":"cancelledTakerTokenAmount","nodeType":"VariableDeclaration","scope":1084,"src":"16197:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint","nodeType":"ElementaryTypeName","src":"16197:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1024,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1021,"name":"cancelTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"16237:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1022,"name":"remainingTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"16261:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1020,"name":"min256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"16230:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16230:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16197:90:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1025,"name":"cancelledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"16302:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16331:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16302:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1040,"nodeType":"IfStatement","src":"16298:158:0","trueBody":{"id":1039,"nodeType":"Block","src":"16334:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1030,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"16364:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Errors_$465_$","typeString":"type(enum Exchange.Errors)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ORDER_FULLY_FILLED_OR_CANCELLED","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16364:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16358:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":"uint8"},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16358:45:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1033,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16405:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"16405:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1028,"name":"LogError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"16349:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_uint8_$_t_bytes32_$returns$__$","typeString":"function (uint8,bytes32) constant"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16349:72:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"16349:72:0"},{"expression":{"argumentTypes":null,"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16443:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":925,"id":1038,"nodeType":"Return","src":"16436:8:0"}]}},{"expression":{"argumentTypes":null,"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1041,"name":"cancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"16468:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1044,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1042,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16478:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"16478:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16468:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1046,"name":"cancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"16505:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1049,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1047,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16515:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"16515:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16505:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1050,"name":"cancelledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"16533:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1045,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"16497:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16497:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16468:91:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1053,"nodeType":"ExpressionStatement","src":"16468:91:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1055,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16596:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"16596:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1057,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16622:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeRecipient","nodeType":"MemberAccess","referencedDeclaration":541,"src":"16622:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1059,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16655:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"16655:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1061,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16686:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"16686:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1064,"name":"cancelledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"16734:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1065,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16761:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"16761:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1067,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16785:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":543,"src":"16785:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1063,"name":"getPartialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"16717:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) constant returns (uint256)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16717:91:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1070,"name":"cancelledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"16823:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1072,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16873:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"16873:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1074,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16891:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"16891:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"16863:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3$__$returns$_t_bytes32_$","typeString":"function () returns (bytes32)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16863:45:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1077,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"16923:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"orderHash","nodeType":"MemberAccess","referencedDeclaration":553,"src":"16923:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1054,"name":"LogCancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"16572:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_constant$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,address,address,uint256,uint256,bytes32,bytes32) constant"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16572:377:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1080,"nodeType":"ExpressionStatement","src":"16572:377:0"},{"expression":{"argumentTypes":null,"id":1081,"name":"cancelledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"16967:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":925,"id":1082,"nodeType":"Return","src":"16960:32:0"}]},"id":1084,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"cancelOrder","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":1084,"src":"15040:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},"typeName":{"baseType":{"id":912,"name":"address","nodeType":"ElementaryTypeName","src":"15040:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":914,"length":{"argumentTypes":null,"hexValue":"35","id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15048:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"15040:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":919,"name":"orderValues","nodeType":"VariableDeclaration","scope":1084,"src":"15076:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"},"typeName":{"baseType":{"id":916,"name":"uint","nodeType":"ElementaryTypeName","src":"15076:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":918,"length":{"argumentTypes":null,"hexValue":"36","id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15081:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"15076:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":921,"name":"cancelTakerTokenAmount","nodeType":"VariableDeclaration","scope":1084,"src":"15106:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint","nodeType":"ElementaryTypeName","src":"15106:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15029:105:0"},"payable":false,"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"name":"","nodeType":"VariableDeclaration","scope":1084,"src":"15169:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint","nodeType":"ElementaryTypeName","src":"15169:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15168:6:0"},"scope":1808,"src":"15009:1991:0","visibility":"public"},{"body":{"id":1117,"nodeType":"Block","src":"17841:230:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1105,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"17884:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},{"argumentTypes":null,"id":1106,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"17913:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},{"argumentTypes":null,"id":1107,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"17939:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"66616c7365","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17974:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"id":1109,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"17994:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"id":1110,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"18010:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1111,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"18026:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1104,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"17860:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$6_memory_ptr_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[5] memory,uint256[6] memory,uint256,bool,uint8,bytes32,bytes32) returns (uint256)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17860:178:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1113,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"18042:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17860:202:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"17852:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17852:211:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"17852:211:0"}]},"id":1118,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"fillOrKillOrder","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":1118,"src":"17669:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},"typeName":{"baseType":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"17669:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1087,"length":{"argumentTypes":null,"hexValue":"35","id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17677:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"17669:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1092,"name":"orderValues","nodeType":"VariableDeclaration","scope":1118,"src":"17705:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"},"typeName":{"baseType":{"id":1089,"name":"uint","nodeType":"ElementaryTypeName","src":"17705:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"length":{"argumentTypes":null,"hexValue":"36","id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17710:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"17705:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1094,"name":"fillTakerTokenAmount","nodeType":"VariableDeclaration","scope":1118,"src":"17735:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint","nodeType":"ElementaryTypeName","src":"17735:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1096,"name":"v","nodeType":"VariableDeclaration","scope":1118,"src":"17771:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1095,"name":"uint8","nodeType":"ElementaryTypeName","src":"17771:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1098,"name":"r","nodeType":"VariableDeclaration","scope":1118,"src":"17789:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17789:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1100,"name":"s","nodeType":"VariableDeclaration","scope":1118,"src":"17809:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17809:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"17658:161:0"},"payable":false,"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"17841:0:0"},"scope":1808,"src":"17634:437:0","visibility":"public"},{"body":{"id":1180,"nodeType":"Block","src":"18991:361:0","statements":[{"body":{"id":1178,"nodeType":"Block","src":"19051:294:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1157,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"19094:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1159,"indexExpression":{"argumentTypes":null,"id":1158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19109:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19094:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1160,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"19130:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"}},"id":1162,"indexExpression":{"argumentTypes":null,"id":1161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19142:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19130:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1163,"name":"fillTakerTokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"19163:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1165,"indexExpression":{"argumentTypes":null,"id":1164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19185:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19163:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1166,"name":"shouldThrowOnInsufficientBalanceOrAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"19206:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1167,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"19268:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"id":1169,"indexExpression":{"argumentTypes":null,"id":1168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19270:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19268:4:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1170,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"19291:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1172,"indexExpression":{"argumentTypes":null,"id":1171,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19293:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19291:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1173,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"19314:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1175,"indexExpression":{"argumentTypes":null,"id":1174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19316:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19314:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1156,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"19066:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$6_memory_ptr_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[5] memory,uint256[6] memory,uint256,bool,uint8,bytes32,bytes32) returns (uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19066:267:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1177,"nodeType":"ExpressionStatement","src":"19066:267:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19019:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1150,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"19023:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"19023:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19019:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1179,"initializationExpression":{"assignments":[1146],"declarations":[{"constant":false,"id":1146,"name":"i","nodeType":"VariableDeclaration","scope":1181,"src":"19007:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint","nodeType":"ElementaryTypeName","src":"19007:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1148,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19016:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19007:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19046:3:0","subExpression":{"argumentTypes":null,"id":1153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"19046:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1155,"nodeType":"ExpressionStatement","src":"19046:3:0"},"nodeType":"ForStatement","src":"19002:343:0"}]},"id":1181,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"batchFillOrders","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":1181,"src":"18747:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"18747:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1121,"length":{"argumentTypes":null,"hexValue":"35","id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18755:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"18747:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"id":1122,"length":null,"nodeType":"ArrayTypeName","src":"18747:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_storage_$dyn_storage_ptr","typeString":"address[5] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1128,"name":"orderValues","nodeType":"VariableDeclaration","scope":1181,"src":"18785:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1124,"name":"uint","nodeType":"ElementaryTypeName","src":"18785:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1126,"length":{"argumentTypes":null,"hexValue":"36","id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18790:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"18785:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"id":1127,"length":null,"nodeType":"ArrayTypeName","src":"18785:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_storage_$dyn_storage_ptr","typeString":"uint256[6] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1131,"name":"fillTakerTokenAmounts","nodeType":"VariableDeclaration","scope":1181,"src":"18817:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},"typeName":{"baseType":{"id":1129,"name":"uint","nodeType":"ElementaryTypeName","src":"18817:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1130,"length":null,"nodeType":"ArrayTypeName","src":"18817:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1133,"name":"shouldThrowOnInsufficientBalanceOrAllowance","nodeType":"VariableDeclaration","scope":1181,"src":"18856:48:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1132,"name":"bool","nodeType":"ElementaryTypeName","src":"18856:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1136,"name":"v","nodeType":"VariableDeclaration","scope":1181,"src":"18915:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"},"typeName":{"baseType":{"id":1134,"name":"uint8","nodeType":"ElementaryTypeName","src":"18915:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1135,"length":null,"nodeType":"ArrayTypeName","src":"18915:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1139,"name":"r","nodeType":"VariableDeclaration","scope":1181,"src":"18935:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},"typeName":{"baseType":{"id":1137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18935:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1138,"length":null,"nodeType":"ArrayTypeName","src":"18935:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1142,"name":"s","nodeType":"VariableDeclaration","scope":1181,"src":"18957:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},"typeName":{"baseType":{"id":1140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1141,"length":null,"nodeType":"ArrayTypeName","src":"18957:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"value":null,"visibility":"internal"}],"src":"18736:233:0"},"payable":false,"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"18991:0:0"},"scope":1808,"src":"18712:640:0","visibility":"public"},{"body":{"id":1240,"nodeType":"Block","src":"20118:305:0","statements":[{"body":{"id":1238,"nodeType":"Block","src":"20178:238:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1218,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"20227:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1220,"indexExpression":{"argumentTypes":null,"id":1219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20242:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20227:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1221,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"20263:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"}},"id":1223,"indexExpression":{"argumentTypes":null,"id":1222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20275:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20263:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1224,"name":"fillTakerTokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"20296:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1226,"indexExpression":{"argumentTypes":null,"id":1225,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20318:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20296:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1227,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"20339:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"id":1229,"indexExpression":{"argumentTypes":null,"id":1228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20341:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20339:4:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1230,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"20362:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1232,"indexExpression":{"argumentTypes":null,"id":1231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20364:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20362:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1233,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"20385:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1235,"indexExpression":{"argumentTypes":null,"id":1234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20387:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20385:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1217,"name":"fillOrKillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"20193:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$6_memory_ptr_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address[5] memory,uint256[6] memory,uint256,uint8,bytes32,bytes32)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20193:211:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"20193:211:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20146:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1211,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"20150:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"20150:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20146:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"initializationExpression":{"assignments":[1207],"declarations":[{"constant":false,"id":1207,"name":"i","nodeType":"VariableDeclaration","scope":1241,"src":"20134:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint","nodeType":"ElementaryTypeName","src":"20134:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1209,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20143:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20134:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20173:3:0","subExpression":{"argumentTypes":null,"id":1214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20173:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1216,"nodeType":"ExpressionStatement","src":"20173:3:0"},"nodeType":"ForStatement","src":"20129:287:0"}]},"id":1241,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"batchFillOrKillOrders","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":1241,"src":"19933:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"19933:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1184,"length":{"argumentTypes":null,"hexValue":"35","id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19941:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"19933:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"id":1185,"length":null,"nodeType":"ArrayTypeName","src":"19933:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_storage_$dyn_storage_ptr","typeString":"address[5] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1191,"name":"orderValues","nodeType":"VariableDeclaration","scope":1241,"src":"19971:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1187,"name":"uint","nodeType":"ElementaryTypeName","src":"19971:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1189,"length":{"argumentTypes":null,"hexValue":"36","id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19976:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"19971:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"id":1190,"length":null,"nodeType":"ArrayTypeName","src":"19971:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_storage_$dyn_storage_ptr","typeString":"uint256[6] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1194,"name":"fillTakerTokenAmounts","nodeType":"VariableDeclaration","scope":1241,"src":"20003:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},"typeName":{"baseType":{"id":1192,"name":"uint","nodeType":"ElementaryTypeName","src":"20003:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1193,"length":null,"nodeType":"ArrayTypeName","src":"20003:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1197,"name":"v","nodeType":"VariableDeclaration","scope":1241,"src":"20042:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"},"typeName":{"baseType":{"id":1195,"name":"uint8","nodeType":"ElementaryTypeName","src":"20042:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1196,"length":null,"nodeType":"ArrayTypeName","src":"20042:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1200,"name":"r","nodeType":"VariableDeclaration","scope":1241,"src":"20062:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},"typeName":{"baseType":{"id":1198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20062:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1199,"length":null,"nodeType":"ArrayTypeName","src":"20062:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1203,"name":"s","nodeType":"VariableDeclaration","scope":1241,"src":"20084:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},"typeName":{"baseType":{"id":1201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20084:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1202,"length":null,"nodeType":"ArrayTypeName","src":"20084:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"value":null,"visibility":"internal"}],"src":"19922:174:0"},"payable":false,"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[],"src":"20118:0:0"},"scope":1808,"src":"19892:531:0","visibility":"public"},{"body":{"id":1335,"nodeType":"Block","src":"21470:716:0","statements":[{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"name":"filledTakerTokenAmount","nodeType":"VariableDeclaration","scope":1336,"src":"21481:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint","nodeType":"ElementaryTypeName","src":"21481:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1272,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21511:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21481:31:0"},{"body":{"id":1331,"nodeType":"Block","src":"21572:567:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1285,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"21595:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1287,"indexExpression":{"argumentTypes":null,"id":1286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"21610:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21595:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"}},"id":1289,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21613:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21595:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1290,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"21619:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1292,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21634:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21619:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"}},"id":1294,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21637:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21619:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21595:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"21587:7:0","typeDescriptions":{"typeIdentifier":"t_function_require$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21587:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1297,"nodeType":"ExpressionStatement","src":"21587:53:0"},{"expression":{"argumentTypes":null,"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1298,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"21701:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1300,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"21734:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1302,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"21786:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1304,"indexExpression":{"argumentTypes":null,"id":1303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"21801:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21786:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1305,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"21822:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"}},"id":1307,"indexExpression":{"argumentTypes":null,"id":1306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"21834:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21822:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1309,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"21863:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1310,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"21885:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"name":"safeSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"21855:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21855:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1312,"name":"shouldThrowOnInsufficientBalanceOrAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"21927:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1313,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"21989:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},"id":1315,"indexExpression":{"argumentTypes":null,"id":1314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"21991:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21989:4:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1316,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"22012:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1318,"indexExpression":{"argumentTypes":null,"id":1317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"22014:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22012:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1319,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"22035:1:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1321,"indexExpression":{"argumentTypes":null,"id":1320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"22037:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22035:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1301,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"21758:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$6_memory_ptr_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[5] memory,uint256[6] memory,uint256,bool,uint8,bytes32,bytes32) returns (uint256)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21758:296:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1299,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"21726:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:329:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21701:354:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"21701:354:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1326,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"22074:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1327,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"22100:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22074:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1330,"nodeType":"IfStatement","src":"22070:57:0","trueBody":{"id":1329,"nodeType":"Break","src":"22122:5:0"}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"21540:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1278,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"21544:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21544:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21540:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"initializationExpression":{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"name":"i","nodeType":"VariableDeclaration","scope":1336,"src":"21528:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint","nodeType":"ElementaryTypeName","src":"21528:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1276,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21537:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21528:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21567:3:0","subExpression":{"argumentTypes":null,"id":1281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"21567:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1283,"nodeType":"ExpressionStatement","src":"21567:3:0"},"nodeType":"ForStatement","src":"21523:616:0"},{"expression":{"argumentTypes":null,"id":1333,"name":"filledTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"22156:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1268,"id":1334,"nodeType":"Return","src":"22149:29:0"}]},"id":1336,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"fillOrdersUpTo","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":1336,"src":"21205:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"21205:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1244,"length":{"argumentTypes":null,"hexValue":"35","id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21213:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"21205:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"id":1245,"length":null,"nodeType":"ArrayTypeName","src":"21205:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_storage_$dyn_storage_ptr","typeString":"address[5] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1251,"name":"orderValues","nodeType":"VariableDeclaration","scope":1336,"src":"21243:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1247,"name":"uint","nodeType":"ElementaryTypeName","src":"21243:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"length":{"argumentTypes":null,"hexValue":"36","id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21248:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"21243:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"id":1250,"length":null,"nodeType":"ArrayTypeName","src":"21243:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_storage_$dyn_storage_ptr","typeString":"uint256[6] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1253,"name":"fillTakerTokenAmount","nodeType":"VariableDeclaration","scope":1336,"src":"21275:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint","nodeType":"ElementaryTypeName","src":"21275:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1255,"name":"shouldThrowOnInsufficientBalanceOrAllowance","nodeType":"VariableDeclaration","scope":1336,"src":"21311:48:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1254,"name":"bool","nodeType":"ElementaryTypeName","src":"21311:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":1258,"name":"v","nodeType":"VariableDeclaration","scope":1336,"src":"21370:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"},"typeName":{"baseType":{"id":1256,"name":"uint8","nodeType":"ElementaryTypeName","src":"21370:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1257,"length":null,"nodeType":"ArrayTypeName","src":"21370:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1261,"name":"r","nodeType":"VariableDeclaration","scope":1336,"src":"21390:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},"typeName":{"baseType":{"id":1259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1260,"length":null,"nodeType":"ArrayTypeName","src":"21390:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1264,"name":"s","nodeType":"VariableDeclaration","scope":1336,"src":"21412:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},"typeName":{"baseType":{"id":1262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21412:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1263,"length":null,"nodeType":"ArrayTypeName","src":"21412:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[] storage pointer"}},"value":null,"visibility":"internal"}],"src":"21194:230:0"},"payable":false,"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"name":"","nodeType":"VariableDeclaration","scope":1336,"src":"21459:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint","nodeType":"ElementaryTypeName","src":"21459:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"21458:6:0"},"scope":1808,"src":"21171:1015:0","visibility":"public"},{"body":{"id":1377,"nodeType":"Block","src":"22710:234:0","statements":[{"body":{"id":1375,"nodeType":"Block","src":"22770:167:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1364,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"22815:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1366,"indexExpression":{"argumentTypes":null,"id":1365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"22830:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22815:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1367,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"22851:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"}},"id":1369,"indexExpression":{"argumentTypes":null,"id":1368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"22863:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22851:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1370,"name":"cancelTakerTokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"22884:23:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1372,"indexExpression":{"argumentTypes":null,"id":1371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"22908:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22884:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1363,"name":"cancelOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"22785:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_uint256_$6_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address[5] memory,uint256[6] memory,uint256) returns (uint256)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22785:140:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"22785:140:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"22738:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1357,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"22742:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"22742:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22738:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1376,"initializationExpression":{"assignments":[1353],"declarations":[{"constant":false,"id":1353,"name":"i","nodeType":"VariableDeclaration","scope":1378,"src":"22726:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint","nodeType":"ElementaryTypeName","src":"22726:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1355,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22735:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22726:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22765:3:0","subExpression":{"argumentTypes":null,"id":1360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"22765:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1362,"nodeType":"ExpressionStatement","src":"22765:3:0"},"nodeType":"ForStatement","src":"22721:216:0"}]},"id":1378,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"batchCancelOrders","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":1378,"src":"22587:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_memory_$dyn_memory_ptr","typeString":"address[5] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"22587:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1339,"length":{"argumentTypes":null,"hexValue":"35","id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22595:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"22587:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"id":1340,"length":null,"nodeType":"ArrayTypeName","src":"22587:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$5_storage_$dyn_storage_ptr","typeString":"address[5] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1346,"name":"orderValues","nodeType":"VariableDeclaration","scope":1378,"src":"22625:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_memory_$dyn_memory_ptr","typeString":"uint256[6] memory[] memory"},"typeName":{"baseType":{"baseType":{"id":1342,"name":"uint","nodeType":"ElementaryTypeName","src":"22625:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"length":{"argumentTypes":null,"hexValue":"36","id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22630:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"22625:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"id":1345,"length":null,"nodeType":"ArrayTypeName","src":"22625:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$6_storage_$dyn_storage_ptr","typeString":"uint256[6] storage ref[] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1349,"name":"cancelTakerTokenAmounts","nodeType":"VariableDeclaration","scope":1378,"src":"22657:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},"typeName":{"baseType":{"id":1347,"name":"uint","nodeType":"ElementaryTypeName","src":"22657:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1348,"length":null,"nodeType":"ArrayTypeName","src":"22657:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"value":null,"visibility":"internal"}],"src":"22576:112:0"},"payable":false,"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[],"src":"22710:0:0"},"scope":1808,"src":"22550:394:0","visibility":"public"},{"body":{"id":1430,"nodeType":"Block","src":"23500:589:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1393,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"23550:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$1808","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1808","typeString":"contract Exchange"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23542:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23542:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1395,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"23570:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":1397,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23585:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23570:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1398,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"23611:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":1400,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23626:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23611:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1401,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"23652:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":1403,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23667:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23652:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1404,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"23698:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":1406,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23713:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23698:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1407,"name":"orderAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"23744:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"}},"id":1409,"indexExpression":{"argumentTypes":null,"hexValue":"34","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23759:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23744:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1410,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"23792:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1412,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23804:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1413,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"23844:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1415,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23856:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23844:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1416,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"23896:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1418,"indexExpression":{"argumentTypes":null,"hexValue":"32","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23908:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23896:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1419,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"23940:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1421,"indexExpression":{"argumentTypes":null,"hexValue":"33","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23952:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23940:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1422,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"23984:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1424,"indexExpression":{"argumentTypes":null,"hexValue":"34","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23996:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23984:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1425,"name":"orderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"24044:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1427,"indexExpression":{"argumentTypes":null,"hexValue":"35","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24056:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24044:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1391,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"23518:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3$__$returns$_t_bytes32_$","typeString":"function () returns (bytes32)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23518:563:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1390,"id":1429,"nodeType":"Return","src":"23511:570:0"}]},"id":1431,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getOrderHash","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"name":"orderAddresses","nodeType":"VariableDeclaration","scope":1431,"src":"23386:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},"typeName":{"baseType":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"23386:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1381,"length":{"argumentTypes":null,"hexValue":"35","id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23394:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"23386:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5] storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1386,"name":"orderValues","nodeType":"VariableDeclaration","scope":1431,"src":"23413:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"},"typeName":{"baseType":{"id":1383,"name":"uint","nodeType":"ElementaryTypeName","src":"23413:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1385,"length":{"argumentTypes":null,"hexValue":"36","id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23418:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"23413:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6] storage pointer"}},"value":null,"visibility":"internal"}],"src":"23385:48:0"},"payable":false,"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"name":"","nodeType":"VariableDeclaration","scope":1431,"src":"23486:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23486:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"23485:9:0"},"scope":1808,"src":"23364:725:0","visibility":"public"},{"body":{"id":1458,"nodeType":"Block","src":"24626:170:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1446,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"24644:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24688:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string \"\u0019Ethereum Signed Message:\n32\""},"value":"\u0019Ethereum Signed Message:\n32"},{"argumentTypes":null,"id":1450,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"24724:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string \"\u0019Ethereum Signed Message:\n32\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1448,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"24678:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3$__$returns$_t_bytes32_$","typeString":"function () returns (bytes32)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24678:51:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1452,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"24744:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"id":1453,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"24760:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1454,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"24776:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1447,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"24654:9:0","typeDescriptions":{"typeIdentifier":"t_function_ecrecover$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) returns (address)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24654:134:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24644:144:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1445,"id":1457,"nodeType":"Return","src":"24637:151:0"}]},"id":1459,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"isValidSignature","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"name":"signer","nodeType":"VariableDeclaration","scope":1459,"src":"24466:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"24466:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1435,"name":"hash","nodeType":"VariableDeclaration","scope":1459,"src":"24491:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24491:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1437,"name":"v","nodeType":"VariableDeclaration","scope":1459,"src":"24514:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1436,"name":"uint8","nodeType":"ElementaryTypeName","src":"24514:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1439,"name":"r","nodeType":"VariableDeclaration","scope":1459,"src":"24532:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24532:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1441,"name":"s","nodeType":"VariableDeclaration","scope":1459,"src":"24552:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24552:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"24455:107:0"},"payable":false,"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"name":"","nodeType":"VariableDeclaration","scope":1459,"src":"24615:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1443,"name":"bool","nodeType":"ElementaryTypeName","src":"24615:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"24614:6:0"},"scope":1808,"src":"24430:366:0","visibility":"public"},{"body":{"id":1501,"nodeType":"Block","src":"25177:336:0","statements":[{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"name":"remainder","nodeType":"VariableDeclaration","scope":1502,"src":"25188:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint","nodeType":"ElementaryTypeName","src":"25188:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1477,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1473,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"25212:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1474,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"25220:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1475,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"25231:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1472,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"25205:6:0","typeDescriptions":{"typeIdentifier":"t_function_mulmod$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) returns (uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25205:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25188:55:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1478,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"25258:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25271:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25258:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1483,"nodeType":"IfStatement","src":"25254:32:0","trueBody":{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25281:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1469,"id":1482,"nodeType":"Return","src":"25274:12:0"}},{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"name":"errPercentageTimes1000000","nodeType":"VariableDeclaration","scope":1502,"src":"25321:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint","nodeType":"ElementaryTypeName","src":"25321:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1496,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1488,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"25384:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"31303030303030","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25395:7:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"id":1487,"name":"safeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"25376:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25376:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1492,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"25426:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1493,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"25437:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1491,"name":"safeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"25418:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25418:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"name":"safeDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"25354:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25354:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25321:134:0"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1497,"name":"errPercentageTimes1000000","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"25473:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"31303030","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25501:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"25473:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1469,"id":1500,"nodeType":"Return","src":"25466:39:0"}]},"id":1502,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"isRoundingError","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"name":"numerator","nodeType":"VariableDeclaration","scope":1502,"src":"25067:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint","nodeType":"ElementaryTypeName","src":"25067:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1463,"name":"denominator","nodeType":"VariableDeclaration","scope":1502,"src":"25083:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint","nodeType":"ElementaryTypeName","src":"25083:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1465,"name":"target","nodeType":"VariableDeclaration","scope":1502,"src":"25101:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint","nodeType":"ElementaryTypeName","src":"25101:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25066:47:0"},"payable":false,"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"name":"","nodeType":"VariableDeclaration","scope":1502,"src":"25166:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1467,"name":"bool","nodeType":"ElementaryTypeName","src":"25166:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"25165:6:0"},"scope":1808,"src":"25042:471:0","visibility":"public"},{"body":{"id":1521,"nodeType":"Block","src":"25905:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1515,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"25939:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1516,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"25950:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"safeMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"25931:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25931:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1518,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"25959:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1513,"name":"safeDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"25923:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25923:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1512,"id":1520,"nodeType":"Return","src":"25916:55:0"}]},"id":1522,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getPartialAmount","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"name":"numerator","nodeType":"VariableDeclaration","scope":1522,"src":"25795:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint","nodeType":"ElementaryTypeName","src":"25795:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1506,"name":"denominator","nodeType":"VariableDeclaration","scope":1522,"src":"25811:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint","nodeType":"ElementaryTypeName","src":"25811:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1508,"name":"target","nodeType":"VariableDeclaration","scope":1522,"src":"25829:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint","nodeType":"ElementaryTypeName","src":"25829:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25794:47:0"},"payable":false,"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"name":"","nodeType":"VariableDeclaration","scope":1522,"src":"25894:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint","nodeType":"ElementaryTypeName","src":"25894:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25893:6:0"},"scope":1808,"src":"25769:210:0","visibility":"public"},{"body":{"id":1538,"nodeType":"Block","src":"26327:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1530,"name":"filled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"26353:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1532,"indexExpression":{"argumentTypes":null,"id":1531,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"26360:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26353:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1533,"name":"cancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"26372:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1535,"indexExpression":{"argumentTypes":null,"id":1534,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"26382:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26372:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1529,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"26345:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26345:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1528,"id":1537,"nodeType":"Return","src":"26338:55:0"}]},"id":1539,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getUnavailableTakerTokenAmount","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"name":"orderHash","nodeType":"VariableDeclaration","scope":1539,"src":"26245:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"26244:19:0"},"payable":false,"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"name":"","nodeType":"VariableDeclaration","scope":1539,"src":"26316:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint","nodeType":"ElementaryTypeName","src":"26316:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"26315:6:0"},"scope":1808,"src":"26205:196:0","visibility":"public"},{"body":{"id":1562,"nodeType":"Block","src":"26954:112:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1556,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"27035:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1557,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"27042:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"27048:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"27052:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1553,"name":"TOKEN_TRANSFER_PROXY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"26991:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1552,"name":"TokenTransferProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"26972:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TokenTransferProxy_$297_$","typeString":"type(contract TokenTransferProxy)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26972:49:0","typeDescriptions":{"typeIdentifier":"t_contract$_TokenTransferProxy_$297","typeString":"contract TokenTransferProxy"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":287,"src":"26972:62:0","typeDescriptions":{"typeIdentifier":"t_function_external$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) external returns (bool)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26972:86:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1551,"id":1561,"nodeType":"Return","src":"26965:93:0"}]},"id":1563,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"transferViaTokenTransferProxy","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"name":"token","nodeType":"VariableDeclaration","scope":1563,"src":"26827:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"26827:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1543,"name":"from","nodeType":"VariableDeclaration","scope":1563,"src":"26851:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"26851:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1545,"name":"to","nodeType":"VariableDeclaration","scope":1563,"src":"26874:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"26874:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1547,"name":"value","nodeType":"VariableDeclaration","scope":1563,"src":"26895:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint","nodeType":"ElementaryTypeName","src":"26895:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"26816:90:0"},"payable":false,"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"name":"","nodeType":"VariableDeclaration","scope":1563,"src":"26943:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1549,"name":"bool","nodeType":"ElementaryTypeName","src":"26943:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"26942:6:0"},"scope":1808,"src":"26778:288:0","visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"27582:2135:0","statements":[{"assignments":[1573],"declarations":[{"constant":false,"id":1573,"name":"taker","nodeType":"VariableDeclaration","scope":1766,"src":"27593:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"27593:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":1576,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1574,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"27609:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"27609:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"27593:26:0"},{"assignments":[1578],"declarations":[{"constant":false,"id":1578,"name":"fillMakerTokenAmount","nodeType":"VariableDeclaration","scope":1766,"src":"27630:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint","nodeType":"ElementaryTypeName","src":"27630:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1586,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1580,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"27675:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1581,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"27697:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"27697:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1583,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"27721:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":543,"src":"27721:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1579,"name":"getPartialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"27658:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) constant returns (uint256)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27658:86:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27630:114:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1587,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"27761:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeRecipient","nodeType":"MemberAccess","referencedDeclaration":541,"src":"27761:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27791:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27783:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27783:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27761:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1727,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29352:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"29352:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1729,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29370:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"29370:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1726,"name":"getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"29341:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29341:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1732,"name":"fillMakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"29385:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29341:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1735,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29442:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"29442:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1737,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29460:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"29460:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1734,"name":"getAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"29429:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29429:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1740,"name":"fillMakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"29475:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29429:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29341:154:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1744,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29530:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"29530:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1746,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"29548:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1743,"name":"getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"29519:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29519:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1748,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"29557:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29519:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29341:236:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1752,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29614:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"29614:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1754,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"29632:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1751,"name":"getAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"29601:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29601:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1756,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"29641:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29601:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29341:320:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1761,"nodeType":"IfStatement","src":"29334:351:0","trueBody":{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29680:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1571,"id":1760,"nodeType":"Return","src":"29673:12:0"}},"id":1762,"nodeType":"IfStatement","src":"27757:1928:0","trueBody":{"id":1725,"nodeType":"Block","src":"27795:1533:0","statements":[{"assignments":[1594],"declarations":[{"constant":false,"id":1594,"name":"isMakerTokenZRX","nodeType":"VariableDeclaration","scope":1766,"src":"27810:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1593,"name":"bool","nodeType":"ElementaryTypeName","src":"27810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":1599,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1595,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"27833:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"27833:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1597,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"27853:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27833:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"27810:61:0"},{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"name":"isTakerTokenZRX","nodeType":"VariableDeclaration","scope":1766,"src":"27886:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1600,"name":"bool","nodeType":"ElementaryTypeName","src":"27886:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":1606,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1602,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"27909:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"27909:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1604,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"27929:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27909:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"27886:61:0"},{"assignments":[1608],"declarations":[{"constant":false,"id":1608,"name":"paidMakerFee","nodeType":"VariableDeclaration","scope":1766,"src":"27962:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint","nodeType":"ElementaryTypeName","src":"27962:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1616,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1610,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"27999:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1611,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28021:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"28021:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1613,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28045:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerFee","nodeType":"MemberAccess","referencedDeclaration":547,"src":"28045:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1609,"name":"getPartialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"27982:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) constant returns (uint256)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27982:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27962:98:0"},{"assignments":[1618],"declarations":[{"constant":false,"id":1618,"name":"paidTakerFee","nodeType":"VariableDeclaration","scope":1766,"src":"28075:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint","nodeType":"ElementaryTypeName","src":"28075:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1626,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1620,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"28112:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1621,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28134:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerTokenAmount","nodeType":"MemberAccess","referencedDeclaration":545,"src":"28134:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1623,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28158:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerFee","nodeType":"MemberAccess","referencedDeclaration":549,"src":"28158:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1619,"name":"getPartialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"28095:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) constant returns (uint256)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28095:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28075:98:0"},{"assignments":[1628],"declarations":[{"constant":false,"id":1628,"name":"requiredMakerZRX","nodeType":"VariableDeclaration","scope":1766,"src":"28188:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint","nodeType":"ElementaryTypeName","src":"28188:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1636,"initialValue":{"argumentTypes":null,"condition":{"argumentTypes":null,"id":1629,"name":"isMakerTokenZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"28212:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":1634,"name":"paidMakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"28276:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"28212:76:0","trueExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1631,"name":"fillMakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"28238:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1632,"name":"paidMakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"28260:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1630,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"28230:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28230:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28188:100:0"},{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"name":"requiredTakerZRX","nodeType":"VariableDeclaration","scope":1766,"src":"28303:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint","nodeType":"ElementaryTypeName","src":"28303:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1646,"initialValue":{"argumentTypes":null,"condition":{"argumentTypes":null,"id":1639,"name":"isTakerTokenZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"28327:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":1644,"name":"paidTakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"28391:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"28327:76:0","trueExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1641,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"28353:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1642,"name":"paidTakerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"28375:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1640,"name":"safeAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"28345:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) constant returns (uint256)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28345:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28303:100:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1648,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"28438:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1649,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28458:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"28458:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1647,"name":"getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"28427:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1652,"name":"requiredMakerZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"28473:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28427:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1655,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"28523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1656,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28543:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"28543:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1654,"name":"getAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"28510:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28510:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1659,"name":"requiredMakerZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"28558:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28510:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28427:147:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1663,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"28606:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1664,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"28626:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1662,"name":"getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"28595:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28595:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1666,"name":"requiredTakerZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"28635:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28595:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28427:224:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1670,"name":"ZRX_TOKEN_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"28685:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1671,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"28705:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1669,"name":"getAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"28672:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28672:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1673,"name":"requiredTakerZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"28714:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28672:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28427:303:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1678,"nodeType":"IfStatement","src":"28420:338:0","trueBody":{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28753:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1571,"id":1677,"nodeType":"Return","src":"28746:12:0"}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"28779:16:0","subExpression":{"argumentTypes":null,"id":1679,"name":"isMakerTokenZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"28780:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1682,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28814:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"28814:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1684,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28832:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"28832:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1681,"name":"getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"28803:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28803:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1687,"name":"fillMakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"28847:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28803:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1690,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"makerToken","nodeType":"MemberAccess","referencedDeclaration":537,"src":"28962:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1692,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"28980:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":533,"src":"28980:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1689,"name":"getAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"28949:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28949:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1695,"name":"fillMakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"28995:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28949:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28803:212:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28799:217:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28779:237:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1702,"nodeType":"IfStatement","src":"28775:269:0","trueBody":{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29039:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1571,"id":1701,"nodeType":"Return","src":"29032:12:0"}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"29063:16:0","subExpression":{"argumentTypes":null,"id":1703,"name":"isTakerTokenZRX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"29064:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1706,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29098:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"29098:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1708,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"29116:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1705,"name":"getBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"29087:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29087:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1710,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"29125:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29087:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1713,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"29240:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"}},"id":1714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"takerToken","nodeType":"MemberAccess","referencedDeclaration":539,"src":"29240:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1715,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"29258:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1712,"name":"getAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"29227:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant returns (uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29227:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1717,"name":"fillTakerTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"29267:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29227:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29087:200:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29083:205:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29063:225:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1724,"nodeType":"IfStatement","src":"29059:257:0","trueBody":{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29311:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1571,"id":1723,"nodeType":"Return","src":"29304:12:0"}}]}},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29705:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1571,"id":1764,"nodeType":"Return","src":"29698:11:0"}]},"id":1766,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"isTransferable","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"name":"order","nodeType":"VariableDeclaration","scope":1766,"src":"27343:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"},"typeName":{"contractScope":null,"id":1564,"name":"Order","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"27343:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$554_storage_ptr","typeString":"struct Exchange.Order storage pointer"}},"value":null,"visibility":"internal"},{"constant":false,"id":1567,"name":"fillTakerTokenAmount","nodeType":"VariableDeclaration","scope":1766,"src":"27356:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint","nodeType":"ElementaryTypeName","src":"27356:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"27342:40:0"},"payable":false,"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"name":"","nodeType":"VariableDeclaration","scope":1766,"src":"27571:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1569,"name":"bool","nodeType":"ElementaryTypeName","src":"27571:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"27570:6:0"},"scope":1808,"src":"27319:2398:0","visibility":"internal"},{"body":{"id":1785,"nodeType":"Block","src":"30118:120:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1782,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"30189:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"arguments":[{"argumentTypes":null,"id":1780,"name":"EXTERNAL_QUERY_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"30163:24:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"30142:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1775,"name":"Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"30136:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Token_$116_$","typeString":"type(contract Token)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30136:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_Token_$116","typeString":"contract Token"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":57,"src":"30136:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_constant$_t_address_$returns$_t_uint256_$","typeString":"function (address) constant external returns (uint256)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":null,"src":"30136:26:0","typeDescriptions":{"typeIdentifier":"t_function_setgas$_t_uint256_$returns$_t_function_external_constant$_t_address_$returns$_t_uint256_$gas_$","typeString":"function (uint256) returns (function (address) constant external returns (uint256))"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30136:52:0","typeDescriptions":{"typeIdentifier":"t_function_external_constant$_t_address_$returns$_t_uint256_$gas","typeString":"function (address) constant external returns (uint256)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30136:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1774,"id":1784,"nodeType":"Return","src":"30129:66:0"}]},"id":1786,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getBalance","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"name":"token","nodeType":"VariableDeclaration","scope":1786,"src":"29913:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"29913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1770,"name":"owner","nodeType":"VariableDeclaration","scope":1786,"src":"29928:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"29928:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"29912:30:0"},"payable":false,"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"name":"","nodeType":"VariableDeclaration","scope":1786,"src":"30107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint","nodeType":"ElementaryTypeName","src":"30107:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"30106:6:0"},"scope":1808,"src":"29893:345:0","visibility":"internal"},{"body":{"id":1806,"nodeType":"Block","src":"30707:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1802,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"30778:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1803,"name":"TOKEN_TRANSFER_PROXY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"30785:29:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"arguments":[{"argumentTypes":null,"id":1800,"name":"EXTERNAL_QUERY_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"30752:24:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1796,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"30731:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1795,"name":"Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"30725:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Token_$116_$","typeString":"type(contract Token)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30725:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_Token_$116","typeString":"contract Token"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":99,"src":"30725:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_constant$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) constant external returns (uint256)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":null,"src":"30725:26:0","typeDescriptions":{"typeIdentifier":"t_function_setgas$_t_uint256_$returns$_t_function_external_constant$_t_address_$_t_address_$returns$_t_uint256_$gas_$","typeString":"function (uint256) returns (function (address,address) constant external returns (uint256))"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30725:52:0","typeDescriptions":{"typeIdentifier":"t_function_external_constant$_t_address_$_t_address_$returns$_t_uint256_$gas","typeString":"function (address,address) constant external returns (uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30725:90:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1794,"id":1805,"nodeType":"Return","src":"30718:97:0"}]},"id":1807,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"getAllowance","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"name":"token","nodeType":"VariableDeclaration","scope":1807,"src":"30502:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"30502:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1790,"name":"owner","nodeType":"VariableDeclaration","scope":1807,"src":"30517:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"30517:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"30501:30:0"},"payable":false,"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"name":"","nodeType":"VariableDeclaration","scope":1807,"src":"30696:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint","nodeType":"ElementaryTypeName","src":"30696:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"30695:6:0"},"scope":1808,"src":"30480:378:0","visibility":"internal"}],"scope":1809,"src":"7511:23350:0"}],"src":"598:30263:0"},"id":0,"legacyAST":{"attributes":{"absolutePath":"contract","exportedSymbols":{"Exchange":[1808],"Ownable":[43],"SafeMath":[458],"Token":[116],"TokenTransferProxy":[297]}},"children":[{"attributes":{"literals":["solidity","0.4",".14"]},"id":1,"name":"PragmaDirective","src":"598:23:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[43],"name":"Ownable","scope":1809},"children":[{"attributes":{"constant":false,"name":"owner","scope":43,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":2,"name":"ElementaryTypeName","src":"825:7:0"}],"id":3,"name":"VariableDeclaration","src":"825:20:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"Ownable","payable":false,"scope":43,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":4,"name":"ParameterList","src":"870:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":5,"name":"ParameterList","src":"873:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":6,"name":"Identifier","src":"884:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":7,"name":"Identifier","src":"892:3:0"}],"id":8,"name":"MemberAccess","src":"892:10:0"}],"id":9,"name":"Assignment","src":"884:18:0"}],"id":10,"name":"ExpressionStatement","src":"884:18:0"}],"id":11,"name":"Block","src":"873:37:0"}],"id":12,"name":"FunctionDefinition","src":"854:56:0"},{"attributes":{"name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":13,"name":"ParameterList","src":"936:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":14,"name":"Identifier","src":"950:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":15,"name":"Identifier","src":"958:3:0"}],"id":16,"name":"MemberAccess","src":"958:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":17,"name":"Identifier","src":"972:5:0"}],"id":18,"name":"BinaryOperation","src":"958:19:0"}],"id":19,"name":"FunctionCall","src":"950:28:0"}],"id":20,"name":"ExpressionStatement","src":"950:28:0"},{"id":21,"name":"PlaceholderStatement","src":"989:1:0"}],"id":22,"name":"Block","src":"939:59:0"}],"id":23,"name":"ModifierDefinition","src":"918:80:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":43,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"newOwner","scope":42,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":24,"name":"ElementaryTypeName","src":"1033:7:0"}],"id":25,"name":"VariableDeclaration","src":"1033:16:0"}],"id":26,"name":"ParameterList","src":"1032:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":29,"name":"ParameterList","src":"1061:0:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"modifier ()","value":"onlyOwner"},"id":27,"name":"Identifier","src":"1051:9:0"}],"id":28,"name":"ModifierInvocation","src":"1051:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"address","value":"newOwner"},"id":30,"name":"Identifier","src":"1076:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":31,"name":"ElementaryTypeNameExpression","src":"1088:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":32,"name":"Literal","src":"1096:1:0"}],"id":33,"name":"FunctionCall","src":"1088:10:0"}],"id":34,"name":"BinaryOperation","src":"1076:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":35,"name":"Identifier","src":"1115:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"address","value":"newOwner"},"id":36,"name":"Identifier","src":"1123:8:0"}],"id":37,"name":"Assignment","src":"1115:16:0"}],"id":38,"name":"ExpressionStatement","src":"1115:16:0"}],"id":39,"name":"Block","src":"1100:43:0"}],"id":40,"name":"IfStatement","src":"1072:71:0"}],"id":41,"name":"Block","src":"1061:89:0"}],"id":42,"name":"FunctionDefinition","src":"1006:144:0"}],"id":43,"name":"ContractDefinition","src":"801:352:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[116],"name":"Token","scope":1809},"children":[{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":116,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":44,"name":"ParameterList","src":"1241:2:0"},{"children":[{"attributes":{"constant":false,"name":"supply","scope":49,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":45,"name":"ElementaryTypeName","src":"1262:4:0"}],"id":46,"name":"VariableDeclaration","src":"1262:11:0"}],"id":47,"name":"ParameterList","src":"1261:13:0"},{"attributes":{"statements":[null]},"children":[],"id":48,"name":"Block","src":"1275:2:0"}],"id":49,"name":"FunctionDefinition","src":"1221:56:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":116,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":57,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":50,"name":"ElementaryTypeName","src":"1409:7:0"}],"id":51,"name":"VariableDeclaration","src":"1409:14:0"}],"id":52,"name":"ParameterList","src":"1408:16:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":57,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":53,"name":"ElementaryTypeName","src":"1443:4:0"}],"id":54,"name":"VariableDeclaration","src":"1443:12:0"}],"id":55,"name":"ParameterList","src":"1442:14:0"},{"attributes":{"statements":[null]},"children":[],"id":56,"name":"Block","src":"1457:2:0"}],"id":57,"name":"FunctionDefinition","src":"1390:69:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":116,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":67,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":58,"name":"ElementaryTypeName","src":"1719:7:0"}],"id":59,"name":"VariableDeclaration","src":"1719:11:0"},{"attributes":{"constant":false,"name":"_value","scope":67,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":60,"name":"ElementaryTypeName","src":"1732:4:0"}],"id":61,"name":"VariableDeclaration","src":"1732:11:0"}],"id":62,"name":"ParameterList","src":"1718:26:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":67,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":63,"name":"ElementaryTypeName","src":"1754:4:0"}],"id":64,"name":"VariableDeclaration","src":"1754:12:0"}],"id":65,"name":"ParameterList","src":"1753:14:0"},{"attributes":{"statements":[null]},"children":[],"id":66,"name":"Block","src":"1768:2:0"}],"id":67,"name":"FunctionDefinition","src":"1701:69:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":116,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":79,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":68,"name":"ElementaryTypeName","src":"2120:7:0"}],"id":69,"name":"VariableDeclaration","src":"2120:13:0"},{"attributes":{"constant":false,"name":"_to","scope":79,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":70,"name":"ElementaryTypeName","src":"2135:7:0"}],"id":71,"name":"VariableDeclaration","src":"2135:11:0"},{"attributes":{"constant":false,"name":"_value","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":72,"name":"ElementaryTypeName","src":"2148:4:0"}],"id":73,"name":"VariableDeclaration","src":"2148:11:0"}],"id":74,"name":"ParameterList","src":"2119:41:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":79,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":75,"name":"ElementaryTypeName","src":"2170:4:0"}],"id":76,"name":"VariableDeclaration","src":"2170:12:0"}],"id":77,"name":"ParameterList","src":"2169:14:0"},{"attributes":{"statements":[null]},"children":[],"id":78,"name":"Block","src":"2184:2:0"}],"id":79,"name":"FunctionDefinition","src":"2098:88:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":116,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":89,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":80,"name":"ElementaryTypeName","src":"2492:7:0"}],"id":81,"name":"VariableDeclaration","src":"2492:16:0"},{"attributes":{"constant":false,"name":"_value","scope":89,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":82,"name":"ElementaryTypeName","src":"2510:4:0"}],"id":83,"name":"VariableDeclaration","src":"2510:11:0"}],"id":84,"name":"ParameterList","src":"2491:31:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":89,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":85,"name":"ElementaryTypeName","src":"2532:4:0"}],"id":86,"name":"VariableDeclaration","src":"2532:12:0"}],"id":87,"name":"ParameterList","src":"2531:14:0"},{"attributes":{"statements":[null]},"children":[],"id":88,"name":"Block","src":"2546:2:0"}],"id":89,"name":"FunctionDefinition","src":"2475:73:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":116,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":99,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":90,"name":"ElementaryTypeName","src":"2780:7:0"}],"id":91,"name":"VariableDeclaration","src":"2780:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":99,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":92,"name":"ElementaryTypeName","src":"2796:7:0"}],"id":93,"name":"VariableDeclaration","src":"2796:16:0"}],"id":94,"name":"ParameterList","src":"2779:34:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":99,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":95,"name":"ElementaryTypeName","src":"2832:4:0"}],"id":96,"name":"VariableDeclaration","src":"2832:14:0"}],"id":97,"name":"ParameterList","src":"2831:16:0"},{"attributes":{"statements":[null]},"children":[],"id":98,"name":"Block","src":"2848:2:0"}],"id":99,"name":"FunctionDefinition","src":"2761:89:0"},{"attributes":{"anonymous":false,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_from","scope":107,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":100,"name":"ElementaryTypeName","src":"2873:7:0"}],"id":101,"name":"VariableDeclaration","src":"2873:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"_to","scope":107,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":102,"name":"ElementaryTypeName","src":"2896:7:0"}],"id":103,"name":"VariableDeclaration","src":"2896:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"_value","scope":107,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":104,"name":"ElementaryTypeName","src":"2917:4:0"}],"id":105,"name":"VariableDeclaration","src":"2917:11:0"}],"id":106,"name":"ParameterList","src":"2872:57:0"}],"id":107,"name":"EventDefinition","src":"2858:72:0"},{"attributes":{"anonymous":false,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_owner","scope":115,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":108,"name":"ElementaryTypeName","src":"2951:7:0"}],"id":109,"name":"VariableDeclaration","src":"2951:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"_spender","scope":115,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":110,"name":"ElementaryTypeName","src":"2975:7:0"}],"id":111,"name":"VariableDeclaration","src":"2975:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_value","scope":115,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":112,"name":"ElementaryTypeName","src":"3001:4:0"}],"id":113,"name":"VariableDeclaration","src":"3001:11:0"}],"id":114,"name":"ParameterList","src":"2950:63:0"}],"id":115,"name":"EventDefinition","src":"2936:78:0"}],"id":116,"name":"ContractDefinition","src":"1157:1860:0"},{"attributes":{"contractDependencies":[43],"contractKind":"contract","documentation":"@title TokenTransferProxy - Transfers tokens on behalf of contracts that have been approved via decentralized governance.\r\n @author Amir Bandeali - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"5c3d31352e1c6c240c2e3336393f28723f3331\">[email protected]</a>,>, Will Warren - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"35425c595975054d65475a5f5056411b565a58\">[email protected]</a>,>\r","fullyImplemented":true,"linearizedBaseContracts":[297,43],"name":"TokenTransferProxy","scope":1809},"children":[{"attributes":{"arguments":[null]},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":43,"type":"contract Ownable"},"id":117,"name":"UserDefinedTypeName","src":"3503:7:0"}],"id":118,"name":"InheritanceSpecifier","src":"3503:7:0"},{"attributes":{"name":"onlyAuthorized","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":119,"name":"ParameterList","src":"3625:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":120,"name":"Identifier","src":"3636:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":158,"type":"mapping(address => bool)","value":"authorized"},"id":121,"name":"Identifier","src":"3644:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":122,"name":"Identifier","src":"3655:3:0"}],"id":123,"name":"MemberAccess","src":"3655:10:0"}],"id":124,"name":"IndexAccess","src":"3644:22:0"}],"id":125,"name":"FunctionCall","src":"3636:31:0"}],"id":126,"name":"ExpressionStatement","src":"3636:31:0"},{"id":127,"name":"PlaceholderStatement","src":"3678:1:0"}],"id":128,"name":"Block","src":"3625:62:0"}],"id":129,"name":"ModifierDefinition","src":"3601:86:0"},{"attributes":{"name":"targetAuthorized","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"target","scope":141,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":130,"name":"ElementaryTypeName","src":"3721:7:0"}],"id":131,"name":"VariableDeclaration","src":"3721:14:0"}],"id":132,"name":"ParameterList","src":"3720:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":133,"name":"Identifier","src":"3748:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":158,"type":"mapping(address => bool)","value":"authorized"},"id":134,"name":"Identifier","src":"3756:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":131,"type":"address","value":"target"},"id":135,"name":"Identifier","src":"3767:6:0"}],"id":136,"name":"IndexAccess","src":"3756:18:0"}],"id":137,"name":"FunctionCall","src":"3748:27:0"}],"id":138,"name":"ExpressionStatement","src":"3748:27:0"},{"id":139,"name":"PlaceholderStatement","src":"3786:1:0"}],"id":140,"name":"Block","src":"3737:58:0"}],"id":141,"name":"ModifierDefinition","src":"3695:100:0"},{"attributes":{"name":"targetNotAuthorized","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"target","scope":154,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":142,"name":"ElementaryTypeName","src":"3832:7:0"}],"id":143,"name":"VariableDeclaration","src":"3832:14:0"}],"id":144,"name":"ParameterList","src":"3831:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":145,"name":"Identifier","src":"3859:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":158,"type":"mapping(address => bool)","value":"authorized"},"id":146,"name":"Identifier","src":"3868:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":143,"type":"address","value":"target"},"id":147,"name":"Identifier","src":"3879:6:0"}],"id":148,"name":"IndexAccess","src":"3868:18:0"}],"id":149,"name":"UnaryOperation","src":"3867:19:0"}],"id":150,"name":"FunctionCall","src":"3859:28:0"}],"id":151,"name":"ExpressionStatement","src":"3859:28:0"},{"id":152,"name":"PlaceholderStatement","src":"3898:1:0"}],"id":153,"name":"Block","src":"3848:59:0"}],"id":154,"name":"ModifierDefinition","src":"3803:104:0"},{"attributes":{"constant":false,"name":"authorized","scope":297,"stateVariable":true,"storageLocation":"default","type":"mapping(address => bool)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => bool)"},"children":[{"attributes":{"name":"address","type":"address"},"id":155,"name":"ElementaryTypeName","src":"3924:7:0"},{"attributes":{"name":"bool","type":"bool"},"id":156,"name":"ElementaryTypeName","src":"3935:4:0"}],"id":157,"name":"Mapping","src":"3915:25:0"}],"id":158,"name":"VariableDeclaration","src":"3915:43:0"},{"attributes":{"constant":false,"name":"authorities","scope":297,"stateVariable":true,"storageLocation":"default","type":"address[] storage ref","value":null,"visibility":"public"},"children":[{"attributes":{"length":null,"type":"address[] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":159,"name":"ElementaryTypeName","src":"3965:7:0"}],"id":160,"name":"ArrayTypeName","src":"3965:9:0"}],"id":161,"name":"VariableDeclaration","src":"3965:28:0"},{"attributes":{"anonymous":false,"name":"LogAuthorizedAddressAdded"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"target","scope":167,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":162,"name":"ElementaryTypeName","src":"4034:7:0"}],"id":163,"name":"VariableDeclaration","src":"4034:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"caller","scope":167,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":164,"name":"ElementaryTypeName","src":"4058:7:0"}],"id":165,"name":"VariableDeclaration","src":"4058:22:0"}],"id":166,"name":"ParameterList","src":"4033:48:0"}],"id":167,"name":"EventDefinition","src":"4002:80:0"},{"attributes":{"anonymous":false,"name":"LogAuthorizedAddressRemoved"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"target","scope":173,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":168,"name":"ElementaryTypeName","src":"4122:7:0"}],"id":169,"name":"VariableDeclaration","src":"4122:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"caller","scope":173,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":170,"name":"ElementaryTypeName","src":"4146:7:0"}],"id":171,"name":"VariableDeclaration","src":"4146:22:0"}],"id":172,"name":"ParameterList","src":"4121:48:0"}],"id":173,"name":"EventDefinition","src":"4088:82:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"addAuthorizedAddress","payable":false,"scope":297,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"target","scope":202,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":174,"name":"ElementaryTypeName","src":"4334:7:0"}],"id":175,"name":"VariableDeclaration","src":"4334:14:0"}],"id":176,"name":"ParameterList","src":"4333:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":182,"name":"ParameterList","src":"4427:0:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"modifier ()","value":"onlyOwner"},"id":177,"name":"Identifier","src":"4375:9:0"}],"id":178,"name":"ModifierInvocation","src":"4375:9:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"modifier (address)","value":"targetNotAuthorized"},"id":179,"name":"Identifier","src":"4394:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"target"},"id":180,"name":"Identifier","src":"4414:6:0"}],"id":181,"name":"ModifierInvocation","src":"4394:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":158,"type":"mapping(address => bool)","value":"authorized"},"id":183,"name":"Identifier","src":"4438:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"target"},"id":184,"name":"Identifier","src":"4449:6:0"}],"id":185,"name":"IndexAccess","src":"4438:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":186,"name":"Literal","src":"4459:4:0"}],"id":187,"name":"Assignment","src":"4438:25:0"}],"id":188,"name":"ExpressionStatement","src":"4438:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (address) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":189,"name":"Identifier","src":"4474:11:0"}],"id":191,"name":"MemberAccess","src":"4474:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"target"},"id":192,"name":"Identifier","src":"4491:6:0"}],"id":193,"name":"FunctionCall","src":"4474:24:0"}],"id":194,"name":"ExpressionStatement","src":"4474:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":167,"type":"function (address,address) constant","value":"LogAuthorizedAddressAdded"},"id":195,"name":"Identifier","src":"4509:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"target"},"id":196,"name":"Identifier","src":"4535:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":197,"name":"Identifier","src":"4543:3:0"}],"id":198,"name":"MemberAccess","src":"4543:10:0"}],"id":199,"name":"FunctionCall","src":"4509:45:0"}],"id":200,"name":"ExpressionStatement","src":"4509:45:0"}],"id":201,"name":"Block","src":"4427:135:0"}],"id":202,"name":"FunctionDefinition","src":"4304:258:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"removeAuthorizedAddress","payable":false,"scope":297,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"target","scope":262,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":203,"name":"ElementaryTypeName","src":"4713:7:0"}],"id":204,"name":"VariableDeclaration","src":"4713:14:0"}],"id":205,"name":"ParameterList","src":"4712:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":211,"name":"ParameterList","src":"4803:0:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"modifier ()","value":"onlyOwner"},"id":206,"name":"Identifier","src":"4754:9:0"}],"id":207,"name":"ModifierInvocation","src":"4754:9:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":141,"type":"modifier (address)","value":"targetAuthorized"},"id":208,"name":"Identifier","src":"4773:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":204,"type":"address","value":"target"},"id":209,"name":"Identifier","src":"4790:6:0"}],"id":210,"name":"ModifierInvocation","src":"4773:24:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":158,"type":"mapping(address => bool)","value":"authorized"},"id":212,"name":"Identifier","src":"4821:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":204,"type":"address","value":"target"},"id":213,"name":"Identifier","src":"4832:6:0"}],"id":214,"name":"IndexAccess","src":"4821:18:0"}],"id":215,"name":"UnaryOperation","src":"4814:25:0"}],"id":216,"name":"ExpressionStatement","src":"4814:25:0"},{"children":[{"attributes":{"assignments":[218]},"children":[{"attributes":{"constant":false,"name":"i","scope":262,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":217,"name":"ElementaryTypeName","src":"4855:4:0"}],"id":218,"name":"VariableDeclaration","src":"4855:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":219,"name":"Literal","src":"4864:1:0"}],"id":220,"name":"VariableDeclarationStatement","src":"4855:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"i"},"id":221,"name":"Identifier","src":"4867:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":222,"name":"Identifier","src":"4871:11:0"}],"id":223,"name":"MemberAccess","src":"4871:18:0"}],"id":224,"name":"BinaryOperation","src":"4867:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"i"},"id":225,"name":"Identifier","src":"4891:1:0"}],"id":226,"name":"UnaryOperation","src":"4891:3:0"}],"id":227,"name":"ExpressionStatement","src":"4891:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":228,"name":"Identifier","src":"4915:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"i"},"id":229,"name":"Identifier","src":"4927:1:0"}],"id":230,"name":"IndexAccess","src":"4915:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":204,"type":"address","value":"target"},"id":231,"name":"Identifier","src":"4933:6:0"}],"id":232,"name":"BinaryOperation","src":"4915:24:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":233,"name":"Identifier","src":"4960:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"i"},"id":234,"name":"Identifier","src":"4972:1:0"}],"id":235,"name":"IndexAccess","src":"4960:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":236,"name":"Identifier","src":"4977:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":237,"name":"Identifier","src":"4989:11:0"}],"id":238,"name":"MemberAccess","src":"4989:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":239,"name":"Literal","src":"5010:1:0"}],"id":240,"name":"BinaryOperation","src":"4989:22:0"}],"id":241,"name":"IndexAccess","src":"4977:35:0"}],"id":242,"name":"Assignment","src":"4960:52:0"}],"id":243,"name":"ExpressionStatement","src":"4960:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":244,"name":"Identifier","src":"5031:11:0"}],"id":246,"name":"MemberAccess","src":"5031:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":247,"name":"Literal","src":"5053:1:0"}],"id":248,"name":"Assignment","src":"5031:23:0"}],"id":249,"name":"ExpressionStatement","src":"5031:23:0"},{"id":250,"name":"Break","src":"5073:5:0"}],"id":251,"name":"Block","src":"4941:153:0"}],"id":252,"name":"IfStatement","src":"4911:183:0"}],"id":253,"name":"Block","src":"4896:209:0"}],"id":254,"name":"ForStatement","src":"4850:255:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":173,"type":"function (address,address) constant","value":"LogAuthorizedAddressRemoved"},"id":255,"name":"Identifier","src":"5115:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":204,"type":"address","value":"target"},"id":256,"name":"Identifier","src":"5143:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":257,"name":"Identifier","src":"5151:3:0"}],"id":258,"name":"MemberAccess","src":"5151:10:0"}],"id":259,"name":"FunctionCall","src":"5115:47:0"}],"id":260,"name":"ExpressionStatement","src":"5115:47:0"}],"id":261,"name":"Block","src":"4803:367:0"}],"id":262,"name":"FunctionDefinition","src":"4680:490:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"name":"transferFrom","payable":false,"scope":297,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":287,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":263,"name":"ElementaryTypeName","src":"5523:7:0"}],"id":264,"name":"VariableDeclaration","src":"5523:13:0"},{"attributes":{"constant":false,"name":"from","scope":287,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":265,"name":"ElementaryTypeName","src":"5547:7:0"}],"id":266,"name":"VariableDeclaration","src":"5547:12:0"},{"attributes":{"constant":false,"name":"to","scope":287,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":267,"name":"ElementaryTypeName","src":"5570:7:0"}],"id":268,"name":"VariableDeclaration","src":"5570:10:0"},{"attributes":{"constant":false,"name":"value","scope":287,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":269,"name":"ElementaryTypeName","src":"5591:4:0"}],"id":270,"name":"VariableDeclaration","src":"5591:10:0"}],"id":271,"name":"ParameterList","src":"5512:90:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":287,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":274,"name":"ElementaryTypeName","src":"5661:4:0"}],"id":275,"name":"VariableDeclaration","src":"5661:4:0"}],"id":276,"name":"ParameterList","src":"5660:6:0"},{"attributes":{"arguments":[null]},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":129,"type":"modifier ()","value":"onlyAuthorized"},"id":272,"name":"Identifier","src":"5628:14:0"}],"id":273,"name":"ModifierInvocation","src":"5628:14:0"},{"children":[{"attributes":{"functionReturnParameters":276},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":79,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Token","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"type(contract Token)","value":"Token"},"id":277,"name":"Identifier","src":"5690:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"address","value":"token"},"id":278,"name":"Identifier","src":"5696:5:0"}],"id":279,"name":"FunctionCall","src":"5690:12:0"}],"id":280,"name":"MemberAccess","src":"5690:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":266,"type":"address","value":"from"},"id":281,"name":"Identifier","src":"5716:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"address","value":"to"},"id":282,"name":"Identifier","src":"5722:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"uint256","value":"value"},"id":283,"name":"Identifier","src":"5726:5:0"}],"id":284,"name":"FunctionCall","src":"5690:42:0"}],"id":285,"name":"Return","src":"5683:49:0"}],"id":286,"name":"Block","src":"5672:68:0"}],"id":287,"name":"FunctionDefinition","src":"5491:249:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getAuthorizedAddresses","payable":false,"scope":297,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":288,"name":"ParameterList","src":"5925:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":296,"stateVariable":false,"storageLocation":"default","type":"address[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":289,"name":"ElementaryTypeName","src":"5980:7:0"}],"id":290,"name":"ArrayTypeName","src":"5980:9:0"}],"id":291,"name":"VariableDeclaration","src":"5980:9:0"}],"id":292,"name":"ParameterList","src":"5979:11:0"},{"children":[{"attributes":{"functionReturnParameters":292},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address[] storage ref","value":"authorities"},"id":293,"name":"Identifier","src":"6014:11:0"}],"id":294,"name":"Return","src":"6007:18:0"}],"id":295,"name":"Block","src":"5996:37:0"}],"id":296,"name":"FunctionDefinition","src":"5894:139:0"}],"id":297,"name":"ContractDefinition","src":"3472:2564:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[458],"name":"SafeMath","scope":1809},"children":[{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeMul","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":327,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":298,"name":"ElementaryTypeName","src":"6082:4:0"}],"id":299,"name":"VariableDeclaration","src":"6082:6:0"},{"attributes":{"constant":false,"name":"b","scope":327,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":300,"name":"ElementaryTypeName","src":"6090:4:0"}],"id":301,"name":"VariableDeclaration","src":"6090:6:0"}],"id":302,"name":"ParameterList","src":"6081:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":327,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":303,"name":"ElementaryTypeName","src":"6125:7:0"}],"id":304,"name":"VariableDeclaration","src":"6125:7:0"}],"id":305,"name":"ParameterList","src":"6124:9:0"},{"children":[{"attributes":{"assignments":[307]},"children":[{"attributes":{"constant":false,"name":"c","scope":327,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":306,"name":"ElementaryTypeName","src":"6145:4:0"}],"id":307,"name":"VariableDeclaration","src":"6145:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":299,"type":"uint256","value":"a"},"id":308,"name":"Identifier","src":"6154:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":301,"type":"uint256","value":"b"},"id":309,"name":"Identifier","src":"6158:1:0"}],"id":310,"name":"BinaryOperation","src":"6154:5:0"}],"id":311,"name":"VariableDeclarationStatement","src":"6145:14:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1828,"type":"function (bool)","value":"assert"},"id":312,"name":"Identifier","src":"6170:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":299,"type":"uint256","value":"a"},"id":313,"name":"Identifier","src":"6177:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":314,"name":"Literal","src":"6182:1:0"}],"id":315,"name":"BinaryOperation","src":"6177:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":307,"type":"uint256","value":"c"},"id":316,"name":"Identifier","src":"6187:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":299,"type":"uint256","value":"a"},"id":317,"name":"Identifier","src":"6191:1:0"}],"id":318,"name":"BinaryOperation","src":"6187:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":301,"type":"uint256","value":"b"},"id":319,"name":"Identifier","src":"6196:1:0"}],"id":320,"name":"BinaryOperation","src":"6187:10:0"}],"id":321,"name":"BinaryOperation","src":"6177:20:0"}],"id":322,"name":"FunctionCall","src":"6170:28:0"}],"id":323,"name":"ExpressionStatement","src":"6170:28:0"},{"attributes":{"functionReturnParameters":305},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":307,"type":"uint256","value":"c"},"id":324,"name":"Identifier","src":"6216:1:0"}],"id":325,"name":"Return","src":"6209:8:0"}],"id":326,"name":"Block","src":"6134:91:0"}],"id":327,"name":"FunctionDefinition","src":"6065:160:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeDiv","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":328,"name":"ElementaryTypeName","src":"6250:4:0"}],"id":329,"name":"VariableDeclaration","src":"6250:6:0"},{"attributes":{"constant":false,"name":"b","scope":345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":330,"name":"ElementaryTypeName","src":"6258:4:0"}],"id":331,"name":"VariableDeclaration","src":"6258:6:0"}],"id":332,"name":"ParameterList","src":"6249:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":333,"name":"ElementaryTypeName","src":"6293:7:0"}],"id":334,"name":"VariableDeclaration","src":"6293:7:0"}],"id":335,"name":"ParameterList","src":"6292:9:0"},{"children":[{"attributes":{"assignments":[337]},"children":[{"attributes":{"constant":false,"name":"c","scope":345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":336,"name":"ElementaryTypeName","src":"6313:4:0"}],"id":337,"name":"VariableDeclaration","src":"6313:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":329,"type":"uint256","value":"a"},"id":338,"name":"Identifier","src":"6322:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":331,"type":"uint256","value":"b"},"id":339,"name":"Identifier","src":"6326:1:0"}],"id":340,"name":"BinaryOperation","src":"6322:5:0"}],"id":341,"name":"VariableDeclarationStatement","src":"6313:14:0"},{"attributes":{"functionReturnParameters":335},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":337,"type":"uint256","value":"c"},"id":342,"name":"Identifier","src":"6345:1:0"}],"id":343,"name":"Return","src":"6338:8:0"}],"id":344,"name":"Block","src":"6302:52:0"}],"id":345,"name":"FunctionDefinition","src":"6233:121:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeSub","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":365,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":346,"name":"ElementaryTypeName","src":"6379:4:0"}],"id":347,"name":"VariableDeclaration","src":"6379:6:0"},{"attributes":{"constant":false,"name":"b","scope":365,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":348,"name":"ElementaryTypeName","src":"6387:4:0"}],"id":349,"name":"VariableDeclaration","src":"6387:6:0"}],"id":350,"name":"ParameterList","src":"6378:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":365,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":351,"name":"ElementaryTypeName","src":"6422:7:0"}],"id":352,"name":"VariableDeclaration","src":"6422:7:0"}],"id":353,"name":"ParameterList","src":"6421:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1828,"type":"function (bool)","value":"assert"},"id":354,"name":"Identifier","src":"6442:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"uint256","value":"b"},"id":355,"name":"Identifier","src":"6449:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":347,"type":"uint256","value":"a"},"id":356,"name":"Identifier","src":"6454:1:0"}],"id":357,"name":"BinaryOperation","src":"6449:6:0"}],"id":358,"name":"FunctionCall","src":"6442:14:0"}],"id":359,"name":"ExpressionStatement","src":"6442:14:0"},{"attributes":{"functionReturnParameters":353},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":347,"type":"uint256","value":"a"},"id":360,"name":"Identifier","src":"6474:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"uint256","value":"b"},"id":361,"name":"Identifier","src":"6478:1:0"}],"id":362,"name":"BinaryOperation","src":"6474:5:0"}],"id":363,"name":"Return","src":"6467:12:0"}],"id":364,"name":"Block","src":"6431:56:0"}],"id":365,"name":"FunctionDefinition","src":"6362:125:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeAdd","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":389,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":366,"name":"ElementaryTypeName","src":"6512:4:0"}],"id":367,"name":"VariableDeclaration","src":"6512:6:0"},{"attributes":{"constant":false,"name":"b","scope":389,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":368,"name":"ElementaryTypeName","src":"6520:4:0"}],"id":369,"name":"VariableDeclaration","src":"6520:6:0"}],"id":370,"name":"ParameterList","src":"6511:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":389,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":371,"name":"ElementaryTypeName","src":"6555:7:0"}],"id":372,"name":"VariableDeclaration","src":"6555:7:0"}],"id":373,"name":"ParameterList","src":"6554:9:0"},{"children":[{"attributes":{"assignments":[375]},"children":[{"attributes":{"constant":false,"name":"c","scope":389,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":374,"name":"ElementaryTypeName","src":"6575:4:0"}],"id":375,"name":"VariableDeclaration","src":"6575:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":367,"type":"uint256","value":"a"},"id":376,"name":"Identifier","src":"6584:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":369,"type":"uint256","value":"b"},"id":377,"name":"Identifier","src":"6588:1:0"}],"id":378,"name":"BinaryOperation","src":"6584:5:0"}],"id":379,"name":"VariableDeclarationStatement","src":"6575:14:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1828,"type":"function (bool)","value":"assert"},"id":380,"name":"Identifier","src":"6600:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":375,"type":"uint256","value":"c"},"id":381,"name":"Identifier","src":"6607:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":367,"type":"uint256","value":"a"},"id":382,"name":"Identifier","src":"6612:1:0"}],"id":383,"name":"BinaryOperation","src":"6607:6:0"}],"id":384,"name":"FunctionCall","src":"6600:14:0"}],"id":385,"name":"ExpressionStatement","src":"6600:14:0"},{"attributes":{"functionReturnParameters":373},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":375,"type":"uint256","value":"c"},"id":386,"name":"Identifier","src":"6632:1:0"}],"id":387,"name":"Return","src":"6625:8:0"}],"id":388,"name":"Block","src":"6564:77:0"}],"id":389,"name":"FunctionDefinition","src":"6495:146:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"max64","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":406,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":390,"name":"ElementaryTypeName","src":"6664:6:0"}],"id":391,"name":"VariableDeclaration","src":"6664:8:0"},{"attributes":{"constant":false,"name":"b","scope":406,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":392,"name":"ElementaryTypeName","src":"6674:6:0"}],"id":393,"name":"VariableDeclaration","src":"6674:8:0"}],"id":394,"name":"ParameterList","src":"6663:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":406,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":395,"name":"ElementaryTypeName","src":"6711:6:0"}],"id":396,"name":"VariableDeclaration","src":"6711:6:0"}],"id":397,"name":"ParameterList","src":"6710:8:0"},{"children":[{"attributes":{"functionReturnParameters":397},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":391,"type":"uint64","value":"a"},"id":398,"name":"Identifier","src":"6737:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":393,"type":"uint64","value":"b"},"id":399,"name":"Identifier","src":"6742:1:0"}],"id":400,"name":"BinaryOperation","src":"6737:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":391,"type":"uint64","value":"a"},"id":401,"name":"Identifier","src":"6746:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":393,"type":"uint64","value":"b"},"id":402,"name":"Identifier","src":"6750:1:0"}],"id":403,"name":"Conditional","src":"6737:14:0"}],"id":404,"name":"Return","src":"6730:21:0"}],"id":405,"name":"Block","src":"6719:40:0"}],"id":406,"name":"FunctionDefinition","src":"6649:110:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"min64","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":423,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":407,"name":"ElementaryTypeName","src":"6782:6:0"}],"id":408,"name":"VariableDeclaration","src":"6782:8:0"},{"attributes":{"constant":false,"name":"b","scope":423,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":409,"name":"ElementaryTypeName","src":"6792:6:0"}],"id":410,"name":"VariableDeclaration","src":"6792:8:0"}],"id":411,"name":"ParameterList","src":"6781:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":423,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":412,"name":"ElementaryTypeName","src":"6829:6:0"}],"id":413,"name":"VariableDeclaration","src":"6829:6:0"}],"id":414,"name":"ParameterList","src":"6828:8:0"},{"children":[{"attributes":{"functionReturnParameters":414},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":408,"type":"uint64","value":"a"},"id":415,"name":"Identifier","src":"6855:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":410,"type":"uint64","value":"b"},"id":416,"name":"Identifier","src":"6859:1:0"}],"id":417,"name":"BinaryOperation","src":"6855:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":408,"type":"uint64","value":"a"},"id":418,"name":"Identifier","src":"6863:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":410,"type":"uint64","value":"b"},"id":419,"name":"Identifier","src":"6867:1:0"}],"id":420,"name":"Conditional","src":"6855:13:0"}],"id":421,"name":"Return","src":"6848:20:0"}],"id":422,"name":"Block","src":"6837:39:0"}],"id":423,"name":"FunctionDefinition","src":"6767:109:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"max256","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":440,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":424,"name":"ElementaryTypeName","src":"6900:7:0"}],"id":425,"name":"VariableDeclaration","src":"6900:9:0"},{"attributes":{"constant":false,"name":"b","scope":440,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":426,"name":"ElementaryTypeName","src":"6911:7:0"}],"id":427,"name":"VariableDeclaration","src":"6911:9:0"}],"id":428,"name":"ParameterList","src":"6899:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":440,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":429,"name":"ElementaryTypeName","src":"6949:7:0"}],"id":430,"name":"VariableDeclaration","src":"6949:7:0"}],"id":431,"name":"ParameterList","src":"6948:9:0"},{"children":[{"attributes":{"functionReturnParameters":431},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":425,"type":"uint256","value":"a"},"id":432,"name":"Identifier","src":"6976:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":427,"type":"uint256","value":"b"},"id":433,"name":"Identifier","src":"6981:1:0"}],"id":434,"name":"BinaryOperation","src":"6976:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":425,"type":"uint256","value":"a"},"id":435,"name":"Identifier","src":"6985:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":427,"type":"uint256","value":"b"},"id":436,"name":"Identifier","src":"6989:1:0"}],"id":437,"name":"Conditional","src":"6976:14:0"}],"id":438,"name":"Return","src":"6969:21:0"}],"id":439,"name":"Block","src":"6958:40:0"}],"id":440,"name":"FunctionDefinition","src":"6884:114:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"min256","payable":false,"scope":458,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":457,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":441,"name":"ElementaryTypeName","src":"7022:7:0"}],"id":442,"name":"VariableDeclaration","src":"7022:9:0"},{"attributes":{"constant":false,"name":"b","scope":457,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":443,"name":"ElementaryTypeName","src":"7033:7:0"}],"id":444,"name":"VariableDeclaration","src":"7033:9:0"}],"id":445,"name":"ParameterList","src":"7021:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":457,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":446,"name":"ElementaryTypeName","src":"7071:7:0"}],"id":447,"name":"VariableDeclaration","src":"7071:7:0"}],"id":448,"name":"ParameterList","src":"7070:9:0"},{"children":[{"attributes":{"functionReturnParameters":448},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":442,"type":"uint256","value":"a"},"id":449,"name":"Identifier","src":"7098:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":444,"type":"uint256","value":"b"},"id":450,"name":"Identifier","src":"7102:1:0"}],"id":451,"name":"BinaryOperation","src":"7098:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":442,"type":"uint256","value":"a"},"id":452,"name":"Identifier","src":"7106:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":444,"type":"uint256","value":"b"},"id":453,"name":"Identifier","src":"7110:1:0"}],"id":454,"name":"Conditional","src":"7098:13:0"}],"id":455,"name":"Return","src":"7091:20:0"}],"id":456,"name":"Block","src":"7080:39:0"}],"id":457,"name":"FunctionDefinition","src":"7006:113:0"}],"id":458,"name":"ContractDefinition","src":"6040:1082:0"},{"attributes":{"contractDependencies":[458],"contractKind":"contract","documentation":"@title Exchange - Facilitates exchange of ERC20 tokens.\r\n @author Amir Bandeali - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"76171b1f0436460e2604191c1315025815191b\">[email protected]</a>,>, Will Warren - <,<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"b6c1dfdadaf686cee6c4d9dcd3d5c298d5d9db\">[email protected]</a>,>\r","fullyImplemented":true,"linearizedBaseContracts":[1808,458],"name":"Exchange","scope":1809},"children":[{"attributes":{"arguments":[null]},"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":458,"type":"contract SafeMath"},"id":459,"name":"UserDefinedTypeName","src":"7532:8:0"}],"id":460,"name":"InheritanceSpecifier","src":"7532:8:0"},{"attributes":{"canonicalName":"Exchange.Errors","name":"Errors"},"children":[{"attributes":{"name":"ORDER_EXPIRED"},"id":461,"name":"EnumValue","src":"7593:13:0"},{"attributes":{"name":"ORDER_FULLY_FILLED_OR_CANCELLED"},"id":462,"name":"EnumValue","src":"7665:31:0"},{"attributes":{"name":"ROUNDING_ERROR_TOO_LARGE"},"id":463,"name":"EnumValue","src":"7760:24:0"},{"attributes":{"name":"INSUFFICIENT_BALANCE_OR_ALLOWANCE"},"id":464,"name":"EnumValue","src":"7831:33:0"}],"id":465,"name":"EnumDefinition","src":"7570:357:0"},{"attributes":{"constant":true,"name":"VERSION","scope":1808,"stateVariable":true,"storageLocation":"default","type":"string memory","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string storage pointer"},"id":466,"name":"ElementaryTypeName","src":"7935:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"312e302e30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"1.0.0\"","value":"1.0.0"},"id":467,"name":"Literal","src":"7968:7:0"}],"id":468,"name":"VariableDeclaration","src":"7935:40:0"},{"attributes":{"constant":true,"name":"EXTERNAL_QUERY_GAS_LIMIT","scope":1808,"stateVariable":true,"storageLocation":"default","type":"uint16","visibility":"public"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":469,"name":"ElementaryTypeName","src":"7982:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34393939","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4999","value":"4999"},"id":470,"name":"Literal","src":"8032:4:0"}],"id":471,"name":"VariableDeclaration","src":"7982:54:0"},{"attributes":{"constant":false,"name":"ZRX_TOKEN_CONTRACT","scope":1808,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":472,"name":"ElementaryTypeName","src":"8094:7:0"}],"id":473,"name":"VariableDeclaration","src":"8094:33:0"},{"attributes":{"constant":false,"name":"TOKEN_TRANSFER_PROXY_CONTRACT","scope":1808,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":474,"name":"ElementaryTypeName","src":"8134:7:0"}],"id":475,"name":"VariableDeclaration","src":"8134:44:0"},{"attributes":{"constant":false,"name":"filled","scope":1808,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => uint256)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":476,"name":"ElementaryTypeName","src":"8278:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":477,"name":"ElementaryTypeName","src":"8289:4:0"}],"id":478,"name":"Mapping","src":"8269:25:0"}],"id":479,"name":"VariableDeclaration","src":"8269:39:0"},{"attributes":{"constant":false,"name":"cancelled","scope":1808,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => uint256)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":480,"name":"ElementaryTypeName","src":"8324:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":481,"name":"ElementaryTypeName","src":"8335:4:0"}],"id":482,"name":"Mapping","src":"8315:25:0"}],"id":483,"name":"VariableDeclaration","src":"8315:42:0"},{"attributes":{"anonymous":false,"name":"LogFill"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"maker","scope":507,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":484,"name":"ElementaryTypeName","src":"8390:7:0"}],"id":485,"name":"VariableDeclaration","src":"8390:21:0"},{"attributes":{"constant":false,"indexed":false,"name":"taker","scope":507,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":486,"name":"ElementaryTypeName","src":"8422:7:0"}],"id":487,"name":"VariableDeclaration","src":"8422:13:0"},{"attributes":{"constant":false,"indexed":true,"name":"feeRecipient","scope":507,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":488,"name":"ElementaryTypeName","src":"8446:7:0"}],"id":489,"name":"VariableDeclaration","src":"8446:28:0"},{"attributes":{"constant":false,"indexed":false,"name":"makerToken","scope":507,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":490,"name":"ElementaryTypeName","src":"8485:7:0"}],"id":491,"name":"VariableDeclaration","src":"8485:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"takerToken","scope":507,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":492,"name":"ElementaryTypeName","src":"8514:7:0"}],"id":493,"name":"VariableDeclaration","src":"8514:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"filledMakerTokenAmount","scope":507,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":494,"name":"ElementaryTypeName","src":"8543:4:0"}],"id":495,"name":"VariableDeclaration","src":"8543:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"filledTakerTokenAmount","scope":507,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":496,"name":"ElementaryTypeName","src":"8581:4:0"}],"id":497,"name":"VariableDeclaration","src":"8581:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"paidMakerFee","scope":507,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":498,"name":"ElementaryTypeName","src":"8619:4:0"}],"id":499,"name":"VariableDeclaration","src":"8619:17:0"},{"attributes":{"constant":false,"indexed":false,"name":"paidTakerFee","scope":507,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":500,"name":"ElementaryTypeName","src":"8647:4:0"}],"id":501,"name":"VariableDeclaration","src":"8647:17:0"},{"attributes":{"constant":false,"indexed":true,"name":"tokens","scope":507,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":502,"name":"ElementaryTypeName","src":"8675:7:0"}],"id":503,"name":"VariableDeclaration","src":"8675:22:0"},{"attributes":{"constant":false,"indexed":false,"name":"orderHash","scope":507,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":504,"name":"ElementaryTypeName","src":"8781:7:0"}],"id":505,"name":"VariableDeclaration","src":"8781:17:0"}],"id":506,"name":"ParameterList","src":"8379:426:0"}],"id":507,"name":"EventDefinition","src":"8366:440:0"},{"attributes":{"anonymous":false,"name":"LogCancel"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"maker","scope":525,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":508,"name":"ElementaryTypeName","src":"8840:7:0"}],"id":509,"name":"VariableDeclaration","src":"8840:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"feeRecipient","scope":525,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":510,"name":"ElementaryTypeName","src":"8872:7:0"}],"id":511,"name":"VariableDeclaration","src":"8872:28:0"},{"attributes":{"constant":false,"indexed":false,"name":"makerToken","scope":525,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":512,"name":"ElementaryTypeName","src":"8911:7:0"}],"id":513,"name":"VariableDeclaration","src":"8911:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"takerToken","scope":525,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":514,"name":"ElementaryTypeName","src":"8940:7:0"}],"id":515,"name":"VariableDeclaration","src":"8940:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"cancelledMakerTokenAmount","scope":525,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":516,"name":"ElementaryTypeName","src":"8969:4:0"}],"id":517,"name":"VariableDeclaration","src":"8969:30:0"},{"attributes":{"constant":false,"indexed":false,"name":"cancelledTakerTokenAmount","scope":525,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":518,"name":"ElementaryTypeName","src":"9010:4:0"}],"id":519,"name":"VariableDeclaration","src":"9010:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"tokens","scope":525,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":520,"name":"ElementaryTypeName","src":"9051:7:0"}],"id":521,"name":"VariableDeclaration","src":"9051:22:0"},{"attributes":{"constant":false,"indexed":false,"name":"orderHash","scope":525,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":522,"name":"ElementaryTypeName","src":"9084:7:0"}],"id":523,"name":"VariableDeclaration","src":"9084:17:0"}],"id":524,"name":"ParameterList","src":"8829:279:0"}],"id":525,"name":"EventDefinition","src":"8814:295:0"},{"attributes":{"anonymous":false,"name":"LogError"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"errorId","scope":531,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":526,"name":"ElementaryTypeName","src":"9132:5:0"}],"id":527,"name":"VariableDeclaration","src":"9132:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"orderHash","scope":531,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":528,"name":"ElementaryTypeName","src":"9155:7:0"}],"id":529,"name":"VariableDeclaration","src":"9155:25:0"}],"id":530,"name":"ParameterList","src":"9131:50:0"}],"id":531,"name":"EventDefinition","src":"9117:65:0"},{"attributes":{"canonicalName":"Exchange.Order","name":"Order","scope":1808,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"maker","scope":554,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":532,"name":"ElementaryTypeName","src":"9214:7:0"}],"id":533,"name":"VariableDeclaration","src":"9214:13:0"},{"attributes":{"constant":false,"name":"taker","scope":554,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":534,"name":"ElementaryTypeName","src":"9238:7:0"}],"id":535,"name":"VariableDeclaration","src":"9238:13:0"},{"attributes":{"constant":false,"name":"makerToken","scope":554,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":536,"name":"ElementaryTypeName","src":"9262:7:0"}],"id":537,"name":"VariableDeclaration","src":"9262:18:0"},{"attributes":{"constant":false,"name":"takerToken","scope":554,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":538,"name":"ElementaryTypeName","src":"9291:7:0"}],"id":539,"name":"VariableDeclaration","src":"9291:18:0"},{"attributes":{"constant":false,"name":"feeRecipient","scope":554,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":540,"name":"ElementaryTypeName","src":"9320:7:0"}],"id":541,"name":"VariableDeclaration","src":"9320:20:0"},{"attributes":{"constant":false,"name":"makerTokenAmount","scope":554,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":542,"name":"ElementaryTypeName","src":"9351:4:0"}],"id":543,"name":"VariableDeclaration","src":"9351:21:0"},{"attributes":{"constant":false,"name":"takerTokenAmount","scope":554,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":544,"name":"ElementaryTypeName","src":"9383:4:0"}],"id":545,"name":"VariableDeclaration","src":"9383:21:0"},{"attributes":{"constant":false,"name":"makerFee","scope":554,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":546,"name":"ElementaryTypeName","src":"9415:4:0"}],"id":547,"name":"VariableDeclaration","src":"9415:13:0"},{"attributes":{"constant":false,"name":"takerFee","scope":554,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":548,"name":"ElementaryTypeName","src":"9439:4:0"}],"id":549,"name":"VariableDeclaration","src":"9439:13:0"},{"attributes":{"constant":false,"name":"expirationTimestampInSec","scope":554,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":550,"name":"ElementaryTypeName","src":"9463:4:0"}],"id":551,"name":"VariableDeclaration","src":"9463:29:0"},{"attributes":{"constant":false,"name":"orderHash","scope":554,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":552,"name":"ElementaryTypeName","src":"9503:7:0"}],"id":553,"name":"VariableDeclaration","src":"9503:17:0"}],"id":554,"name":"StructDefinition","src":"9190:338:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"Exchange","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_zrxToken","scope":570,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":555,"name":"ElementaryTypeName","src":"9554:7:0"}],"id":556,"name":"VariableDeclaration","src":"9554:17:0"},{"attributes":{"constant":false,"name":"_tokenTransferProxy","scope":570,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":557,"name":"ElementaryTypeName","src":"9573:7:0"}],"id":558,"name":"VariableDeclaration","src":"9573:27:0"}],"id":559,"name":"ParameterList","src":"9553:48:0"},{"attributes":{"parameters":[null]},"children":[],"id":560,"name":"ParameterList","src":"9602:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":561,"name":"Identifier","src":"9613:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":556,"type":"address","value":"_zrxToken"},"id":562,"name":"Identifier","src":"9634:9:0"}],"id":563,"name":"Assignment","src":"9613:30:0"}],"id":564,"name":"ExpressionStatement","src":"9613:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"address","value":"TOKEN_TRANSFER_PROXY_CONTRACT"},"id":565,"name":"Identifier","src":"9654:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":558,"type":"address","value":"_tokenTransferProxy"},"id":566,"name":"Identifier","src":"9686:19:0"}],"id":567,"name":"Assignment","src":"9654:51:0"}],"id":568,"name":"ExpressionStatement","src":"9654:51:0"}],"id":569,"name":"Block","src":"9602:111:0"}],"id":570,"name":"FunctionDefinition","src":"9536:177:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"fillOrder","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":911,"stateVariable":false,"storageLocation":"default","type":"address[5] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":571,"name":"ElementaryTypeName","src":"10464:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":572,"name":"Literal","src":"10472:1:0"}],"id":573,"name":"ArrayTypeName","src":"10464:10:0"}],"id":574,"name":"VariableDeclaration","src":"10464:25:0"},{"attributes":{"constant":false,"name":"orderValues","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":575,"name":"ElementaryTypeName","src":"10502:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":576,"name":"Literal","src":"10507:1:0"}],"id":577,"name":"ArrayTypeName","src":"10502:7:0"}],"id":578,"name":"VariableDeclaration","src":"10502:19:0"},{"attributes":{"constant":false,"name":"fillTakerTokenAmount","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":579,"name":"ElementaryTypeName","src":"10534:4:0"}],"id":580,"name":"VariableDeclaration","src":"10534:25:0"},{"attributes":{"constant":false,"name":"shouldThrowOnInsufficientBalanceOrAllowance","scope":911,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":581,"name":"ElementaryTypeName","src":"10572:4:0"}],"id":582,"name":"VariableDeclaration","src":"10572:48:0"},{"attributes":{"constant":false,"name":"v","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":583,"name":"ElementaryTypeName","src":"10633:5:0"}],"id":584,"name":"VariableDeclaration","src":"10633:7:0"},{"attributes":{"constant":false,"name":"r","scope":911,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":585,"name":"ElementaryTypeName","src":"10653:7:0"}],"id":586,"name":"VariableDeclaration","src":"10653:9:0"},{"attributes":{"constant":false,"name":"s","scope":911,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":587,"name":"ElementaryTypeName","src":"10675:7:0"}],"id":588,"name":"VariableDeclaration","src":"10675:9:0"}],"id":589,"name":"ParameterList","src":"10451:234:0"},{"children":[{"attributes":{"constant":false,"name":"filledTakerTokenAmount","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":590,"name":"ElementaryTypeName","src":"10724:4:0"}],"id":591,"name":"VariableDeclaration","src":"10724:27:0"}],"id":592,"name":"ParameterList","src":"10723:29:0"},{"children":[{"attributes":{"assignments":[594]},"children":[{"attributes":{"constant":false,"name":"order","scope":911,"stateVariable":false,"storageLocation":"memory","type":"struct Exchange.Order memory","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Order","referencedDeclaration":554,"type":"struct Exchange.Order storage pointer"},"id":593,"name":"UserDefinedTypeName","src":"10769:5:0"}],"id":594,"name":"VariableDeclaration","src":"10769:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["maker","taker","makerToken","takerToken","feeRecipient","makerTokenAmount","takerTokenAmount","makerFee","takerFee","expirationTimestampInSec","orderHash"],"type":"struct Exchange.Order memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":554,"type":"type(struct Exchange.Order storage pointer)","value":"Order"},"id":595,"name":"Identifier","src":"10790:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"address[5] memory","value":"orderAddresses"},"id":596,"name":"Identifier","src":"10818:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":597,"name":"Literal","src":"10833:1:0"}],"id":598,"name":"IndexAccess","src":"10818:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"address[5] memory","value":"orderAddresses"},"id":599,"name":"Identifier","src":"10857:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":600,"name":"Literal","src":"10872:1:0"}],"id":601,"name":"IndexAccess","src":"10857:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"address[5] memory","value":"orderAddresses"},"id":602,"name":"Identifier","src":"10901:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":603,"name":"Literal","src":"10916:1:0"}],"id":604,"name":"IndexAccess","src":"10901:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"address[5] memory","value":"orderAddresses"},"id":605,"name":"Identifier","src":"10945:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":606,"name":"Literal","src":"10960:1:0"}],"id":607,"name":"IndexAccess","src":"10945:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"address[5] memory","value":"orderAddresses"},"id":608,"name":"Identifier","src":"10991:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":609,"name":"Literal","src":"11006:1:0"}],"id":610,"name":"IndexAccess","src":"10991:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256[6] memory","value":"orderValues"},"id":611,"name":"Identifier","src":"11041:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":612,"name":"Literal","src":"11053:1:0"}],"id":613,"name":"IndexAccess","src":"11041:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256[6] memory","value":"orderValues"},"id":614,"name":"Identifier","src":"11088:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":615,"name":"Literal","src":"11100:1:0"}],"id":616,"name":"IndexAccess","src":"11088:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256[6] memory","value":"orderValues"},"id":617,"name":"Identifier","src":"11127:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":618,"name":"Literal","src":"11139:1:0"}],"id":619,"name":"IndexAccess","src":"11127:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256[6] memory","value":"orderValues"},"id":620,"name":"Identifier","src":"11166:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":621,"name":"Literal","src":"11178:1:0"}],"id":622,"name":"IndexAccess","src":"11166:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256[6] memory","value":"orderValues"},"id":623,"name":"Identifier","src":"11221:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":624,"name":"Literal","src":"11233:1:0"}],"id":625,"name":"IndexAccess","src":"11221:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":1431,"type":"function (address[5] memory,uint256[6] memory) constant returns (bytes32)","value":"getOrderHash"},"id":626,"name":"Identifier","src":"11261:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"address[5] memory","value":"orderAddresses"},"id":627,"name":"Identifier","src":"11274:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256[6] memory","value":"orderValues"},"id":628,"name":"Identifier","src":"11290:11:0"}],"id":629,"name":"FunctionCall","src":"11261:41:0"}],"id":630,"name":"FunctionCall","src":"10790:524:0"}],"id":631,"name":"VariableDeclarationStatement","src":"10769:545:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":632,"name":"Identifier","src":"11327:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"taker","referencedDeclaration":535,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":633,"name":"Identifier","src":"11335:5:0"}],"id":634,"name":"MemberAccess","src":"11335:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":635,"name":"ElementaryTypeNameExpression","src":"11350:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":636,"name":"Literal","src":"11358:1:0"}],"id":637,"name":"FunctionCall","src":"11350:10:0"}],"id":638,"name":"BinaryOperation","src":"11335:25:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"taker","referencedDeclaration":535,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":639,"name":"Identifier","src":"11364:5:0"}],"id":640,"name":"MemberAccess","src":"11364:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":641,"name":"Identifier","src":"11379:3:0"}],"id":642,"name":"MemberAccess","src":"11379:10:0"}],"id":643,"name":"BinaryOperation","src":"11364:25:0"}],"id":644,"name":"BinaryOperation","src":"11335:54:0"}],"id":645,"name":"FunctionCall","src":"11327:63:0"}],"id":646,"name":"ExpressionStatement","src":"11327:63:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":647,"name":"Identifier","src":"11401:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerTokenAmount","referencedDeclaration":543,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":648,"name":"Identifier","src":"11409:5:0"}],"id":649,"name":"MemberAccess","src":"11409:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":650,"name":"Literal","src":"11434:1:0"}],"id":651,"name":"BinaryOperation","src":"11409:26:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":652,"name":"Identifier","src":"11439:5:0"}],"id":653,"name":"MemberAccess","src":"11439:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":654,"name":"Literal","src":"11464:1:0"}],"id":655,"name":"BinaryOperation","src":"11439:26:0"}],"id":656,"name":"BinaryOperation","src":"11409:56:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"fillTakerTokenAmount"},"id":657,"name":"Identifier","src":"11469:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":658,"name":"Literal","src":"11492:1:0"}],"id":659,"name":"BinaryOperation","src":"11469:24:0"}],"id":660,"name":"BinaryOperation","src":"11409:84:0"}],"id":661,"name":"FunctionCall","src":"11401:93:0"}],"id":662,"name":"ExpressionStatement","src":"11401:93:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":663,"name":"Identifier","src":"11505:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":1459,"type":"function (address,bytes32,uint8,bytes32,bytes32) constant returns (bool)","value":"isValidSignature"},"id":664,"name":"Identifier","src":"11513:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":665,"name":"Identifier","src":"11544:5:0"}],"id":666,"name":"MemberAccess","src":"11544:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":667,"name":"Identifier","src":"11570:5:0"}],"id":668,"name":"MemberAccess","src":"11570:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":584,"type":"uint8","value":"v"},"id":669,"name":"Identifier","src":"11600:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"bytes32","value":"r"},"id":670,"name":"Identifier","src":"11616:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":588,"type":"bytes32","value":"s"},"id":671,"name":"Identifier","src":"11632:1:0"}],"id":672,"name":"FunctionCall","src":"11513:131:0"}],"id":673,"name":"FunctionCall","src":"11505:140:0"}],"id":674,"name":"ExpressionStatement","src":"11505:140:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"timestamp","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1810,"type":"block","value":"block"},"id":675,"name":"Identifier","src":"11662:5:0"}],"id":676,"name":"MemberAccess","src":"11662:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"expirationTimestampInSec","referencedDeclaration":551,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":677,"name":"Identifier","src":"11681:5:0"}],"id":678,"name":"MemberAccess","src":"11681:30:0"}],"id":679,"name":"BinaryOperation","src":"11662:49:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"function (uint8,bytes32) constant","value":"LogError"},"id":680,"name":"Identifier","src":"11728:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":681,"name":"ElementaryTypeNameExpression","src":"11737:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"ORDER_EXPIRED","referencedDeclaration":null,"type":"enum Exchange.Errors"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"type(enum Exchange.Errors)","value":"Errors"},"id":682,"name":"Identifier","src":"11743:6:0"}],"id":683,"name":"MemberAccess","src":"11743:20:0"}],"id":684,"name":"FunctionCall","src":"11737:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":685,"name":"Identifier","src":"11766:5:0"}],"id":686,"name":"MemberAccess","src":"11766:15:0"}],"id":687,"name":"FunctionCall","src":"11728:54:0"}],"id":688,"name":"ExpressionStatement","src":"11728:54:0"},{"attributes":{"functionReturnParameters":592},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":689,"name":"Literal","src":"11804:1:0"}],"id":690,"name":"Return","src":"11797:8:0"}],"id":691,"name":"Block","src":"11713:104:0"}],"id":692,"name":"IfStatement","src":"11658:159:0"},{"attributes":{"assignments":[694]},"children":[{"attributes":{"constant":false,"name":"remainingTakerTokenAmount","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":693,"name":"ElementaryTypeName","src":"11829:4:0"}],"id":694,"name":"VariableDeclaration","src":"11829:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":365,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeSub"},"id":695,"name":"Identifier","src":"11862:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":696,"name":"Identifier","src":"11870:5:0"}],"id":697,"name":"MemberAccess","src":"11870:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":1539,"type":"function (bytes32) constant returns (uint256)","value":"getUnavailableTakerTokenAmount"},"id":698,"name":"Identifier","src":"11894:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":699,"name":"Identifier","src":"11925:5:0"}],"id":700,"name":"MemberAccess","src":"11925:15:0"}],"id":701,"name":"FunctionCall","src":"11894:47:0"}],"id":702,"name":"FunctionCall","src":"11862:80:0"}],"id":703,"name":"VariableDeclarationStatement","src":"11829:113:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":704,"name":"Identifier","src":"11953:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":457,"type":"function (uint256,uint256) constant returns (uint256)","value":"min256"},"id":705,"name":"Identifier","src":"11978:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":580,"type":"uint256","value":"fillTakerTokenAmount"},"id":706,"name":"Identifier","src":"11985:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":694,"type":"uint256","value":"remainingTakerTokenAmount"},"id":707,"name":"Identifier","src":"12007:25:0"}],"id":708,"name":"FunctionCall","src":"11978:55:0"}],"id":709,"name":"Assignment","src":"11953:80:0"}],"id":710,"name":"ExpressionStatement","src":"11953:80:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":711,"name":"Identifier","src":"12048:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":712,"name":"Literal","src":"12074:1:0"}],"id":713,"name":"BinaryOperation","src":"12048:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"function (uint8,bytes32) constant","value":"LogError"},"id":714,"name":"Identifier","src":"12092:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":715,"name":"ElementaryTypeNameExpression","src":"12101:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"ORDER_FULLY_FILLED_OR_CANCELLED","referencedDeclaration":null,"type":"enum Exchange.Errors"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"type(enum Exchange.Errors)","value":"Errors"},"id":716,"name":"Identifier","src":"12107:6:0"}],"id":717,"name":"MemberAccess","src":"12107:38:0"}],"id":718,"name":"FunctionCall","src":"12101:45:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":719,"name":"Identifier","src":"12148:5:0"}],"id":720,"name":"MemberAccess","src":"12148:15:0"}],"id":721,"name":"FunctionCall","src":"12092:72:0"}],"id":722,"name":"ExpressionStatement","src":"12092:72:0"},{"attributes":{"functionReturnParameters":592},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":723,"name":"Literal","src":"12186:1:0"}],"id":724,"name":"Return","src":"12179:8:0"}],"id":725,"name":"Block","src":"12077:122:0"}],"id":726,"name":"IfStatement","src":"12044:155:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1502,"type":"function (uint256,uint256,uint256) constant returns (bool)","value":"isRoundingError"},"id":727,"name":"Identifier","src":"12215:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":728,"name":"Identifier","src":"12231:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":729,"name":"Identifier","src":"12255:5:0"}],"id":730,"name":"MemberAccess","src":"12255:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerTokenAmount","referencedDeclaration":543,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":731,"name":"Identifier","src":"12279:5:0"}],"id":732,"name":"MemberAccess","src":"12279:22:0"}],"id":733,"name":"FunctionCall","src":"12215:87:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"function (uint8,bytes32) constant","value":"LogError"},"id":734,"name":"Identifier","src":"12319:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":735,"name":"ElementaryTypeNameExpression","src":"12328:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"ROUNDING_ERROR_TOO_LARGE","referencedDeclaration":null,"type":"enum Exchange.Errors"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"type(enum Exchange.Errors)","value":"Errors"},"id":736,"name":"Identifier","src":"12334:6:0"}],"id":737,"name":"MemberAccess","src":"12334:31:0"}],"id":738,"name":"FunctionCall","src":"12328:38:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":739,"name":"Identifier","src":"12368:5:0"}],"id":740,"name":"MemberAccess","src":"12368:15:0"}],"id":741,"name":"FunctionCall","src":"12319:65:0"}],"id":742,"name":"ExpressionStatement","src":"12319:65:0"},{"attributes":{"functionReturnParameters":592},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":743,"name":"Literal","src":"12406:1:0"}],"id":744,"name":"Return","src":"12399:8:0"}],"id":745,"name":"Block","src":"12304:115:0"}],"id":746,"name":"IfStatement","src":"12211:208:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":582,"type":"bool","value":"shouldThrowOnInsufficientBalanceOrAllowance"},"id":747,"name":"Identifier","src":"12436:43:0"}],"id":748,"name":"UnaryOperation","src":"12435:44:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$554_memory_ptr","typeString":"struct Exchange.Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1766,"type":"function (struct Exchange.Order memory,uint256) constant returns (bool)","value":"isTransferable"},"id":749,"name":"Identifier","src":"12484:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":750,"name":"Identifier","src":"12499:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":751,"name":"Identifier","src":"12506:22:0"}],"id":752,"name":"FunctionCall","src":"12484:45:0"}],"id":753,"name":"UnaryOperation","src":"12483:46:0"}],"id":754,"name":"BinaryOperation","src":"12435:94:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"function (uint8,bytes32) constant","value":"LogError"},"id":755,"name":"Identifier","src":"12546:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":756,"name":"ElementaryTypeNameExpression","src":"12555:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"INSUFFICIENT_BALANCE_OR_ALLOWANCE","referencedDeclaration":null,"type":"enum Exchange.Errors"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"type(enum Exchange.Errors)","value":"Errors"},"id":757,"name":"Identifier","src":"12561:6:0"}],"id":758,"name":"MemberAccess","src":"12561:40:0"}],"id":759,"name":"FunctionCall","src":"12555:47:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":760,"name":"Identifier","src":"12604:5:0"}],"id":761,"name":"MemberAccess","src":"12604:15:0"}],"id":762,"name":"FunctionCall","src":"12546:74:0"}],"id":763,"name":"ExpressionStatement","src":"12546:74:0"},{"attributes":{"functionReturnParameters":592},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":764,"name":"Literal","src":"12642:1:0"}],"id":765,"name":"Return","src":"12635:8:0"}],"id":766,"name":"Block","src":"12531:124:0"}],"id":767,"name":"IfStatement","src":"12431:224:0"},{"attributes":{"assignments":[769]},"children":[{"attributes":{"constant":false,"name":"filledMakerTokenAmount","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":768,"name":"ElementaryTypeName","src":"12667:4:0"}],"id":769,"name":"VariableDeclaration","src":"12667:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"function (uint256,uint256,uint256) constant returns (uint256)","value":"getPartialAmount"},"id":770,"name":"Identifier","src":"12697:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":771,"name":"Identifier","src":"12714:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":772,"name":"Identifier","src":"12738:5:0"}],"id":773,"name":"MemberAccess","src":"12738:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerTokenAmount","referencedDeclaration":543,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":774,"name":"Identifier","src":"12762:5:0"}],"id":775,"name":"MemberAccess","src":"12762:22:0"}],"id":776,"name":"FunctionCall","src":"12697:88:0"}],"id":777,"name":"VariableDeclarationStatement","src":"12667:118:0"},{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"paidMakerFee","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":778,"name":"ElementaryTypeName","src":"12796:4:0"}],"id":779,"name":"VariableDeclaration","src":"12796:17:0"}],"id":780,"name":"VariableDeclarationStatement","src":"12796:18:0"},{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"paidTakerFee","scope":911,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":781,"name":"ElementaryTypeName","src":"12824:4:0"}],"id":782,"name":"VariableDeclaration","src":"12824:17:0"}],"id":783,"name":"VariableDeclarationStatement","src":"12824:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":479,"type":"mapping(bytes32 => uint256)","value":"filled"},"id":784,"name":"Identifier","src":"12852:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":785,"name":"Identifier","src":"12859:5:0"}],"id":786,"name":"MemberAccess","src":"12859:15:0"}],"id":787,"name":"IndexAccess","src":"12852:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":389,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeAdd"},"id":788,"name":"Identifier","src":"12878:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":479,"type":"mapping(bytes32 => uint256)","value":"filled"},"id":789,"name":"Identifier","src":"12886:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":790,"name":"Identifier","src":"12893:5:0"}],"id":791,"name":"MemberAccess","src":"12893:15:0"}],"id":792,"name":"IndexAccess","src":"12886:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":793,"name":"Identifier","src":"12911:22:0"}],"id":794,"name":"FunctionCall","src":"12878:56:0"}],"id":795,"name":"Assignment","src":"12852:82:0"}],"id":796,"name":"ExpressionStatement","src":"12852:82:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":797,"name":"Identifier","src":"12945:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1563,"type":"function (address,address,address,uint256) returns (bool)","value":"transferViaTokenTransferProxy"},"id":798,"name":"Identifier","src":"12953:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":799,"name":"Identifier","src":"12997:5:0"}],"id":800,"name":"MemberAccess","src":"12997:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":801,"name":"Identifier","src":"13028:5:0"}],"id":802,"name":"MemberAccess","src":"13028:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":803,"name":"Identifier","src":"13054:3:0"}],"id":804,"name":"MemberAccess","src":"13054:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":769,"type":"uint256","value":"filledMakerTokenAmount"},"id":805,"name":"Identifier","src":"13079:22:0"}],"id":806,"name":"FunctionCall","src":"12953:159:0"}],"id":807,"name":"FunctionCall","src":"12945:168:0"}],"id":808,"name":"ExpressionStatement","src":"12945:168:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":809,"name":"Identifier","src":"13124:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1563,"type":"function (address,address,address,uint256) returns (bool)","value":"transferViaTokenTransferProxy"},"id":810,"name":"Identifier","src":"13132:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":811,"name":"Identifier","src":"13176:5:0"}],"id":812,"name":"MemberAccess","src":"13176:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":813,"name":"Identifier","src":"13207:3:0"}],"id":814,"name":"MemberAccess","src":"13207:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":815,"name":"Identifier","src":"13232:5:0"}],"id":816,"name":"MemberAccess","src":"13232:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":817,"name":"Identifier","src":"13258:22:0"}],"id":818,"name":"FunctionCall","src":"13132:159:0"}],"id":819,"name":"FunctionCall","src":"13124:168:0"}],"id":820,"name":"ExpressionStatement","src":"13124:168:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"feeRecipient","referencedDeclaration":541,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":821,"name":"Identifier","src":"13307:5:0"}],"id":822,"name":"MemberAccess","src":"13307:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":823,"name":"ElementaryTypeNameExpression","src":"13329:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":824,"name":"Literal","src":"13337:1:0"}],"id":825,"name":"FunctionCall","src":"13329:10:0"}],"id":826,"name":"BinaryOperation","src":"13307:32:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerFee","referencedDeclaration":547,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":827,"name":"Identifier","src":"13360:5:0"}],"id":828,"name":"MemberAccess","src":"13360:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":829,"name":"Literal","src":"13377:1:0"}],"id":830,"name":"BinaryOperation","src":"13360:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":779,"type":"uint256","value":"paidMakerFee"},"id":831,"name":"Identifier","src":"13399:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"function (uint256,uint256,uint256) constant returns (uint256)","value":"getPartialAmount"},"id":832,"name":"Identifier","src":"13414:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":833,"name":"Identifier","src":"13431:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":834,"name":"Identifier","src":"13455:5:0"}],"id":835,"name":"MemberAccess","src":"13455:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerFee","referencedDeclaration":547,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":836,"name":"Identifier","src":"13479:5:0"}],"id":837,"name":"MemberAccess","src":"13479:14:0"}],"id":838,"name":"FunctionCall","src":"13414:80:0"}],"id":839,"name":"Assignment","src":"13399:95:0"}],"id":840,"name":"ExpressionStatement","src":"13399:95:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":841,"name":"Identifier","src":"13513:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1563,"type":"function (address,address,address,uint256) returns (bool)","value":"transferViaTokenTransferProxy"},"id":842,"name":"Identifier","src":"13521:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":843,"name":"Identifier","src":"13573:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":844,"name":"Identifier","src":"13614:5:0"}],"id":845,"name":"MemberAccess","src":"13614:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"feeRecipient","referencedDeclaration":541,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":846,"name":"Identifier","src":"13648:5:0"}],"id":847,"name":"MemberAccess","src":"13648:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":779,"type":"uint256","value":"paidMakerFee"},"id":848,"name":"Identifier","src":"13689:12:0"}],"id":849,"name":"FunctionCall","src":"13521:199:0"}],"id":850,"name":"FunctionCall","src":"13513:208:0"}],"id":851,"name":"ExpressionStatement","src":"13513:208:0"}],"id":852,"name":"Block","src":"13380:357:0"}],"id":853,"name":"IfStatement","src":"13356:381:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerFee","referencedDeclaration":549,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":854,"name":"Identifier","src":"13755:5:0"}],"id":855,"name":"MemberAccess","src":"13755:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":856,"name":"Literal","src":"13772:1:0"}],"id":857,"name":"BinaryOperation","src":"13755:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":782,"type":"uint256","value":"paidTakerFee"},"id":858,"name":"Identifier","src":"13794:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"function (uint256,uint256,uint256) constant returns (uint256)","value":"getPartialAmount"},"id":859,"name":"Identifier","src":"13809:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":860,"name":"Identifier","src":"13826:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":861,"name":"Identifier","src":"13850:5:0"}],"id":862,"name":"MemberAccess","src":"13850:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerFee","referencedDeclaration":549,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":863,"name":"Identifier","src":"13874:5:0"}],"id":864,"name":"MemberAccess","src":"13874:14:0"}],"id":865,"name":"FunctionCall","src":"13809:80:0"}],"id":866,"name":"Assignment","src":"13794:95:0"}],"id":867,"name":"ExpressionStatement","src":"13794:95:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":868,"name":"Identifier","src":"13908:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1563,"type":"function (address,address,address,uint256) returns (bool)","value":"transferViaTokenTransferProxy"},"id":869,"name":"Identifier","src":"13916:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":870,"name":"Identifier","src":"13968:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":871,"name":"Identifier","src":"14009:3:0"}],"id":872,"name":"MemberAccess","src":"14009:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"feeRecipient","referencedDeclaration":541,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":873,"name":"Identifier","src":"14042:5:0"}],"id":874,"name":"MemberAccess","src":"14042:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":782,"type":"uint256","value":"paidTakerFee"},"id":875,"name":"Identifier","src":"14083:12:0"}],"id":876,"name":"FunctionCall","src":"13916:198:0"}],"id":877,"name":"FunctionCall","src":"13908:207:0"}],"id":878,"name":"ExpressionStatement","src":"13908:207:0"}],"id":879,"name":"Block","src":"13775:356:0"}],"id":880,"name":"IfStatement","src":"13751:380:0"}],"id":881,"name":"Block","src":"13341:801:0"}],"id":882,"name":"IfStatement","src":"13303:839:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":507,"type":"function (address,address,address,address,address,uint256,uint256,uint256,uint256,bytes32,bytes32) constant","value":"LogFill"},"id":883,"name":"Identifier","src":"14154:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":884,"name":"Identifier","src":"14176:5:0"}],"id":885,"name":"MemberAccess","src":"14176:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":886,"name":"Identifier","src":"14202:3:0"}],"id":887,"name":"MemberAccess","src":"14202:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"feeRecipient","referencedDeclaration":541,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":888,"name":"Identifier","src":"14227:5:0"}],"id":889,"name":"MemberAccess","src":"14227:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":890,"name":"Identifier","src":"14260:5:0"}],"id":891,"name":"MemberAccess","src":"14260:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":892,"name":"Identifier","src":"14291:5:0"}],"id":893,"name":"MemberAccess","src":"14291:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":769,"type":"uint256","value":"filledMakerTokenAmount"},"id":894,"name":"Identifier","src":"14322:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":895,"name":"Identifier","src":"14359:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":779,"type":"uint256","value":"paidMakerFee"},"id":896,"name":"Identifier","src":"14396:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":782,"type":"uint256","value":"paidTakerFee"},"id":897,"name":"Identifier","src":"14423:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1819,"type":"function () returns (bytes32)","value":"keccak256"},"id":898,"name":"Identifier","src":"14450:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":899,"name":"Identifier","src":"14460:5:0"}],"id":900,"name":"MemberAccess","src":"14460:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":901,"name":"Identifier","src":"14478:5:0"}],"id":902,"name":"MemberAccess","src":"14478:16:0"}],"id":903,"name":"FunctionCall","src":"14450:45:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"struct Exchange.Order memory","value":"order"},"id":904,"name":"Identifier","src":"14510:5:0"}],"id":905,"name":"MemberAccess","src":"14510:15:0"}],"id":906,"name":"FunctionCall","src":"14154:382:0"}],"id":907,"name":"ExpressionStatement","src":"14154:382:0"},{"attributes":{"functionReturnParameters":592},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"uint256","value":"filledTakerTokenAmount"},"id":908,"name":"Identifier","src":"14554:22:0"}],"id":909,"name":"Return","src":"14547:29:0"}],"id":910,"name":"Block","src":"10758:3826:0"}],"id":911,"name":"FunctionDefinition","src":"10433:4151:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"cancelOrder","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":1084,"stateVariable":false,"storageLocation":"default","type":"address[5] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":912,"name":"ElementaryTypeName","src":"15040:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":913,"name":"Literal","src":"15048:1:0"}],"id":914,"name":"ArrayTypeName","src":"15040:10:0"}],"id":915,"name":"VariableDeclaration","src":"15040:25:0"},{"attributes":{"constant":false,"name":"orderValues","scope":1084,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":916,"name":"ElementaryTypeName","src":"15076:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":917,"name":"Literal","src":"15081:1:0"}],"id":918,"name":"ArrayTypeName","src":"15076:7:0"}],"id":919,"name":"VariableDeclaration","src":"15076:19:0"},{"attributes":{"constant":false,"name":"cancelTakerTokenAmount","scope":1084,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":920,"name":"ElementaryTypeName","src":"15106:4:0"}],"id":921,"name":"VariableDeclaration","src":"15106:27:0"}],"id":922,"name":"ParameterList","src":"15029:105:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1084,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":923,"name":"ElementaryTypeName","src":"15169:4:0"}],"id":924,"name":"VariableDeclaration","src":"15169:4:0"}],"id":925,"name":"ParameterList","src":"15168:6:0"},{"children":[{"attributes":{"assignments":[927]},"children":[{"attributes":{"constant":false,"name":"order","scope":1084,"stateVariable":false,"storageLocation":"memory","type":"struct Exchange.Order memory","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Order","referencedDeclaration":554,"type":"struct Exchange.Order storage pointer"},"id":926,"name":"UserDefinedTypeName","src":"15191:5:0"}],"id":927,"name":"VariableDeclaration","src":"15191:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["maker","taker","makerToken","takerToken","feeRecipient","makerTokenAmount","takerTokenAmount","makerFee","takerFee","expirationTimestampInSec","orderHash"],"type":"struct Exchange.Order memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":554,"type":"type(struct Exchange.Order storage pointer)","value":"Order"},"id":928,"name":"Identifier","src":"15212:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"address[5] memory","value":"orderAddresses"},"id":929,"name":"Identifier","src":"15240:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":930,"name":"Literal","src":"15255:1:0"}],"id":931,"name":"IndexAccess","src":"15240:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"address[5] memory","value":"orderAddresses"},"id":932,"name":"Identifier","src":"15279:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":933,"name":"Literal","src":"15294:1:0"}],"id":934,"name":"IndexAccess","src":"15279:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"address[5] memory","value":"orderAddresses"},"id":935,"name":"Identifier","src":"15323:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":936,"name":"Literal","src":"15338:1:0"}],"id":937,"name":"IndexAccess","src":"15323:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"address[5] memory","value":"orderAddresses"},"id":938,"name":"Identifier","src":"15367:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":939,"name":"Literal","src":"15382:1:0"}],"id":940,"name":"IndexAccess","src":"15367:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"address[5] memory","value":"orderAddresses"},"id":941,"name":"Identifier","src":"15413:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":942,"name":"Literal","src":"15428:1:0"}],"id":943,"name":"IndexAccess","src":"15413:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":919,"type":"uint256[6] memory","value":"orderValues"},"id":944,"name":"Identifier","src":"15463:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":945,"name":"Literal","src":"15475:1:0"}],"id":946,"name":"IndexAccess","src":"15463:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":919,"type":"uint256[6] memory","value":"orderValues"},"id":947,"name":"Identifier","src":"15510:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":948,"name":"Literal","src":"15522:1:0"}],"id":949,"name":"IndexAccess","src":"15510:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":919,"type":"uint256[6] memory","value":"orderValues"},"id":950,"name":"Identifier","src":"15549:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":951,"name":"Literal","src":"15561:1:0"}],"id":952,"name":"IndexAccess","src":"15549:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":919,"type":"uint256[6] memory","value":"orderValues"},"id":953,"name":"Identifier","src":"15588:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":954,"name":"Literal","src":"15600:1:0"}],"id":955,"name":"IndexAccess","src":"15588:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":919,"type":"uint256[6] memory","value":"orderValues"},"id":956,"name":"Identifier","src":"15643:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":957,"name":"Literal","src":"15655:1:0"}],"id":958,"name":"IndexAccess","src":"15643:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":1431,"type":"function (address[5] memory,uint256[6] memory) constant returns (bytes32)","value":"getOrderHash"},"id":959,"name":"Identifier","src":"15683:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"address[5] memory","value":"orderAddresses"},"id":960,"name":"Identifier","src":"15696:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":919,"type":"uint256[6] memory","value":"orderValues"},"id":961,"name":"Identifier","src":"15712:11:0"}],"id":962,"name":"FunctionCall","src":"15683:41:0"}],"id":963,"name":"FunctionCall","src":"15212:524:0"}],"id":964,"name":"VariableDeclarationStatement","src":"15191:545:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":965,"name":"Identifier","src":"15749:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":966,"name":"Identifier","src":"15757:5:0"}],"id":967,"name":"MemberAccess","src":"15757:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":968,"name":"Identifier","src":"15772:3:0"}],"id":969,"name":"MemberAccess","src":"15772:10:0"}],"id":970,"name":"BinaryOperation","src":"15757:25:0"}],"id":971,"name":"FunctionCall","src":"15749:34:0"}],"id":972,"name":"ExpressionStatement","src":"15749:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":973,"name":"Identifier","src":"15794:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerTokenAmount","referencedDeclaration":543,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":974,"name":"Identifier","src":"15802:5:0"}],"id":975,"name":"MemberAccess","src":"15802:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":976,"name":"Literal","src":"15827:1:0"}],"id":977,"name":"BinaryOperation","src":"15802:26:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":978,"name":"Identifier","src":"15832:5:0"}],"id":979,"name":"MemberAccess","src":"15832:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":980,"name":"Literal","src":"15857:1:0"}],"id":981,"name":"BinaryOperation","src":"15832:26:0"}],"id":982,"name":"BinaryOperation","src":"15802:56:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":921,"type":"uint256","value":"cancelTakerTokenAmount"},"id":983,"name":"Identifier","src":"15862:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":984,"name":"Literal","src":"15887:1:0"}],"id":985,"name":"BinaryOperation","src":"15862:26:0"}],"id":986,"name":"BinaryOperation","src":"15802:86:0"}],"id":987,"name":"FunctionCall","src":"15794:95:0"}],"id":988,"name":"ExpressionStatement","src":"15794:95:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"timestamp","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1810,"type":"block","value":"block"},"id":989,"name":"Identifier","src":"15906:5:0"}],"id":990,"name":"MemberAccess","src":"15906:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"expirationTimestampInSec","referencedDeclaration":551,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":991,"name":"Identifier","src":"15925:5:0"}],"id":992,"name":"MemberAccess","src":"15925:30:0"}],"id":993,"name":"BinaryOperation","src":"15906:49:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"function (uint8,bytes32) constant","value":"LogError"},"id":994,"name":"Identifier","src":"15972:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":995,"name":"ElementaryTypeNameExpression","src":"15981:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"ORDER_EXPIRED","referencedDeclaration":null,"type":"enum Exchange.Errors"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"type(enum Exchange.Errors)","value":"Errors"},"id":996,"name":"Identifier","src":"15987:6:0"}],"id":997,"name":"MemberAccess","src":"15987:20:0"}],"id":998,"name":"FunctionCall","src":"15981:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":999,"name":"Identifier","src":"16010:5:0"}],"id":1000,"name":"MemberAccess","src":"16010:15:0"}],"id":1001,"name":"FunctionCall","src":"15972:54:0"}],"id":1002,"name":"ExpressionStatement","src":"15972:54:0"},{"attributes":{"functionReturnParameters":925},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1003,"name":"Literal","src":"16048:1:0"}],"id":1004,"name":"Return","src":"16041:8:0"}],"id":1005,"name":"Block","src":"15957:104:0"}],"id":1006,"name":"IfStatement","src":"15902:159:0"},{"attributes":{"assignments":[1008]},"children":[{"attributes":{"constant":false,"name":"remainingTakerTokenAmount","scope":1084,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1007,"name":"ElementaryTypeName","src":"16073:4:0"}],"id":1008,"name":"VariableDeclaration","src":"16073:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":365,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeSub"},"id":1009,"name":"Identifier","src":"16106:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1010,"name":"Identifier","src":"16114:5:0"}],"id":1011,"name":"MemberAccess","src":"16114:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":1539,"type":"function (bytes32) constant returns (uint256)","value":"getUnavailableTakerTokenAmount"},"id":1012,"name":"Identifier","src":"16138:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1013,"name":"Identifier","src":"16169:5:0"}],"id":1014,"name":"MemberAccess","src":"16169:15:0"}],"id":1015,"name":"FunctionCall","src":"16138:47:0"}],"id":1016,"name":"FunctionCall","src":"16106:80:0"}],"id":1017,"name":"VariableDeclarationStatement","src":"16073:113:0"},{"attributes":{"assignments":[1019]},"children":[{"attributes":{"constant":false,"name":"cancelledTakerTokenAmount","scope":1084,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1018,"name":"ElementaryTypeName","src":"16197:4:0"}],"id":1019,"name":"VariableDeclaration","src":"16197:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":457,"type":"function (uint256,uint256) constant returns (uint256)","value":"min256"},"id":1020,"name":"Identifier","src":"16230:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":921,"type":"uint256","value":"cancelTakerTokenAmount"},"id":1021,"name":"Identifier","src":"16237:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1008,"type":"uint256","value":"remainingTakerTokenAmount"},"id":1022,"name":"Identifier","src":"16261:25:0"}],"id":1023,"name":"FunctionCall","src":"16230:57:0"}],"id":1024,"name":"VariableDeclarationStatement","src":"16197:90:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1019,"type":"uint256","value":"cancelledTakerTokenAmount"},"id":1025,"name":"Identifier","src":"16302:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1026,"name":"Literal","src":"16331:1:0"}],"id":1027,"name":"BinaryOperation","src":"16302:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"function (uint8,bytes32) constant","value":"LogError"},"id":1028,"name":"Identifier","src":"16349:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Errors_$465","typeString":"enum Exchange.Errors"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":1029,"name":"ElementaryTypeNameExpression","src":"16358:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"ORDER_FULLY_FILLED_OR_CANCELLED","referencedDeclaration":null,"type":"enum Exchange.Errors"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"type(enum Exchange.Errors)","value":"Errors"},"id":1030,"name":"Identifier","src":"16364:6:0"}],"id":1031,"name":"MemberAccess","src":"16364:38:0"}],"id":1032,"name":"FunctionCall","src":"16358:45:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1033,"name":"Identifier","src":"16405:5:0"}],"id":1034,"name":"MemberAccess","src":"16405:15:0"}],"id":1035,"name":"FunctionCall","src":"16349:72:0"}],"id":1036,"name":"ExpressionStatement","src":"16349:72:0"},{"attributes":{"functionReturnParameters":925},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1037,"name":"Literal","src":"16443:1:0"}],"id":1038,"name":"Return","src":"16436:8:0"}],"id":1039,"name":"Block","src":"16334:122:0"}],"id":1040,"name":"IfStatement","src":"16298:158:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"mapping(bytes32 => uint256)","value":"cancelled"},"id":1041,"name":"Identifier","src":"16468:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1042,"name":"Identifier","src":"16478:5:0"}],"id":1043,"name":"MemberAccess","src":"16478:15:0"}],"id":1044,"name":"IndexAccess","src":"16468:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":389,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeAdd"},"id":1045,"name":"Identifier","src":"16497:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"mapping(bytes32 => uint256)","value":"cancelled"},"id":1046,"name":"Identifier","src":"16505:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1047,"name":"Identifier","src":"16515:5:0"}],"id":1048,"name":"MemberAccess","src":"16515:15:0"}],"id":1049,"name":"IndexAccess","src":"16505:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1019,"type":"uint256","value":"cancelledTakerTokenAmount"},"id":1050,"name":"Identifier","src":"16533:25:0"}],"id":1051,"name":"FunctionCall","src":"16497:62:0"}],"id":1052,"name":"Assignment","src":"16468:91:0"}],"id":1053,"name":"ExpressionStatement","src":"16468:91:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":525,"type":"function (address,address,address,address,uint256,uint256,bytes32,bytes32) constant","value":"LogCancel"},"id":1054,"name":"Identifier","src":"16572:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1055,"name":"Identifier","src":"16596:5:0"}],"id":1056,"name":"MemberAccess","src":"16596:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"feeRecipient","referencedDeclaration":541,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1057,"name":"Identifier","src":"16622:5:0"}],"id":1058,"name":"MemberAccess","src":"16622:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1059,"name":"Identifier","src":"16655:5:0"}],"id":1060,"name":"MemberAccess","src":"16655:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1061,"name":"Identifier","src":"16686:5:0"}],"id":1062,"name":"MemberAccess","src":"16686:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"function (uint256,uint256,uint256) constant returns (uint256)","value":"getPartialAmount"},"id":1063,"name":"Identifier","src":"16717:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1019,"type":"uint256","value":"cancelledTakerTokenAmount"},"id":1064,"name":"Identifier","src":"16734:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1065,"name":"Identifier","src":"16761:5:0"}],"id":1066,"name":"MemberAccess","src":"16761:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerTokenAmount","referencedDeclaration":543,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1067,"name":"Identifier","src":"16785:5:0"}],"id":1068,"name":"MemberAccess","src":"16785:22:0"}],"id":1069,"name":"FunctionCall","src":"16717:91:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1019,"type":"uint256","value":"cancelledTakerTokenAmount"},"id":1070,"name":"Identifier","src":"16823:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1819,"type":"function () returns (bytes32)","value":"keccak256"},"id":1071,"name":"Identifier","src":"16863:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1072,"name":"Identifier","src":"16873:5:0"}],"id":1073,"name":"MemberAccess","src":"16873:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1074,"name":"Identifier","src":"16891:5:0"}],"id":1075,"name":"MemberAccess","src":"16891:16:0"}],"id":1076,"name":"FunctionCall","src":"16863:45:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"orderHash","referencedDeclaration":553,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"struct Exchange.Order memory","value":"order"},"id":1077,"name":"Identifier","src":"16923:5:0"}],"id":1078,"name":"MemberAccess","src":"16923:15:0"}],"id":1079,"name":"FunctionCall","src":"16572:377:0"}],"id":1080,"name":"ExpressionStatement","src":"16572:377:0"},{"attributes":{"functionReturnParameters":925},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1019,"type":"uint256","value":"cancelledTakerTokenAmount"},"id":1081,"name":"Identifier","src":"16967:25:0"}],"id":1082,"name":"Return","src":"16960:32:0"}],"id":1083,"name":"Block","src":"15180:1820:0"}],"id":1084,"name":"FunctionDefinition","src":"15009:1991:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"fillOrKillOrder","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":1118,"stateVariable":false,"storageLocation":"default","type":"address[5] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":1085,"name":"ElementaryTypeName","src":"17669:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1086,"name":"Literal","src":"17677:1:0"}],"id":1087,"name":"ArrayTypeName","src":"17669:10:0"}],"id":1088,"name":"VariableDeclaration","src":"17669:25:0"},{"attributes":{"constant":false,"name":"orderValues","scope":1118,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1089,"name":"ElementaryTypeName","src":"17705:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":1090,"name":"Literal","src":"17710:1:0"}],"id":1091,"name":"ArrayTypeName","src":"17705:7:0"}],"id":1092,"name":"VariableDeclaration","src":"17705:19:0"},{"attributes":{"constant":false,"name":"fillTakerTokenAmount","scope":1118,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1093,"name":"ElementaryTypeName","src":"17735:4:0"}],"id":1094,"name":"VariableDeclaration","src":"17735:25:0"},{"attributes":{"constant":false,"name":"v","scope":1118,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1095,"name":"ElementaryTypeName","src":"17771:5:0"}],"id":1096,"name":"VariableDeclaration","src":"17771:7:0"},{"attributes":{"constant":false,"name":"r","scope":1118,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1097,"name":"ElementaryTypeName","src":"17789:7:0"}],"id":1098,"name":"VariableDeclaration","src":"17789:9:0"},{"attributes":{"constant":false,"name":"s","scope":1118,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1099,"name":"ElementaryTypeName","src":"17809:7:0"}],"id":1100,"name":"VariableDeclaration","src":"17809:9:0"}],"id":1101,"name":"ParameterList","src":"17658:161:0"},{"attributes":{"parameters":[null]},"children":[],"id":1102,"name":"ParameterList","src":"17841:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":1103,"name":"Identifier","src":"17852:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":911,"type":"function (address[5] memory,uint256[6] memory,uint256,bool,uint8,bytes32,bytes32) returns (uint256)","value":"fillOrder"},"id":1104,"name":"Identifier","src":"17860:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1088,"type":"address[5] memory","value":"orderAddresses"},"id":1105,"name":"Identifier","src":"17884:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1092,"type":"uint256[6] memory","value":"orderValues"},"id":1106,"name":"Identifier","src":"17913:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1094,"type":"uint256","value":"fillTakerTokenAmount"},"id":1107,"name":"Identifier","src":"17939:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1108,"name":"Literal","src":"17974:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1096,"type":"uint8","value":"v"},"id":1109,"name":"Identifier","src":"17994:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1098,"type":"bytes32","value":"r"},"id":1110,"name":"Identifier","src":"18010:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1100,"type":"bytes32","value":"s"},"id":1111,"name":"Identifier","src":"18026:1:0"}],"id":1112,"name":"FunctionCall","src":"17860:178:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1094,"type":"uint256","value":"fillTakerTokenAmount"},"id":1113,"name":"Identifier","src":"18042:20:0"}],"id":1114,"name":"BinaryOperation","src":"17860:202:0"}],"id":1115,"name":"FunctionCall","src":"17852:211:0"}],"id":1116,"name":"ExpressionStatement","src":"17852:211:0"}],"id":1117,"name":"Block","src":"17841:230:0"}],"id":1118,"name":"FunctionDefinition","src":"17634:437:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"batchFillOrders","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":1181,"stateVariable":false,"storageLocation":"default","type":"address[5] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[5] storage ref[] storage pointer"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":1119,"name":"ElementaryTypeName","src":"18747:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1120,"name":"Literal","src":"18755:1:0"}],"id":1121,"name":"ArrayTypeName","src":"18747:10:0"}],"id":1122,"name":"ArrayTypeName","src":"18747:12:0"}],"id":1123,"name":"VariableDeclaration","src":"18747:27:0"},{"attributes":{"constant":false,"name":"orderValues","scope":1181,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[6] storage ref[] storage pointer"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1124,"name":"ElementaryTypeName","src":"18785:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":1125,"name":"Literal","src":"18790:1:0"}],"id":1126,"name":"ArrayTypeName","src":"18785:7:0"}],"id":1127,"name":"ArrayTypeName","src":"18785:9:0"}],"id":1128,"name":"VariableDeclaration","src":"18785:21:0"},{"attributes":{"constant":false,"name":"fillTakerTokenAmounts","scope":1181,"stateVariable":false,"storageLocation":"default","type":"uint256[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1129,"name":"ElementaryTypeName","src":"18817:4:0"}],"id":1130,"name":"ArrayTypeName","src":"18817:6:0"}],"id":1131,"name":"VariableDeclaration","src":"18817:28:0"},{"attributes":{"constant":false,"name":"shouldThrowOnInsufficientBalanceOrAllowance","scope":1181,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1132,"name":"ElementaryTypeName","src":"18856:4:0"}],"id":1133,"name":"VariableDeclaration","src":"18856:48:0"},{"attributes":{"constant":false,"name":"v","scope":1181,"stateVariable":false,"storageLocation":"default","type":"uint8[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint8[] storage pointer"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1134,"name":"ElementaryTypeName","src":"18915:5:0"}],"id":1135,"name":"ArrayTypeName","src":"18915:7:0"}],"id":1136,"name":"VariableDeclaration","src":"18915:9:0"},{"attributes":{"constant":false,"name":"r","scope":1181,"stateVariable":false,"storageLocation":"default","type":"bytes32[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[] storage pointer"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1137,"name":"ElementaryTypeName","src":"18935:7:0"}],"id":1138,"name":"ArrayTypeName","src":"18935:9:0"}],"id":1139,"name":"VariableDeclaration","src":"18935:11:0"},{"attributes":{"constant":false,"name":"s","scope":1181,"stateVariable":false,"storageLocation":"default","type":"bytes32[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[] storage pointer"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1140,"name":"ElementaryTypeName","src":"18957:7:0"}],"id":1141,"name":"ArrayTypeName","src":"18957:9:0"}],"id":1142,"name":"VariableDeclaration","src":"18957:11:0"}],"id":1143,"name":"ParameterList","src":"18736:233:0"},{"attributes":{"parameters":[null]},"children":[],"id":1144,"name":"ParameterList","src":"18991:0:0"},{"children":[{"children":[{"attributes":{"assignments":[1146]},"children":[{"attributes":{"constant":false,"name":"i","scope":1181,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1145,"name":"ElementaryTypeName","src":"19007:4:0"}],"id":1146,"name":"VariableDeclaration","src":"19007:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1147,"name":"Literal","src":"19016:1:0"}],"id":1148,"name":"VariableDeclarationStatement","src":"19007:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1149,"name":"Identifier","src":"19019:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1123,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1150,"name":"Identifier","src":"19023:14:0"}],"id":1151,"name":"MemberAccess","src":"19023:21:0"}],"id":1152,"name":"BinaryOperation","src":"19019:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1153,"name":"Identifier","src":"19046:1:0"}],"id":1154,"name":"UnaryOperation","src":"19046:3:0"}],"id":1155,"name":"ExpressionStatement","src":"19046:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":911,"type":"function (address[5] memory,uint256[6] memory,uint256,bool,uint8,bytes32,bytes32) returns (uint256)","value":"fillOrder"},"id":1156,"name":"Identifier","src":"19066:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address[5] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1123,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1157,"name":"Identifier","src":"19094:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1158,"name":"Identifier","src":"19109:1:0"}],"id":1159,"name":"IndexAccess","src":"19094:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256[6] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1128,"type":"uint256[6] memory[] memory","value":"orderValues"},"id":1160,"name":"Identifier","src":"19130:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1161,"name":"Identifier","src":"19142:1:0"}],"id":1162,"name":"IndexAccess","src":"19130:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1131,"type":"uint256[] memory","value":"fillTakerTokenAmounts"},"id":1163,"name":"Identifier","src":"19163:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1164,"name":"Identifier","src":"19185:1:0"}],"id":1165,"name":"IndexAccess","src":"19163:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1133,"type":"bool","value":"shouldThrowOnInsufficientBalanceOrAllowance"},"id":1166,"name":"Identifier","src":"19206:43:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1136,"type":"uint8[] memory","value":"v"},"id":1167,"name":"Identifier","src":"19268:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1168,"name":"Identifier","src":"19270:1:0"}],"id":1169,"name":"IndexAccess","src":"19268:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1139,"type":"bytes32[] memory","value":"r"},"id":1170,"name":"Identifier","src":"19291:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1171,"name":"Identifier","src":"19293:1:0"}],"id":1172,"name":"IndexAccess","src":"19291:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1142,"type":"bytes32[] memory","value":"s"},"id":1173,"name":"Identifier","src":"19314:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1146,"type":"uint256","value":"i"},"id":1174,"name":"Identifier","src":"19316:1:0"}],"id":1175,"name":"IndexAccess","src":"19314:4:0"}],"id":1176,"name":"FunctionCall","src":"19066:267:0"}],"id":1177,"name":"ExpressionStatement","src":"19066:267:0"}],"id":1178,"name":"Block","src":"19051:294:0"}],"id":1179,"name":"ForStatement","src":"19002:343:0"}],"id":1180,"name":"Block","src":"18991:361:0"}],"id":1181,"name":"FunctionDefinition","src":"18712:640:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"batchFillOrKillOrders","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":1241,"stateVariable":false,"storageLocation":"default","type":"address[5] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[5] storage ref[] storage pointer"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":1182,"name":"ElementaryTypeName","src":"19933:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1183,"name":"Literal","src":"19941:1:0"}],"id":1184,"name":"ArrayTypeName","src":"19933:10:0"}],"id":1185,"name":"ArrayTypeName","src":"19933:12:0"}],"id":1186,"name":"VariableDeclaration","src":"19933:27:0"},{"attributes":{"constant":false,"name":"orderValues","scope":1241,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[6] storage ref[] storage pointer"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1187,"name":"ElementaryTypeName","src":"19971:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":1188,"name":"Literal","src":"19976:1:0"}],"id":1189,"name":"ArrayTypeName","src":"19971:7:0"}],"id":1190,"name":"ArrayTypeName","src":"19971:9:0"}],"id":1191,"name":"VariableDeclaration","src":"19971:21:0"},{"attributes":{"constant":false,"name":"fillTakerTokenAmounts","scope":1241,"stateVariable":false,"storageLocation":"default","type":"uint256[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1192,"name":"ElementaryTypeName","src":"20003:4:0"}],"id":1193,"name":"ArrayTypeName","src":"20003:6:0"}],"id":1194,"name":"VariableDeclaration","src":"20003:28:0"},{"attributes":{"constant":false,"name":"v","scope":1241,"stateVariable":false,"storageLocation":"default","type":"uint8[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint8[] storage pointer"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1195,"name":"ElementaryTypeName","src":"20042:5:0"}],"id":1196,"name":"ArrayTypeName","src":"20042:7:0"}],"id":1197,"name":"VariableDeclaration","src":"20042:9:0"},{"attributes":{"constant":false,"name":"r","scope":1241,"stateVariable":false,"storageLocation":"default","type":"bytes32[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[] storage pointer"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1198,"name":"ElementaryTypeName","src":"20062:7:0"}],"id":1199,"name":"ArrayTypeName","src":"20062:9:0"}],"id":1200,"name":"VariableDeclaration","src":"20062:11:0"},{"attributes":{"constant":false,"name":"s","scope":1241,"stateVariable":false,"storageLocation":"default","type":"bytes32[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[] storage pointer"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1201,"name":"ElementaryTypeName","src":"20084:7:0"}],"id":1202,"name":"ArrayTypeName","src":"20084:9:0"}],"id":1203,"name":"VariableDeclaration","src":"20084:11:0"}],"id":1204,"name":"ParameterList","src":"19922:174:0"},{"attributes":{"parameters":[null]},"children":[],"id":1205,"name":"ParameterList","src":"20118:0:0"},{"children":[{"children":[{"attributes":{"assignments":[1207]},"children":[{"attributes":{"constant":false,"name":"i","scope":1241,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1206,"name":"ElementaryTypeName","src":"20134:4:0"}],"id":1207,"name":"VariableDeclaration","src":"20134:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1208,"name":"Literal","src":"20143:1:0"}],"id":1209,"name":"VariableDeclarationStatement","src":"20134:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1210,"name":"Identifier","src":"20146:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1211,"name":"Identifier","src":"20150:14:0"}],"id":1212,"name":"MemberAccess","src":"20150:21:0"}],"id":1213,"name":"BinaryOperation","src":"20146:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1214,"name":"Identifier","src":"20173:1:0"}],"id":1215,"name":"UnaryOperation","src":"20173:3:0"}],"id":1216,"name":"ExpressionStatement","src":"20173:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":1118,"type":"function (address[5] memory,uint256[6] memory,uint256,uint8,bytes32,bytes32)","value":"fillOrKillOrder"},"id":1217,"name":"Identifier","src":"20193:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address[5] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1186,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1218,"name":"Identifier","src":"20227:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1219,"name":"Identifier","src":"20242:1:0"}],"id":1220,"name":"IndexAccess","src":"20227:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256[6] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1191,"type":"uint256[6] memory[] memory","value":"orderValues"},"id":1221,"name":"Identifier","src":"20263:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1222,"name":"Identifier","src":"20275:1:0"}],"id":1223,"name":"IndexAccess","src":"20263:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1194,"type":"uint256[] memory","value":"fillTakerTokenAmounts"},"id":1224,"name":"Identifier","src":"20296:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1225,"name":"Identifier","src":"20318:1:0"}],"id":1226,"name":"IndexAccess","src":"20296:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1197,"type":"uint8[] memory","value":"v"},"id":1227,"name":"Identifier","src":"20339:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1228,"name":"Identifier","src":"20341:1:0"}],"id":1229,"name":"IndexAccess","src":"20339:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1200,"type":"bytes32[] memory","value":"r"},"id":1230,"name":"Identifier","src":"20362:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1231,"name":"Identifier","src":"20364:1:0"}],"id":1232,"name":"IndexAccess","src":"20362:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1203,"type":"bytes32[] memory","value":"s"},"id":1233,"name":"Identifier","src":"20385:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1207,"type":"uint256","value":"i"},"id":1234,"name":"Identifier","src":"20387:1:0"}],"id":1235,"name":"IndexAccess","src":"20385:4:0"}],"id":1236,"name":"FunctionCall","src":"20193:211:0"}],"id":1237,"name":"ExpressionStatement","src":"20193:211:0"}],"id":1238,"name":"Block","src":"20178:238:0"}],"id":1239,"name":"ForStatement","src":"20129:287:0"}],"id":1240,"name":"Block","src":"20118:305:0"}],"id":1241,"name":"FunctionDefinition","src":"19892:531:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"fillOrdersUpTo","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":1336,"stateVariable":false,"storageLocation":"default","type":"address[5] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[5] storage ref[] storage pointer"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":1242,"name":"ElementaryTypeName","src":"21205:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1243,"name":"Literal","src":"21213:1:0"}],"id":1244,"name":"ArrayTypeName","src":"21205:10:0"}],"id":1245,"name":"ArrayTypeName","src":"21205:12:0"}],"id":1246,"name":"VariableDeclaration","src":"21205:27:0"},{"attributes":{"constant":false,"name":"orderValues","scope":1336,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[6] storage ref[] storage pointer"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1247,"name":"ElementaryTypeName","src":"21243:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":1248,"name":"Literal","src":"21248:1:0"}],"id":1249,"name":"ArrayTypeName","src":"21243:7:0"}],"id":1250,"name":"ArrayTypeName","src":"21243:9:0"}],"id":1251,"name":"VariableDeclaration","src":"21243:21:0"},{"attributes":{"constant":false,"name":"fillTakerTokenAmount","scope":1336,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1252,"name":"ElementaryTypeName","src":"21275:4:0"}],"id":1253,"name":"VariableDeclaration","src":"21275:25:0"},{"attributes":{"constant":false,"name":"shouldThrowOnInsufficientBalanceOrAllowance","scope":1336,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1254,"name":"ElementaryTypeName","src":"21311:4:0"}],"id":1255,"name":"VariableDeclaration","src":"21311:48:0"},{"attributes":{"constant":false,"name":"v","scope":1336,"stateVariable":false,"storageLocation":"default","type":"uint8[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint8[] storage pointer"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1256,"name":"ElementaryTypeName","src":"21370:5:0"}],"id":1257,"name":"ArrayTypeName","src":"21370:7:0"}],"id":1258,"name":"VariableDeclaration","src":"21370:9:0"},{"attributes":{"constant":false,"name":"r","scope":1336,"stateVariable":false,"storageLocation":"default","type":"bytes32[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[] storage pointer"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1259,"name":"ElementaryTypeName","src":"21390:7:0"}],"id":1260,"name":"ArrayTypeName","src":"21390:9:0"}],"id":1261,"name":"VariableDeclaration","src":"21390:11:0"},{"attributes":{"constant":false,"name":"s","scope":1336,"stateVariable":false,"storageLocation":"default","type":"bytes32[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[] storage pointer"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1262,"name":"ElementaryTypeName","src":"21412:7:0"}],"id":1263,"name":"ArrayTypeName","src":"21412:9:0"}],"id":1264,"name":"VariableDeclaration","src":"21412:11:0"}],"id":1265,"name":"ParameterList","src":"21194:230:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1336,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1266,"name":"ElementaryTypeName","src":"21459:4:0"}],"id":1267,"name":"VariableDeclaration","src":"21459:4:0"}],"id":1268,"name":"ParameterList","src":"21458:6:0"},{"children":[{"attributes":{"assignments":[1270]},"children":[{"attributes":{"constant":false,"name":"filledTakerTokenAmount","scope":1336,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1269,"name":"ElementaryTypeName","src":"21481:4:0"}],"id":1270,"name":"VariableDeclaration","src":"21481:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1271,"name":"Literal","src":"21511:1:0"}],"id":1272,"name":"VariableDeclarationStatement","src":"21481:31:0"},{"children":[{"attributes":{"assignments":[1274]},"children":[{"attributes":{"constant":false,"name":"i","scope":1336,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1273,"name":"ElementaryTypeName","src":"21528:4:0"}],"id":1274,"name":"VariableDeclaration","src":"21528:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1275,"name":"Literal","src":"21537:1:0"}],"id":1276,"name":"VariableDeclarationStatement","src":"21528:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1277,"name":"Identifier","src":"21540:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1246,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1278,"name":"Identifier","src":"21544:14:0"}],"id":1279,"name":"MemberAccess","src":"21544:21:0"}],"id":1280,"name":"BinaryOperation","src":"21540:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1281,"name":"Identifier","src":"21567:1:0"}],"id":1282,"name":"UnaryOperation","src":"21567:3:0"}],"id":1283,"name":"ExpressionStatement","src":"21567:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1829,"type":"function (bool)","value":"require"},"id":1284,"name":"Identifier","src":"21587:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address[5] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1246,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1285,"name":"Identifier","src":"21595:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1286,"name":"Identifier","src":"21610:1:0"}],"id":1287,"name":"IndexAccess","src":"21595:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":1288,"name":"Literal","src":"21613:1:0"}],"id":1289,"name":"IndexAccess","src":"21595:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address[5] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1246,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1290,"name":"Identifier","src":"21619:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1291,"name":"Literal","src":"21634:1:0"}],"id":1292,"name":"IndexAccess","src":"21619:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":1293,"name":"Literal","src":"21637:1:0"}],"id":1294,"name":"IndexAccess","src":"21619:20:0"}],"id":1295,"name":"BinaryOperation","src":"21595:44:0"}],"id":1296,"name":"FunctionCall","src":"21587:53:0"}],"id":1297,"name":"ExpressionStatement","src":"21587:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1270,"type":"uint256","value":"filledTakerTokenAmount"},"id":1298,"name":"Identifier","src":"21701:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":389,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeAdd"},"id":1299,"name":"Identifier","src":"21726:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1270,"type":"uint256","value":"filledTakerTokenAmount"},"id":1300,"name":"Identifier","src":"21734:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":911,"type":"function (address[5] memory,uint256[6] memory,uint256,bool,uint8,bytes32,bytes32) returns (uint256)","value":"fillOrder"},"id":1301,"name":"Identifier","src":"21758:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address[5] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1246,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1302,"name":"Identifier","src":"21786:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1303,"name":"Identifier","src":"21801:1:0"}],"id":1304,"name":"IndexAccess","src":"21786:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256[6] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1251,"type":"uint256[6] memory[] memory","value":"orderValues"},"id":1305,"name":"Identifier","src":"21822:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1306,"name":"Identifier","src":"21834:1:0"}],"id":1307,"name":"IndexAccess","src":"21822:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":365,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeSub"},"id":1308,"name":"Identifier","src":"21855:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1253,"type":"uint256","value":"fillTakerTokenAmount"},"id":1309,"name":"Identifier","src":"21863:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1270,"type":"uint256","value":"filledTakerTokenAmount"},"id":1310,"name":"Identifier","src":"21885:22:0"}],"id":1311,"name":"FunctionCall","src":"21855:53:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1255,"type":"bool","value":"shouldThrowOnInsufficientBalanceOrAllowance"},"id":1312,"name":"Identifier","src":"21927:43:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1258,"type":"uint8[] memory","value":"v"},"id":1313,"name":"Identifier","src":"21989:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1314,"name":"Identifier","src":"21991:1:0"}],"id":1315,"name":"IndexAccess","src":"21989:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1261,"type":"bytes32[] memory","value":"r"},"id":1316,"name":"Identifier","src":"22012:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1317,"name":"Identifier","src":"22014:1:0"}],"id":1318,"name":"IndexAccess","src":"22012:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1264,"type":"bytes32[] memory","value":"s"},"id":1319,"name":"Identifier","src":"22035:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1274,"type":"uint256","value":"i"},"id":1320,"name":"Identifier","src":"22037:1:0"}],"id":1321,"name":"IndexAccess","src":"22035:4:0"}],"id":1322,"name":"FunctionCall","src":"21758:296:0"}],"id":1323,"name":"FunctionCall","src":"21726:329:0"}],"id":1324,"name":"Assignment","src":"21701:354:0"}],"id":1325,"name":"ExpressionStatement","src":"21701:354:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1270,"type":"uint256","value":"filledTakerTokenAmount"},"id":1326,"name":"Identifier","src":"22074:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1253,"type":"uint256","value":"fillTakerTokenAmount"},"id":1327,"name":"Identifier","src":"22100:20:0"}],"id":1328,"name":"BinaryOperation","src":"22074:46:0"},{"id":1329,"name":"Break","src":"22122:5:0"}],"id":1330,"name":"IfStatement","src":"22070:57:0"}],"id":1331,"name":"Block","src":"21572:567:0"}],"id":1332,"name":"ForStatement","src":"21523:616:0"},{"attributes":{"functionReturnParameters":1268},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1270,"type":"uint256","value":"filledTakerTokenAmount"},"id":1333,"name":"Identifier","src":"22156:22:0"}],"id":1334,"name":"Return","src":"22149:29:0"}],"id":1335,"name":"Block","src":"21470:716:0"}],"id":1336,"name":"FunctionDefinition","src":"21171:1015:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"batchCancelOrders","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":1378,"stateVariable":false,"storageLocation":"default","type":"address[5] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[5] storage ref[] storage pointer"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":1337,"name":"ElementaryTypeName","src":"22587:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1338,"name":"Literal","src":"22595:1:0"}],"id":1339,"name":"ArrayTypeName","src":"22587:10:0"}],"id":1340,"name":"ArrayTypeName","src":"22587:12:0"}],"id":1341,"name":"VariableDeclaration","src":"22587:27:0"},{"attributes":{"constant":false,"name":"orderValues","scope":1378,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[6] storage ref[] storage pointer"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1342,"name":"ElementaryTypeName","src":"22625:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":1343,"name":"Literal","src":"22630:1:0"}],"id":1344,"name":"ArrayTypeName","src":"22625:7:0"}],"id":1345,"name":"ArrayTypeName","src":"22625:9:0"}],"id":1346,"name":"VariableDeclaration","src":"22625:21:0"},{"attributes":{"constant":false,"name":"cancelTakerTokenAmounts","scope":1378,"stateVariable":false,"storageLocation":"default","type":"uint256[] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1347,"name":"ElementaryTypeName","src":"22657:4:0"}],"id":1348,"name":"ArrayTypeName","src":"22657:6:0"}],"id":1349,"name":"VariableDeclaration","src":"22657:30:0"}],"id":1350,"name":"ParameterList","src":"22576:112:0"},{"attributes":{"parameters":[null]},"children":[],"id":1351,"name":"ParameterList","src":"22710:0:0"},{"children":[{"children":[{"attributes":{"assignments":[1353]},"children":[{"attributes":{"constant":false,"name":"i","scope":1378,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1352,"name":"ElementaryTypeName","src":"22726:4:0"}],"id":1353,"name":"VariableDeclaration","src":"22726:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1354,"name":"Literal","src":"22735:1:0"}],"id":1355,"name":"VariableDeclarationStatement","src":"22726:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1353,"type":"uint256","value":"i"},"id":1356,"name":"Identifier","src":"22738:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1341,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1357,"name":"Identifier","src":"22742:14:0"}],"id":1358,"name":"MemberAccess","src":"22742:21:0"}],"id":1359,"name":"BinaryOperation","src":"22738:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1353,"type":"uint256","value":"i"},"id":1360,"name":"Identifier","src":"22765:1:0"}],"id":1361,"name":"UnaryOperation","src":"22765:3:0"}],"id":1362,"name":"ExpressionStatement","src":"22765:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$5_memory","typeString":"address[5] memory"},{"typeIdentifier":"t_array$_t_uint256_$6_memory","typeString":"uint256[6] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1084,"type":"function (address[5] memory,uint256[6] memory,uint256) returns (uint256)","value":"cancelOrder"},"id":1363,"name":"Identifier","src":"22785:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address[5] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1341,"type":"address[5] memory[] memory","value":"orderAddresses"},"id":1364,"name":"Identifier","src":"22815:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1353,"type":"uint256","value":"i"},"id":1365,"name":"Identifier","src":"22830:1:0"}],"id":1366,"name":"IndexAccess","src":"22815:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256[6] memory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1346,"type":"uint256[6] memory[] memory","value":"orderValues"},"id":1367,"name":"Identifier","src":"22851:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1353,"type":"uint256","value":"i"},"id":1368,"name":"Identifier","src":"22863:1:0"}],"id":1369,"name":"IndexAccess","src":"22851:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1349,"type":"uint256[] memory","value":"cancelTakerTokenAmounts"},"id":1370,"name":"Identifier","src":"22884:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1353,"type":"uint256","value":"i"},"id":1371,"name":"Identifier","src":"22908:1:0"}],"id":1372,"name":"IndexAccess","src":"22884:26:0"}],"id":1373,"name":"FunctionCall","src":"22785:140:0"}],"id":1374,"name":"ExpressionStatement","src":"22785:140:0"}],"id":1375,"name":"Block","src":"22770:167:0"}],"id":1376,"name":"ForStatement","src":"22721:216:0"}],"id":1377,"name":"Block","src":"22710:234:0"}],"id":1378,"name":"FunctionDefinition","src":"22550:394:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getOrderHash","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderAddresses","scope":1431,"stateVariable":false,"storageLocation":"default","type":"address[5] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"address[5] storage pointer"},"children":[{"attributes":{"name":"address","type":"address"},"id":1379,"name":"ElementaryTypeName","src":"23386:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1380,"name":"Literal","src":"23394:1:0"}],"id":1381,"name":"ArrayTypeName","src":"23386:10:0"}],"id":1382,"name":"VariableDeclaration","src":"23386:25:0"},{"attributes":{"constant":false,"name":"orderValues","scope":1431,"stateVariable":false,"storageLocation":"default","type":"uint256[6] memory","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6] storage pointer"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1383,"name":"ElementaryTypeName","src":"23413:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":1384,"name":"Literal","src":"23418:1:0"}],"id":1385,"name":"ArrayTypeName","src":"23413:7:0"}],"id":1386,"name":"VariableDeclaration","src":"23413:19:0"}],"id":1387,"name":"ParameterList","src":"23385:48:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1431,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1388,"name":"ElementaryTypeName","src":"23486:7:0"}],"id":1389,"name":"VariableDeclaration","src":"23486:7:0"}],"id":1390,"name":"ParameterList","src":"23485:9:0"},{"children":[{"attributes":{"functionReturnParameters":1390},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1819,"type":"function () returns (bytes32)","value":"keccak256"},"id":1391,"name":"Identifier","src":"23518:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$1808","typeString":"contract Exchange"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1392,"name":"ElementaryTypeNameExpression","src":"23542:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1839,"type":"contract Exchange","value":"this"},"id":1393,"name":"Identifier","src":"23550:4:0"}],"id":1394,"name":"FunctionCall","src":"23542:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1382,"type":"address[5] memory","value":"orderAddresses"},"id":1395,"name":"Identifier","src":"23570:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1396,"name":"Literal","src":"23585:1:0"}],"id":1397,"name":"IndexAccess","src":"23570:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1382,"type":"address[5] memory","value":"orderAddresses"},"id":1398,"name":"Identifier","src":"23611:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1399,"name":"Literal","src":"23626:1:0"}],"id":1400,"name":"IndexAccess","src":"23611:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1382,"type":"address[5] memory","value":"orderAddresses"},"id":1401,"name":"Identifier","src":"23652:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1402,"name":"Literal","src":"23667:1:0"}],"id":1403,"name":"IndexAccess","src":"23652:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1382,"type":"address[5] memory","value":"orderAddresses"},"id":1404,"name":"Identifier","src":"23698:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":1405,"name":"Literal","src":"23713:1:0"}],"id":1406,"name":"IndexAccess","src":"23698:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1382,"type":"address[5] memory","value":"orderAddresses"},"id":1407,"name":"Identifier","src":"23744:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":1408,"name":"Literal","src":"23759:1:0"}],"id":1409,"name":"IndexAccess","src":"23744:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1386,"type":"uint256[6] memory","value":"orderValues"},"id":1410,"name":"Identifier","src":"23792:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1411,"name":"Literal","src":"23804:1:0"}],"id":1412,"name":"IndexAccess","src":"23792:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1386,"type":"uint256[6] memory","value":"orderValues"},"id":1413,"name":"Identifier","src":"23844:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1414,"name":"Literal","src":"23856:1:0"}],"id":1415,"name":"IndexAccess","src":"23844:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1386,"type":"uint256[6] memory","value":"orderValues"},"id":1416,"name":"Identifier","src":"23896:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1417,"name":"Literal","src":"23908:1:0"}],"id":1418,"name":"IndexAccess","src":"23896:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1386,"type":"uint256[6] memory","value":"orderValues"},"id":1419,"name":"Identifier","src":"23940:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":1420,"name":"Literal","src":"23952:1:0"}],"id":1421,"name":"IndexAccess","src":"23940:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1386,"type":"uint256[6] memory","value":"orderValues"},"id":1422,"name":"Identifier","src":"23984:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":1423,"name":"Literal","src":"23996:1:0"}],"id":1424,"name":"IndexAccess","src":"23984:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1386,"type":"uint256[6] memory","value":"orderValues"},"id":1425,"name":"Identifier","src":"24044:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1426,"name":"Literal","src":"24056:1:0"}],"id":1427,"name":"IndexAccess","src":"24044:14:0"}],"id":1428,"name":"FunctionCall","src":"23518:563:0"}],"id":1429,"name":"Return","src":"23511:570:0"}],"id":1430,"name":"Block","src":"23500:589:0"}],"id":1431,"name":"FunctionDefinition","src":"23364:725:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"isValidSignature","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"signer","scope":1459,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1432,"name":"ElementaryTypeName","src":"24466:7:0"}],"id":1433,"name":"VariableDeclaration","src":"24466:14:0"},{"attributes":{"constant":false,"name":"hash","scope":1459,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1434,"name":"ElementaryTypeName","src":"24491:7:0"}],"id":1435,"name":"VariableDeclaration","src":"24491:12:0"},{"attributes":{"constant":false,"name":"v","scope":1459,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1436,"name":"ElementaryTypeName","src":"24514:5:0"}],"id":1437,"name":"VariableDeclaration","src":"24514:7:0"},{"attributes":{"constant":false,"name":"r","scope":1459,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1438,"name":"ElementaryTypeName","src":"24532:7:0"}],"id":1439,"name":"VariableDeclaration","src":"24532:9:0"},{"attributes":{"constant":false,"name":"s","scope":1459,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1440,"name":"ElementaryTypeName","src":"24552:7:0"}],"id":1441,"name":"VariableDeclaration","src":"24552:9:0"}],"id":1442,"name":"ParameterList","src":"24455:107:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1459,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1443,"name":"ElementaryTypeName","src":"24615:4:0"}],"id":1444,"name":"VariableDeclaration","src":"24615:4:0"}],"id":1445,"name":"ParameterList","src":"24614:6:0"},{"children":[{"attributes":{"functionReturnParameters":1445},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1433,"type":"address","value":"signer"},"id":1446,"name":"Identifier","src":"24644:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":1826,"type":"function (bytes32,uint8,bytes32,bytes32) returns (address)","value":"ecrecover"},"id":1447,"name":"Identifier","src":"24654:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string \"\u0019Ethereum Signed Message:\n32\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":1819,"type":"function () returns (bytes32)","value":"keccak256"},"id":1448,"name":"Identifier","src":"24678:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"19457468657265756d205369676e6564204d6573736167653a0a3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"\u0019Ethereum Signed Message:\n32\"","value":"\u0019Ethereum Signed Message:\n32"},"id":1449,"name":"Literal","src":"24688:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1435,"type":"bytes32","value":"hash"},"id":1450,"name":"Identifier","src":"24724:4:0"}],"id":1451,"name":"FunctionCall","src":"24678:51:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1437,"type":"uint8","value":"v"},"id":1452,"name":"Identifier","src":"24744:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1439,"type":"bytes32","value":"r"},"id":1453,"name":"Identifier","src":"24760:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1441,"type":"bytes32","value":"s"},"id":1454,"name":"Identifier","src":"24776:1:0"}],"id":1455,"name":"FunctionCall","src":"24654:134:0"}],"id":1456,"name":"BinaryOperation","src":"24644:144:0"}],"id":1457,"name":"Return","src":"24637:151:0"}],"id":1458,"name":"Block","src":"24626:170:0"}],"id":1459,"name":"FunctionDefinition","src":"24430:366:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRoundingError","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"numerator","scope":1502,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1460,"name":"ElementaryTypeName","src":"25067:4:0"}],"id":1461,"name":"VariableDeclaration","src":"25067:14:0"},{"attributes":{"constant":false,"name":"denominator","scope":1502,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1462,"name":"ElementaryTypeName","src":"25083:4:0"}],"id":1463,"name":"VariableDeclaration","src":"25083:16:0"},{"attributes":{"constant":false,"name":"target","scope":1502,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1464,"name":"ElementaryTypeName","src":"25101:4:0"}],"id":1465,"name":"VariableDeclaration","src":"25101:11:0"}],"id":1466,"name":"ParameterList","src":"25066:47:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1502,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1467,"name":"ElementaryTypeName","src":"25166:4:0"}],"id":1468,"name":"VariableDeclaration","src":"25166:4:0"}],"id":1469,"name":"ParameterList","src":"25165:6:0"},{"children":[{"attributes":{"assignments":[1471]},"children":[{"attributes":{"constant":false,"name":"remainder","scope":1502,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1470,"name":"ElementaryTypeName","src":"25188:4:0"}],"id":1471,"name":"VariableDeclaration","src":"25188:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1817,"type":"function (uint256,uint256,uint256) returns (uint256)","value":"mulmod"},"id":1472,"name":"Identifier","src":"25205:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1465,"type":"uint256","value":"target"},"id":1473,"name":"Identifier","src":"25212:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1461,"type":"uint256","value":"numerator"},"id":1474,"name":"Identifier","src":"25220:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1463,"type":"uint256","value":"denominator"},"id":1475,"name":"Identifier","src":"25231:11:0"}],"id":1476,"name":"FunctionCall","src":"25205:38:0"}],"id":1477,"name":"VariableDeclarationStatement","src":"25188:55:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1471,"type":"uint256","value":"remainder"},"id":1478,"name":"Identifier","src":"25258:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1479,"name":"Literal","src":"25271:1:0"}],"id":1480,"name":"BinaryOperation","src":"25258:14:0"},{"attributes":{"functionReturnParameters":1469},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1481,"name":"Literal","src":"25281:5:0"}],"id":1482,"name":"Return","src":"25274:12:0"}],"id":1483,"name":"IfStatement","src":"25254:32:0"},{"attributes":{"assignments":[1485]},"children":[{"attributes":{"constant":false,"name":"errPercentageTimes1000000","scope":1502,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1484,"name":"ElementaryTypeName","src":"25321:4:0"}],"id":1485,"name":"VariableDeclaration","src":"25321:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":345,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeDiv"},"id":1486,"name":"Identifier","src":"25354:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"overloadedDeclarations":[null],"referencedDeclaration":327,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeMul"},"id":1487,"name":"Identifier","src":"25376:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1471,"type":"uint256","value":"remainder"},"id":1488,"name":"Identifier","src":"25384:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31303030303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1000000","value":"1000000"},"id":1489,"name":"Literal","src":"25395:7:0"}],"id":1490,"name":"FunctionCall","src":"25376:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":327,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeMul"},"id":1491,"name":"Identifier","src":"25418:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1461,"type":"uint256","value":"numerator"},"id":1492,"name":"Identifier","src":"25426:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1465,"type":"uint256","value":"target"},"id":1493,"name":"Identifier","src":"25437:6:0"}],"id":1494,"name":"FunctionCall","src":"25418:26:0"}],"id":1495,"name":"FunctionCall","src":"25354:101:0"}],"id":1496,"name":"VariableDeclarationStatement","src":"25321:134:0"},{"attributes":{"functionReturnParameters":1469},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1485,"type":"uint256","value":"errPercentageTimes1000000"},"id":1497,"name":"Identifier","src":"25473:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1000","value":"1000"},"id":1498,"name":"Literal","src":"25501:4:0"}],"id":1499,"name":"BinaryOperation","src":"25473:32:0"}],"id":1500,"name":"Return","src":"25466:39:0"}],"id":1501,"name":"Block","src":"25177:336:0"}],"id":1502,"name":"FunctionDefinition","src":"25042:471:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getPartialAmount","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"numerator","scope":1522,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1503,"name":"ElementaryTypeName","src":"25795:4:0"}],"id":1504,"name":"VariableDeclaration","src":"25795:14:0"},{"attributes":{"constant":false,"name":"denominator","scope":1522,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1505,"name":"ElementaryTypeName","src":"25811:4:0"}],"id":1506,"name":"VariableDeclaration","src":"25811:16:0"},{"attributes":{"constant":false,"name":"target","scope":1522,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1507,"name":"ElementaryTypeName","src":"25829:4:0"}],"id":1508,"name":"VariableDeclaration","src":"25829:11:0"}],"id":1509,"name":"ParameterList","src":"25794:47:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1522,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1510,"name":"ElementaryTypeName","src":"25894:4:0"}],"id":1511,"name":"VariableDeclaration","src":"25894:4:0"}],"id":1512,"name":"ParameterList","src":"25893:6:0"},{"children":[{"attributes":{"functionReturnParameters":1512},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":345,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeDiv"},"id":1513,"name":"Identifier","src":"25923:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":327,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeMul"},"id":1514,"name":"Identifier","src":"25931:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1504,"type":"uint256","value":"numerator"},"id":1515,"name":"Identifier","src":"25939:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1508,"type":"uint256","value":"target"},"id":1516,"name":"Identifier","src":"25950:6:0"}],"id":1517,"name":"FunctionCall","src":"25931:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1506,"type":"uint256","value":"denominator"},"id":1518,"name":"Identifier","src":"25959:11:0"}],"id":1519,"name":"FunctionCall","src":"25923:48:0"}],"id":1520,"name":"Return","src":"25916:55:0"}],"id":1521,"name":"Block","src":"25905:74:0"}],"id":1522,"name":"FunctionDefinition","src":"25769:210:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUnavailableTakerTokenAmount","payable":false,"scope":1808,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"orderHash","scope":1539,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":1523,"name":"ElementaryTypeName","src":"26245:7:0"}],"id":1524,"name":"VariableDeclaration","src":"26245:17:0"}],"id":1525,"name":"ParameterList","src":"26244:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1539,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1526,"name":"ElementaryTypeName","src":"26316:4:0"}],"id":1527,"name":"VariableDeclaration","src":"26316:4:0"}],"id":1528,"name":"ParameterList","src":"26315:6:0"},{"children":[{"attributes":{"functionReturnParameters":1528},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":389,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeAdd"},"id":1529,"name":"Identifier","src":"26345:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":479,"type":"mapping(bytes32 => uint256)","value":"filled"},"id":1530,"name":"Identifier","src":"26353:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1524,"type":"bytes32","value":"orderHash"},"id":1531,"name":"Identifier","src":"26360:9:0"}],"id":1532,"name":"IndexAccess","src":"26353:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"mapping(bytes32 => uint256)","value":"cancelled"},"id":1533,"name":"Identifier","src":"26372:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1524,"type":"bytes32","value":"orderHash"},"id":1534,"name":"Identifier","src":"26382:9:0"}],"id":1535,"name":"IndexAccess","src":"26372:20:0"}],"id":1536,"name":"FunctionCall","src":"26345:48:0"}],"id":1537,"name":"Return","src":"26338:55:0"}],"id":1538,"name":"Block","src":"26327:74:0"}],"id":1539,"name":"FunctionDefinition","src":"26205:196:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferViaTokenTransferProxy","payable":false,"scope":1808,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":1563,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1540,"name":"ElementaryTypeName","src":"26827:7:0"}],"id":1541,"name":"VariableDeclaration","src":"26827:13:0"},{"attributes":{"constant":false,"name":"from","scope":1563,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1542,"name":"ElementaryTypeName","src":"26851:7:0"}],"id":1543,"name":"VariableDeclaration","src":"26851:12:0"},{"attributes":{"constant":false,"name":"to","scope":1563,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1544,"name":"ElementaryTypeName","src":"26874:7:0"}],"id":1545,"name":"VariableDeclaration","src":"26874:10:0"},{"attributes":{"constant":false,"name":"value","scope":1563,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1546,"name":"ElementaryTypeName","src":"26895:4:0"}],"id":1547,"name":"VariableDeclaration","src":"26895:10:0"}],"id":1548,"name":"ParameterList","src":"26816:90:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1563,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1549,"name":"ElementaryTypeName","src":"26943:4:0"}],"id":1550,"name":"VariableDeclaration","src":"26943:4:0"}],"id":1551,"name":"ParameterList","src":"26942:6:0"},{"children":[{"attributes":{"functionReturnParameters":1551},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":287,"type":"function (address,address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenTransferProxy","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"type(contract TokenTransferProxy)","value":"TokenTransferProxy"},"id":1552,"name":"Identifier","src":"26972:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"address","value":"TOKEN_TRANSFER_PROXY_CONTRACT"},"id":1553,"name":"Identifier","src":"26991:29:0"}],"id":1554,"name":"FunctionCall","src":"26972:49:0"}],"id":1555,"name":"MemberAccess","src":"26972:62:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1541,"type":"address","value":"token"},"id":1556,"name":"Identifier","src":"27035:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1543,"type":"address","value":"from"},"id":1557,"name":"Identifier","src":"27042:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1545,"type":"address","value":"to"},"id":1558,"name":"Identifier","src":"27048:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1547,"type":"uint256","value":"value"},"id":1559,"name":"Identifier","src":"27052:5:0"}],"id":1560,"name":"FunctionCall","src":"26972:86:0"}],"id":1561,"name":"Return","src":"26965:93:0"}],"id":1562,"name":"Block","src":"26954:112:0"}],"id":1563,"name":"FunctionDefinition","src":"26778:288:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"isTransferable","payable":false,"scope":1808,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"order","scope":1766,"stateVariable":false,"storageLocation":"default","type":"struct Exchange.Order memory","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Order","referencedDeclaration":554,"type":"struct Exchange.Order storage pointer"},"id":1564,"name":"UserDefinedTypeName","src":"27343:5:0"}],"id":1565,"name":"VariableDeclaration","src":"27343:11:0"},{"attributes":{"constant":false,"name":"fillTakerTokenAmount","scope":1766,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1566,"name":"ElementaryTypeName","src":"27356:4:0"}],"id":1567,"name":"VariableDeclaration","src":"27356:25:0"}],"id":1568,"name":"ParameterList","src":"27342:40:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1766,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1569,"name":"ElementaryTypeName","src":"27571:4:0"}],"id":1570,"name":"VariableDeclaration","src":"27571:4:0"}],"id":1571,"name":"ParameterList","src":"27570:6:0"},{"children":[{"attributes":{"assignments":[1573]},"children":[{"attributes":{"constant":false,"name":"taker","scope":1766,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1572,"name":"ElementaryTypeName","src":"27593:7:0"}],"id":1573,"name":"VariableDeclaration","src":"27593:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1811,"type":"msg","value":"msg"},"id":1574,"name":"Identifier","src":"27609:3:0"}],"id":1575,"name":"MemberAccess","src":"27609:10:0"}],"id":1576,"name":"VariableDeclarationStatement","src":"27593:26:0"},{"attributes":{"assignments":[1578]},"children":[{"attributes":{"constant":false,"name":"fillMakerTokenAmount","scope":1766,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1577,"name":"ElementaryTypeName","src":"27630:4:0"}],"id":1578,"name":"VariableDeclaration","src":"27630:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"function (uint256,uint256,uint256) constant returns (uint256)","value":"getPartialAmount"},"id":1579,"name":"Identifier","src":"27658:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1580,"name":"Identifier","src":"27675:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1581,"name":"Identifier","src":"27697:5:0"}],"id":1582,"name":"MemberAccess","src":"27697:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerTokenAmount","referencedDeclaration":543,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1583,"name":"Identifier","src":"27721:5:0"}],"id":1584,"name":"MemberAccess","src":"27721:22:0"}],"id":1585,"name":"FunctionCall","src":"27658:86:0"}],"id":1586,"name":"VariableDeclarationStatement","src":"27630:114:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"feeRecipient","referencedDeclaration":541,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1587,"name":"Identifier","src":"27761:5:0"}],"id":1588,"name":"MemberAccess","src":"27761:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1589,"name":"ElementaryTypeNameExpression","src":"27783:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1590,"name":"Literal","src":"27791:1:0"}],"id":1591,"name":"FunctionCall","src":"27783:10:0"}],"id":1592,"name":"BinaryOperation","src":"27761:32:0"},{"children":[{"attributes":{"assignments":[1594]},"children":[{"attributes":{"constant":false,"name":"isMakerTokenZRX","scope":1766,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1593,"name":"ElementaryTypeName","src":"27810:4:0"}],"id":1594,"name":"VariableDeclaration","src":"27810:20:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1595,"name":"Identifier","src":"27833:5:0"}],"id":1596,"name":"MemberAccess","src":"27833:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":1597,"name":"Identifier","src":"27853:18:0"}],"id":1598,"name":"BinaryOperation","src":"27833:38:0"}],"id":1599,"name":"VariableDeclarationStatement","src":"27810:61:0"},{"attributes":{"assignments":[1601]},"children":[{"attributes":{"constant":false,"name":"isTakerTokenZRX","scope":1766,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1600,"name":"ElementaryTypeName","src":"27886:4:0"}],"id":1601,"name":"VariableDeclaration","src":"27886:20:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1602,"name":"Identifier","src":"27909:5:0"}],"id":1603,"name":"MemberAccess","src":"27909:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":1604,"name":"Identifier","src":"27929:18:0"}],"id":1605,"name":"BinaryOperation","src":"27909:38:0"}],"id":1606,"name":"VariableDeclarationStatement","src":"27886:61:0"},{"attributes":{"assignments":[1608]},"children":[{"attributes":{"constant":false,"name":"paidMakerFee","scope":1766,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1607,"name":"ElementaryTypeName","src":"27962:4:0"}],"id":1608,"name":"VariableDeclaration","src":"27962:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"function (uint256,uint256,uint256) constant returns (uint256)","value":"getPartialAmount"},"id":1609,"name":"Identifier","src":"27982:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1610,"name":"Identifier","src":"27999:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1611,"name":"Identifier","src":"28021:5:0"}],"id":1612,"name":"MemberAccess","src":"28021:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerFee","referencedDeclaration":547,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1613,"name":"Identifier","src":"28045:5:0"}],"id":1614,"name":"MemberAccess","src":"28045:14:0"}],"id":1615,"name":"FunctionCall","src":"27982:78:0"}],"id":1616,"name":"VariableDeclarationStatement","src":"27962:98:0"},{"attributes":{"assignments":[1618]},"children":[{"attributes":{"constant":false,"name":"paidTakerFee","scope":1766,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1617,"name":"ElementaryTypeName","src":"28075:4:0"}],"id":1618,"name":"VariableDeclaration","src":"28075:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"function (uint256,uint256,uint256) constant returns (uint256)","value":"getPartialAmount"},"id":1619,"name":"Identifier","src":"28095:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1620,"name":"Identifier","src":"28112:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerTokenAmount","referencedDeclaration":545,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1621,"name":"Identifier","src":"28134:5:0"}],"id":1622,"name":"MemberAccess","src":"28134:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerFee","referencedDeclaration":549,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1623,"name":"Identifier","src":"28158:5:0"}],"id":1624,"name":"MemberAccess","src":"28158:14:0"}],"id":1625,"name":"FunctionCall","src":"28095:78:0"}],"id":1626,"name":"VariableDeclarationStatement","src":"28075:98:0"},{"attributes":{"assignments":[1628]},"children":[{"attributes":{"constant":false,"name":"requiredMakerZRX","scope":1766,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1627,"name":"ElementaryTypeName","src":"28188:4:0"}],"id":1628,"name":"VariableDeclaration","src":"28188:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1594,"type":"bool","value":"isMakerTokenZRX"},"id":1629,"name":"Identifier","src":"28212:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":389,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeAdd"},"id":1630,"name":"Identifier","src":"28230:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1578,"type":"uint256","value":"fillMakerTokenAmount"},"id":1631,"name":"Identifier","src":"28238:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"uint256","value":"paidMakerFee"},"id":1632,"name":"Identifier","src":"28260:12:0"}],"id":1633,"name":"FunctionCall","src":"28230:43:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"uint256","value":"paidMakerFee"},"id":1634,"name":"Identifier","src":"28276:12:0"}],"id":1635,"name":"Conditional","src":"28212:76:0"}],"id":1636,"name":"VariableDeclarationStatement","src":"28188:100:0"},{"attributes":{"assignments":[1638]},"children":[{"attributes":{"constant":false,"name":"requiredTakerZRX","scope":1766,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1637,"name":"ElementaryTypeName","src":"28303:4:0"}],"id":1638,"name":"VariableDeclaration","src":"28303:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"bool","value":"isTakerTokenZRX"},"id":1639,"name":"Identifier","src":"28327:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":389,"type":"function (uint256,uint256) constant returns (uint256)","value":"safeAdd"},"id":1640,"name":"Identifier","src":"28345:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1641,"name":"Identifier","src":"28353:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1618,"type":"uint256","value":"paidTakerFee"},"id":1642,"name":"Identifier","src":"28375:12:0"}],"id":1643,"name":"FunctionCall","src":"28345:43:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1618,"type":"uint256","value":"paidTakerFee"},"id":1644,"name":"Identifier","src":"28391:12:0"}],"id":1645,"name":"Conditional","src":"28327:76:0"}],"id":1646,"name":"VariableDeclarationStatement","src":"28303:100:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1786,"type":"function (address,address) constant returns (uint256)","value":"getBalance"},"id":1647,"name":"Identifier","src":"28427:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":1648,"name":"Identifier","src":"28438:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1649,"name":"Identifier","src":"28458:5:0"}],"id":1650,"name":"MemberAccess","src":"28458:11:0"}],"id":1651,"name":"FunctionCall","src":"28427:43:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1628,"type":"uint256","value":"requiredMakerZRX"},"id":1652,"name":"Identifier","src":"28473:16:0"}],"id":1653,"name":"BinaryOperation","src":"28427:62:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"function (address,address) constant returns (uint256)","value":"getAllowance"},"id":1654,"name":"Identifier","src":"28510:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":1655,"name":"Identifier","src":"28523:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1656,"name":"Identifier","src":"28543:5:0"}],"id":1657,"name":"MemberAccess","src":"28543:11:0"}],"id":1658,"name":"FunctionCall","src":"28510:45:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1628,"type":"uint256","value":"requiredMakerZRX"},"id":1659,"name":"Identifier","src":"28558:16:0"}],"id":1660,"name":"BinaryOperation","src":"28510:64:0"}],"id":1661,"name":"BinaryOperation","src":"28427:147:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1786,"type":"function (address,address) constant returns (uint256)","value":"getBalance"},"id":1662,"name":"Identifier","src":"28595:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":1663,"name":"Identifier","src":"28606:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1573,"type":"address","value":"taker"},"id":1664,"name":"Identifier","src":"28626:5:0"}],"id":1665,"name":"FunctionCall","src":"28595:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1638,"type":"uint256","value":"requiredTakerZRX"},"id":1666,"name":"Identifier","src":"28635:16:0"}],"id":1667,"name":"BinaryOperation","src":"28595:56:0"}],"id":1668,"name":"BinaryOperation","src":"28427:224:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"function (address,address) constant returns (uint256)","value":"getAllowance"},"id":1669,"name":"Identifier","src":"28672:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":473,"type":"address","value":"ZRX_TOKEN_CONTRACT"},"id":1670,"name":"Identifier","src":"28685:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1573,"type":"address","value":"taker"},"id":1671,"name":"Identifier","src":"28705:5:0"}],"id":1672,"name":"FunctionCall","src":"28672:39:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1638,"type":"uint256","value":"requiredTakerZRX"},"id":1673,"name":"Identifier","src":"28714:16:0"}],"id":1674,"name":"BinaryOperation","src":"28672:58:0"}],"id":1675,"name":"BinaryOperation","src":"28427:303:0"},{"attributes":{"functionReturnParameters":1571},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1676,"name":"Literal","src":"28753:5:0"}],"id":1677,"name":"Return","src":"28746:12:0"}],"id":1678,"name":"IfStatement","src":"28420:338:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1594,"type":"bool","value":"isMakerTokenZRX"},"id":1679,"name":"Identifier","src":"28780:15:0"}],"id":1680,"name":"UnaryOperation","src":"28779:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1786,"type":"function (address,address) constant returns (uint256)","value":"getBalance"},"id":1681,"name":"Identifier","src":"28803:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1682,"name":"Identifier","src":"28814:5:0"}],"id":1683,"name":"MemberAccess","src":"28814:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1684,"name":"Identifier","src":"28832:5:0"}],"id":1685,"name":"MemberAccess","src":"28832:11:0"}],"id":1686,"name":"FunctionCall","src":"28803:41:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1578,"type":"uint256","value":"fillMakerTokenAmount"},"id":1687,"name":"Identifier","src":"28847:20:0"}],"id":1688,"name":"BinaryOperation","src":"28803:64:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"function (address,address) constant returns (uint256)","value":"getAllowance"},"id":1689,"name":"Identifier","src":"28949:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1690,"name":"Identifier","src":"28962:5:0"}],"id":1691,"name":"MemberAccess","src":"28962:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1692,"name":"Identifier","src":"28980:5:0"}],"id":1693,"name":"MemberAccess","src":"28980:11:0"}],"id":1694,"name":"FunctionCall","src":"28949:43:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1578,"type":"uint256","value":"fillMakerTokenAmount"},"id":1695,"name":"Identifier","src":"28995:20:0"}],"id":1696,"name":"BinaryOperation","src":"28949:66:0"}],"id":1697,"name":"BinaryOperation","src":"28803:212:0"}],"id":1698,"name":"TupleExpression","src":"28799:217:0"}],"id":1699,"name":"BinaryOperation","src":"28779:237:0"},{"attributes":{"functionReturnParameters":1571},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1700,"name":"Literal","src":"29039:5:0"}],"id":1701,"name":"Return","src":"29032:12:0"}],"id":1702,"name":"IfStatement","src":"28775:269:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"bool","value":"isTakerTokenZRX"},"id":1703,"name":"Identifier","src":"29064:15:0"}],"id":1704,"name":"UnaryOperation","src":"29063:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1786,"type":"function (address,address) constant returns (uint256)","value":"getBalance"},"id":1705,"name":"Identifier","src":"29087:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1706,"name":"Identifier","src":"29098:5:0"}],"id":1707,"name":"MemberAccess","src":"29098:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1573,"type":"address","value":"taker"},"id":1708,"name":"Identifier","src":"29116:5:0"}],"id":1709,"name":"FunctionCall","src":"29087:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1710,"name":"Identifier","src":"29125:20:0"}],"id":1711,"name":"BinaryOperation","src":"29087:58:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"function (address,address) constant returns (uint256)","value":"getAllowance"},"id":1712,"name":"Identifier","src":"29227:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1713,"name":"Identifier","src":"29240:5:0"}],"id":1714,"name":"MemberAccess","src":"29240:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1573,"type":"address","value":"taker"},"id":1715,"name":"Identifier","src":"29258:5:0"}],"id":1716,"name":"FunctionCall","src":"29227:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1717,"name":"Identifier","src":"29267:20:0"}],"id":1718,"name":"BinaryOperation","src":"29227:60:0"}],"id":1719,"name":"BinaryOperation","src":"29087:200:0"}],"id":1720,"name":"TupleExpression","src":"29083:205:0"}],"id":1721,"name":"BinaryOperation","src":"29063:225:0"},{"attributes":{"functionReturnParameters":1571},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1722,"name":"Literal","src":"29311:5:0"}],"id":1723,"name":"Return","src":"29304:12:0"}],"id":1724,"name":"IfStatement","src":"29059:257:0"}],"id":1725,"name":"Block","src":"27795:1533:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1786,"type":"function (address,address) constant returns (uint256)","value":"getBalance"},"id":1726,"name":"Identifier","src":"29341:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1727,"name":"Identifier","src":"29352:5:0"}],"id":1728,"name":"MemberAccess","src":"29352:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1729,"name":"Identifier","src":"29370:5:0"}],"id":1730,"name":"MemberAccess","src":"29370:11:0"}],"id":1731,"name":"FunctionCall","src":"29341:41:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1578,"type":"uint256","value":"fillMakerTokenAmount"},"id":1732,"name":"Identifier","src":"29385:20:0"}],"id":1733,"name":"BinaryOperation","src":"29341:64:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"function (address,address) constant returns (uint256)","value":"getAllowance"},"id":1734,"name":"Identifier","src":"29429:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"makerToken","referencedDeclaration":537,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1735,"name":"Identifier","src":"29442:5:0"}],"id":1736,"name":"MemberAccess","src":"29442:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"maker","referencedDeclaration":533,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1737,"name":"Identifier","src":"29460:5:0"}],"id":1738,"name":"MemberAccess","src":"29460:11:0"}],"id":1739,"name":"FunctionCall","src":"29429:43:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1578,"type":"uint256","value":"fillMakerTokenAmount"},"id":1740,"name":"Identifier","src":"29475:20:0"}],"id":1741,"name":"BinaryOperation","src":"29429:66:0"}],"id":1742,"name":"BinaryOperation","src":"29341:154:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1786,"type":"function (address,address) constant returns (uint256)","value":"getBalance"},"id":1743,"name":"Identifier","src":"29519:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1744,"name":"Identifier","src":"29530:5:0"}],"id":1745,"name":"MemberAccess","src":"29530:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1573,"type":"address","value":"taker"},"id":1746,"name":"Identifier","src":"29548:5:0"}],"id":1747,"name":"FunctionCall","src":"29519:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1748,"name":"Identifier","src":"29557:20:0"}],"id":1749,"name":"BinaryOperation","src":"29519:58:0"}],"id":1750,"name":"BinaryOperation","src":"29341:236:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"function (address,address) constant returns (uint256)","value":"getAllowance"},"id":1751,"name":"Identifier","src":"29601:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"takerToken","referencedDeclaration":539,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"struct Exchange.Order memory","value":"order"},"id":1752,"name":"Identifier","src":"29614:5:0"}],"id":1753,"name":"MemberAccess","src":"29614:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1573,"type":"address","value":"taker"},"id":1754,"name":"Identifier","src":"29632:5:0"}],"id":1755,"name":"FunctionCall","src":"29601:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"uint256","value":"fillTakerTokenAmount"},"id":1756,"name":"Identifier","src":"29641:20:0"}],"id":1757,"name":"BinaryOperation","src":"29601:60:0"}],"id":1758,"name":"BinaryOperation","src":"29341:320:0"},{"attributes":{"functionReturnParameters":1571},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1759,"name":"Literal","src":"29680:5:0"}],"id":1760,"name":"Return","src":"29673:12:0"}],"id":1761,"name":"IfStatement","src":"29334:351:0"}],"id":1762,"name":"IfStatement","src":"27757:1928:0"},{"attributes":{"functionReturnParameters":1571},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1763,"name":"Literal","src":"29705:4:0"}],"id":1764,"name":"Return","src":"29698:11:0"}],"id":1765,"name":"Block","src":"27582:2135:0"}],"id":1766,"name":"FunctionDefinition","src":"27319:2398:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getBalance","payable":false,"scope":1808,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":1786,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1767,"name":"ElementaryTypeName","src":"29913:7:0"}],"id":1768,"name":"VariableDeclaration","src":"29913:13:0"},{"attributes":{"constant":false,"name":"owner","scope":1786,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1769,"name":"ElementaryTypeName","src":"29928:7:0"}],"id":1770,"name":"VariableDeclaration","src":"29928:13:0"}],"id":1771,"name":"ParameterList","src":"29912:30:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1786,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1772,"name":"ElementaryTypeName","src":"30107:4:0"}],"id":1773,"name":"VariableDeclaration","src":"30107:4:0"}],"id":1774,"name":"ParameterList","src":"30106:6:0"},{"children":[{"attributes":{"functionReturnParameters":1774},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function (address) constant external returns (uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"gas","referencedDeclaration":null,"type":"function (uint256) returns (function (address) constant external returns (uint256))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOf","referencedDeclaration":57,"type":"function (address) constant external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Token","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"type(contract Token)","value":"Token"},"id":1775,"name":"Identifier","src":"30136:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1768,"type":"address","value":"token"},"id":1776,"name":"Identifier","src":"30142:5:0"}],"id":1777,"name":"FunctionCall","src":"30136:12:0"}],"id":1778,"name":"MemberAccess","src":"30136:22:0"}],"id":1779,"name":"MemberAccess","src":"30136:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":471,"type":"uint16","value":"EXTERNAL_QUERY_GAS_LIMIT"},"id":1780,"name":"Identifier","src":"30163:24:0"}],"id":1781,"name":"FunctionCall","src":"30136:52:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1770,"type":"address","value":"owner"},"id":1782,"name":"Identifier","src":"30189:5:0"}],"id":1783,"name":"FunctionCall","src":"30136:59:0"}],"id":1784,"name":"Return","src":"30129:66:0"}],"id":1785,"name":"Block","src":"30118:120:0"}],"id":1786,"name":"FunctionDefinition","src":"29893:345:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getAllowance","payable":false,"scope":1808,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":1807,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1787,"name":"ElementaryTypeName","src":"30502:7:0"}],"id":1788,"name":"VariableDeclaration","src":"30502:13:0"},{"attributes":{"constant":false,"name":"owner","scope":1807,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1789,"name":"ElementaryTypeName","src":"30517:7:0"}],"id":1790,"name":"VariableDeclaration","src":"30517:13:0"}],"id":1791,"name":"ParameterList","src":"30501:30:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1807,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1792,"name":"ElementaryTypeName","src":"30696:4:0"}],"id":1793,"name":"VariableDeclaration","src":"30696:4:0"}],"id":1794,"name":"ParameterList","src":"30695:6:0"},{"children":[{"attributes":{"functionReturnParameters":1794},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function (address,address) constant external returns (uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"gas","referencedDeclaration":null,"type":"function (uint256) returns (function (address,address) constant external returns (uint256))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"allowance","referencedDeclaration":99,"type":"function (address,address) constant external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Token","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"type(contract Token)","value":"Token"},"id":1795,"name":"Identifier","src":"30725:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1788,"type":"address","value":"token"},"id":1796,"name":"Identifier","src":"30731:5:0"}],"id":1797,"name":"FunctionCall","src":"30725:12:0"}],"id":1798,"name":"MemberAccess","src":"30725:22:0"}],"id":1799,"name":"MemberAccess","src":"30725:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":471,"type":"uint16","value":"EXTERNAL_QUERY_GAS_LIMIT"},"id":1800,"name":"Identifier","src":"30752:24:0"}],"id":1801,"name":"FunctionCall","src":"30725:52:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1790,"type":"address","value":"owner"},"id":1802,"name":"Identifier","src":"30778:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"address","value":"TOKEN_TRANSFER_PROXY_CONTRACT"},"id":1803,"name":"Identifier","src":"30785:29:0"}],"id":1804,"name":"FunctionCall","src":"30725:90:0"}],"id":1805,"name":"Return","src":"30718:97:0"}],"id":1806,"name":"Block","src":"30707:151:0"}],"id":1807,"name":"FunctionDefinition","src":"30480:378:0"}],"id":1808,"name":"ContractDefinition","src":"7511:23350:0"}],"id":1809,"name":"SourceUnit","src":"598:30263:0"}}}}
